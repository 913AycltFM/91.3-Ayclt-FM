{"version":3,"file":"amplitude.js","mappings":"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","sources":["webpack://Amplitude/webpack/universalModuleDefinition","webpack://Amplitude/./src/config.js","webpack://Amplitude/./src/core/Audio.js","webpack://Amplitude/./src/elements/MetaDataElement.js","webpack://Amplitude/./src/elements/PauseElement.js","webpack://Amplitude/./src/elements/PauseElements/AudioPauseElement.js","webpack://Amplitude/./src/elements/PauseElements/CollectionAudioPauseElement.js","webpack://Amplitude/./src/elements/PauseElements/CollectionPauseElement.js","webpack://Amplitude/./src/elements/PauseElements/GlobalPauseElement.js","webpack://Amplitude/./src/elements/PlayElement.js","webpack://Amplitude/./src/elements/PlayElements/AudioPlayElement.js","webpack://Amplitude/./src/elements/PlayElements/CollectionAudioPlayElement.js","webpack://Amplitude/./src/elements/PlayElements/CollectionPlayElement.js","webpack://Amplitude/./src/elements/PlayElements/GlobalPlayElement.js","webpack://Amplitude/./src/elements/PlayPauseElement.js","webpack://Amplitude/./src/elements/PlayPauseElements/AudioPlayPauseElement.js","webpack://Amplitude/./src/elements/PlayPauseElements/CollectionAudioPlayPauseElement.js","webpack://Amplitude/./src/elements/PlayPauseElements/CollectionPlayPauseElement.js","webpack://Amplitude/./src/elements/PlayPauseElements/GlobalPlayPauseElement.js","webpack://Amplitude/./src/events/TimeUpdateEvent.js","webpack://Amplitude/./src/init/Initializer.js","webpack://Amplitude/./src/methods/config.js","webpack://Amplitude/./src/methods/init.js","webpack://Amplitude/./src/methods/playlists.js","webpack://Amplitude/./src/services/Audio/Checks.js","webpack://Amplitude/./src/services/Audio/Navigation.js","webpack://Amplitude/./src/services/Callbacks.js","webpack://Amplitude/./src/services/Collections/Checks.js","webpack://Amplitude/./src/services/Collections/Navigation.js","webpack://Amplitude/./src/services/ConfigState.js","webpack://Amplitude/./src/services/EventManager.js","webpack://Amplitude/./src/services/UIManager.js","webpack://Amplitude/./src/utilities/debug.js","webpack://Amplitude/webpack/bootstrap","webpack://Amplitude/webpack/runtime/define property getters","webpack://Amplitude/webpack/runtime/hasOwnProperty shorthand","webpack://Amplitude/webpack/runtime/make namespace object","webpack://Amplitude/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Amplitude\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Amplitude\"] = factory();\n\telse\n\t\troot[\"Amplitude\"] = factory();\n})(self, () => {\nreturn ","/**\n * These variables make Amplitude run. The config is the most important\n * containing active settings and parameters.\n *\n * The config JSON is the global settings for ALL of Amplitude functions.\n * This is global and contains all of the user preferences. The default\n * settings are set, and the user overwrites them when they initialize\n * Amplitude.\n *\n * @module config\n * @type {object}\n * @property {string}  \tconfig.version          \t\t\t\t- The current version of AmplitudeJS.\n * @property {object} \tconfig.audio_element \t\t \t\t\t\t-\tHandles all of the audio.\n * @property {object} \tconfig.active_metadata\t\t\t\t\t- Contains the active metadata for the song.\n * @property {string} \tconfig.active_album\t\t\t\t\t\t\t- Holds the active album name. Used to check and see if the album changed and run the album changed callback.\n * @property {number} \tconfig.active_index\t\t\t\t\t\t\t- Contains the index of the actively playing song.\n * @property {string} \tconfig.active_playlist\t\t\t\t\t- Contains the key to the active playlist index.\n * @property {number} \tconfig.playback_speed\t\t\t\t\t\t- Sets the initial playback speed of the song. The values for this can be 1.0, 1.5, 2.0\n * @property {object} \tconfig.callbacks\t\t\t\t\t\t\t\t- The user can pass a JSON object with a key => value store of callbacks to be run at certain events.\n * @property {array} \t\tconfig.songs\t\t\t\t\t\t\t\t\t\t- Contains all of the songs the user has passed to Amplitude to use.\n * @property {object} \tconfig.playlists\t\t\t\t\t\t\t\t- Contains all of the playlists the user created.\n * @property {object} \tconfig.start_song \t\t\t\t\t\t\t- The index of the song that AmplitudeJS should start with.\n * @property {string} \tconfig.starting_playlist \t\t\t\t- The starting playlist the player will intiialize to.\n * @property {string} \tconfig.starting_playlist_song \t- The index of the song in the playlist that should be started.\n * @property {boolean} \tconfig.repeat \t\t\t\t\t\t\t\t\t- When repeat is on, when the song ends the song will replay itself.\n * @property {object} \tconfig.shuffle_list\t\t\t\t\t\t\t- When shuffled, gets populated with the songs the user provided in a random order.\n * @property {boolean} \tconfig.shuffle_on\t\t\t\t\t\t\t\t- When on, gets set to true so when traversing through songs, AmplitudeJS knows whether or not to use the songs object or the shuffle_list\n * @property {string}\t\tconfig.default_album_art \t\t\t\t- The user can set default album art to be displayed if the song they set doesn't contain album art.\n * @property {string} \tconfig.default_playlist_art \t\t- The user can set default playlist art to be displayed if the playlist they are setting meta data for doesn't contain an art picture.\n * @property {boolean} \tconfig.debug\t\t\t\t\t\t\t\t\t\t- When set to true, AmplitudeJS will print to the console any errors providing helpful feedback to the user.\n * @property {number} \tconfig.volume \t\t\t\t\t\t\t\t\t- The user can set the initial volume to a number between 0 and 1 over-riding the default of .5\n * @property {number} \tconfig.pre_mute_volume \t\t\t\t\t- This is set on mute so that when a user un-mutes AmplitudeJS knows what to restore the volume to.\n * @property {number}\t\tconfig.volume_increment \t\t\t\t- The default values are an integer between 1 and 100 for how much the volume should increase when the user presses the volume up button.\n * @property {number}\t\tconfig.volume_decrement \t\t\t\t- The default values are an integer between 1 and 100 for how much the volume should decrease when the user presses the volume down button.\n * @property {string} \tconfig.soundcloud_client \t\t\t\t- When using SoundCloud, the user will have to provide their API Client ID\n * @property {boolean} \tconfig.soundcloud_use_art \t\t\t- The user can set this to true and AmplitudeJS will use the album art for the song returned from the Soundcloud API\n * @property {number} \tconfig.soundcloud_song_count \t\t- Used on config to count how many songs are from Soundcloud and compare it to how many are ready for when to move to the rest of the configuration\n * @property {number} \tconfig.soundcloud_songs_ready \t- Used on config to count how many songs are ready so when we get all of the data from the SoundCloud API that we need this should match the SoundCloud song count meaning we can move to the rest of the config.\n * @property {integer}\tconfig.is_touch_moving \t\t\t\t\t- Flag for if the user is moving the screen.\n * @property {boolean}\tconfig.buffered\t\t\t\t\t\t\t\t\t- How much of the song is buffered.\n * @property {object} \tconfig.bindings\t\t\t\t\t\t\t\t\t- Array of bindings to certain key events.\n * @property {boolean} \tconfig.continue_next \t\t\t\t\t\t- Determines when a song ends, we should continue to the next song.\n * @property {number}   config.delay \t\t\t\t\t\t\t\t\t\t- Sets the delay between songs in MS.\n * @property {boolean}  config.use_web_audio_api \t\t\t\t- Flag that determines if the user wants to use Web Audio API Components.\n * @property {boolean}  config.web_audio_api_available  - Flag that determines if the Web Audio API is available.\n * @property {object}  \tconfig.context \t\t\t\t\t\t\t\t\t- Web Audio API Context\n * @property {object}\t\tconfig.source \t\t\t\t\t\t\t\t\t- Web Audio API Source\n * @property {object} \tconfig.analyser \t\t\t\t\t\t\t\t- Web Audio API Analyser\n * @property {string}\t\tconfig.player_state \t\t\t\t\t\t- The current state of the player.\n */\nimport version from \"../package.json\";\n\nexport const config = {\n  version: version,\n  mobile: false,\n  audio_element: new Audio(),\n\n  active_metadata: {},\n\n  active_album: \"\",\n\n  active_index: 0,\n\n  active_podcast: null,\n  active_playlist: null,\n  active_collection: null,\n\n  playback_speed: 1.0,\n\n  callbacks: {},\n\n  songs: [],\n  episodes: [],\n  audio: [],\n\n  playlists: [],\n  seasons: [],\n  podcasts: [],\n\n  start_audio: \"\",\n\n  starting_playlist: \"\",\n  starting_playlist_song: \"\",\n\n  starting_podcast: \"\",\n  starting_podcast_episode: \"\",\n\n  repeat: false,\n\n  repeat_song: false,\n\n  shuffle_list: {},\n\n  shuffle_on: false,\n\n  default_artwork: \"\",\n\n  default_playlist_art: \"\",\n\n  debug: true,\n\n    /**\n     * @todo BREAKING CHANGE\n     */\n    volume: {\n        initial: 0.5,\n        increment: 5,\n        decrement: 5,\n        pre_mute_level: 0.5\n    },\n//   volume: 0.5,\n\n//   pre_mute_volume: 0.5,\n\n//   volume_increment: 5,\n\n//   volume_decrement: 5,\n\n    /**\n     * @todo BREAKING CHANGE\n     */\n    soundcloud: {\n        client: '',\n        use_art: false,\n        audio_count: 0,\n        ready_count: 0\n    },\n  // soundcloud_client: \"\",\n\n  // soundcloud_use_art: false,\n\n  // soundcloud_song_count: 0,\n\n  // soundcloud_songs_ready: 0,\n\n  is_touch_moving: false,\n\n  buffered: 0,\n\n  bindings: {},\n\n  continue_next: true,\n\n  delay: 0,\n\n  player_state: \"stopped\",\n\n  /**\n   * @todo BREAKING\n   */\n  web_audio_api:{\n      availabile: false,\n      context: null,\n      source: null,\n      analyser: null\n  },\n//   web_audio_api_available: false,\n\n//   context: null,\n\n//   source: null,\n\n//   analyser: null,\n\n  visualizations: {\n    available: [],\n\n    active: [],\n\n    backup: \"\"\n  },\n\n  waveforms: {\n    sample_rate: 100,\n\n    built: []\n  }\n};\n","import { config } from \"@/config.js\";\nimport { ConfigState } from \"../services/ConfigState\";\n\nexport class Audio{\n    play(){\n        this.#startVisualizations();\n        this.#reconnectStream();\n        this.#playAudio();\n        ConfigState.setPlayerState();\n    }\n\n    pause(){\n        this.#stopVisualizations();\n        this.#pauseAudio();\n        this.#disconnectStream();\n        ConfigState.setPlayerState();\n    }\n\n    stop(){\n        this.#stopVisualizations();\n        this.#setCurrentTime(0);\n        this.#pauseAudio();\n        this.#disconnectStream();\n        ConfigState.setPlayerState();\n        /**\n         * @todo run stop callback\n         */\n    }\n\n    /**\n     * \n     * @param {number} volumeLevel - A number between 1 - 100 as percentage of volume.\n     */\n    setVolume( volumeLevel ){\n        this.#setMuted( volumeLevel );\n        this.#setAudioVolume( volumeLevel );\n    }\n\n    setAudioLocation( percentage ){\n        if( !config.active_metadata.live ){\n            config.audio_element.currentTime = config.audio_element.duration * ( percentage / 100 );\n        }\n    }\n\n    setPlaybackSpeed( playbackSpeed ){\n        config.playback_speed = playbackSpeed;\n        config.audio_element.playbackRate = config.playback_speed;\n    }\n\n    #startVisualizations(){\n        // Visualizations.stop();\n        // Visualizations.run();\n    }\n\n    #stopVisualizations(){\n        // Visualizations.stop();\n    }\n\n    #reconnectStream(){\n        /*\n            Mobile remote sources need to be reconnected on play. I think this is\n            because mobile browsers are optimized not to load all resources\n            for speed reasons. We only do this if mobile and the paused button\n            is not clicked. If the pause button was clicked then we don't reconnect\n            or the user will lose their place in the stream.\n        */ \n        if( config.active_metadata.live \n            || ( ConfigState.isMobile() && !config.paused ) ){\n                config.audio_element.src = config.active_metadata.url;\n                config.audio_element.load();\n        }\n    }\n\n    #disconnectStream(){\n        if( config.active_metadata.live ){\n            config.audio_element.src = \"\";\n            config.audio_element.load();\n        }\n    }\n\n    #playAudio(){\n        let playPromise = config.audio_element.play();\n\n        if( playPromise !== undefined ){\n            playPromise.then(_ => {}).catch(error => {});\n        }\n\n        config.audio_element.playbackRate = config.playback_speed;\n    }\n\n    #pauseAudio(){\n        config.audio_element.pause();\n        config.paused = true;\n    }\n\n    #setCurrentTime( seconds ){\n        config.audio_element.currentTime = seconds;\n    }\n\n    #setMuted( volumeLevel ){\n        if( volumeLevel == 0 ){\n            config.audio_element.muted = true;\n        }else{\n            config.audio_element.muted = false;\n        }\n    }\n\n    #setAudioVolume( volumeLevel ){\n        config.volume = volumeLevel;\n        config.audio_element.volume = ( volumeLevel / 100 );\n    }\n}","import { config } from \"@/config\";\n\nexport class MetaDataElement {\n    static globalMetaDataElementsQuery = '[data-amplitude-audio-info]:not([data-amplitude-audio-index]):not([data-amplitude-collection-key])';\n    static collectionMetaDataElementsQuery = '[data-amplitude-audio-info][data-amplitude-collection-key]:not([data-amplitude-audio-index])';\n    static audioMetaDataElementsQuery = '[data-amplitude-audio-info][data-amplitude-audio-index]:not([data-amplitude-collection-key])';\n    static collectionAudioMetaDataElementsQuery = '[data-amplitude-audio-info][data-amplitude-audio-index][data-amplitude-collection-key]';\n    static collectionInfoElementsQuery = '[data-amplitude-collection-info]';\n\n    #imageMetaDataKeys = [\n        \"cover_art_url\",\n        \"station_art_url\",\n        \"podcast_episode_cover_art_url\",\n        \"album_art_url\"\n    ]\n\n    /**\n     * Gets called after audio has been changed. Updates all of the global\n     * elements and collection elements, not the individual audio elements.\n     * Individual audio elements should only be dynamically set once and not again\n     * since they never change.\n     * \n     * Examples:\n     * Update - Global cover art for a song.\n     * Update - Playlist now playing cover art.\n     * Update - Podcast now playing cover art.\n     * Do Not Update - Individual audio element. These will be set with syncMetaData()\n     * and won't need to be updated again.\n     */\n    displayMetaData(){\n        this.#displayGlobalMetaElements();\n        this.#displayCollectionMetaElements();\n    }\n\n    #displayGlobalMetaElements(){\n        let globalAudioInfoElements = document.querySelectorAll( MetaDataElement.globalMetaDataElementsQuery );\n\n        globalAudioInfoElements.forEach( ( element ) => {\n            let key = element.getAttribute('data-amplitude-audio-info');\n            let value = ( config.active_metadata[ key ] != undefined ) ? config.active_metadata[ key ] : null;\n\n            this.#setMetaValue( key, value, element );\n        });\n    }\n\n    #displayCollectionMetaElements(){\n        let collectionInfoElements = document.querySelectorAll( MetaDataElement.collectionMetaDataElementsQuery );\n\n        collectionInfoElements.forEach( ( element ) => {\n            let key = element.getAttribute('data-amplitude-audio-info');\n            let value = ( config.active_metadata[ key ] != undefined ) ? config.active_metadata[ key ] : null;\n\n            this.#setMetaValue( key, value, element );\n        });\n    }\n    \n    #displayAudioMetaElements(){\n        let audioInfoElements = document.querySelectorAll( MetaDataElement.audioMetaDataElementsQuery );\n\n        audioInfoElements.forEach( ( element ) => {\n            let key = element.getAttribute('data-amplitude-audio-info');\n            let audioIndex = element.getAttribute('data-amplitude-audio-index');\n            let value = config.audio[ audioIndex ][ key ] != undefined ? config.audio[ audioIndex ][ key ] : null;\n\n            this.#setMetaValue( key, value, element );\n        });\n    }\n\n    #displayCollectionAudioMetaElements(){\n        let collectionAudioInfoElements = document.querySelectorAll( MetaDataElement.collectionAudioMetaDataElementsQuery );\n\n        collectionAudioInfoElements.forEach( ( element ) => {\n            let key = element.getAttribute('data-amplitude-audio-info');\n            let audioIndex = element.getAttribute('data-amplitude-audio-index');\n            let collectionKey = element.getAttribute('data-amplitude-collection-key');\n            let value = config.collections[ collectionKey ].audio[ audioIndex ][ info ] != undefined\n                            ? config.collections[ collectionKey ].audio[ audioIndex ][ info ]\n                            : null;\n\n            this.#setMetaValue( key, value, element );\n        });\n    }\n\n    #setMetaValue( key, value, element ){\n        if( this.#imageMetaDataKeys.indexOf( key ) >= 0 ){\n            value = value || config.default_art;\n            element.setAttribute('src', value);\n        }else{\n            value = value || \"\";\n            element.innerHTML = value;\n        }\n    }\n\n    displayCollectionMetaData(){\n\n    }\n\n    syncMetaData(){\n        this.#displayAudioMetaElements();\n        this.#displayCollectionAudioMetaElements();\n        this.displayCollectionMetaData();\n    }\n}","import { GlobalPauseElement } from \"./PauseElements/GlobalPauseElement\";\nimport { CollectionPauseElement } from \"./PauseElements/CollectionPauseElement\";\nimport { AudioPauseElement } from \"./PauseElements/AudioPauseElement\";\nimport { CollectionAudioPauseElement } from \"./PauseElements/CollectionAudioPauseElement\";\n\n/**\n * Handles the configuration and managing of Pause elements.\n * \n * A Pause element is defined as the following:\n * \n * Element: class=\"amplitude-pause\"\n * \n * GLOBAL: class=\"amplitude-pause\"\n * Controls the entire state of the audio player.\n * \n * COLLECTION: class=\"amplitude-pause\" data-amplitude-collection=\"{collection_key}\"\n * Scoped to an individual collection. Will only pause what's within the scope of the collection.\n * \n * AUDIO: class=\"amplitude-pause\" data-amplitude-audio-index=\"{audio_index}\"\n * Scoped to an individual audio element.\n * \n * AUDIO IN COLLECTION: class=\"amplitude-pause\" data-amplitude-collection-key=\"{collection_key}\" data-amplitude-audio-index=\"{audio_index}\"\n * Scoped to an individual audio element within a collection.\n */\nexport class PauseElement {\n    setUp(){\n        this.#configureGlobalPauseElement();\n        this.#configureCollectionPauseElement();\n        this.#configureAudioPauseElement();\n        this.#configureCollectionAudioPauseElement();\n    }\n\n    #configureGlobalPauseElement(){\n        let globalPauseElement = new GlobalPauseElement();\n        globalPauseElement.initialize();\n    }\n\n    #configureCollectionPauseElement(){\n        let collectionPauseElement = new CollectionPauseElement();\n        collectionPauseElement.initialize();\n    }\n\n    #configureAudioPauseElement(){\n        let audioPauseElement = new AudioPauseElement();\n        audioPauseElement.initialize();\n    }\n\n    #configureCollectionAudioPauseElement(){\n        let collectionAudioPauseElement = new CollectionAudioPauseElement();\n        collectionAudioPauseElement.initialize();\n    }\n}","import { Audio } from \"@/core/Audio\";\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\nimport { config } from \"../../config\";\n\nexport class AudioPauseElement{\n    static audioPauseQuery = \".amplitude-pause[data-amplitude-audio-index]:not([data-amplitude-collection-key])\";\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( AudioPauseElement.audioPauseQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( (element) => {\n            if( this.#mobile ){\n                element.removeEventListener(\"touchend\", this.#handleInteraction );\n                element.addEventListener(\"touchend\", this.#handleInteraction );\n            }else{\n                element.removeEventListener(\"click\", this.#handleInteraction );\n                element.addEventListener(\"click\", this.#handleInteraction );\n            }\n        });\n    }\n\n    #handleInteraction(){\n        if( !ConfigState.isTouchMoving() ){\n            let audioIndex = this.attribute('data-amplitude-audio-index');\n\n            // If the scope is audio and the index of the element matches the active audio\n            // index, then we pause the player.\n            if( ConfigState.getScope() == 'audio' && ( config.active_index == audioIndex ) ){\n                let audio = new Audio();\n                audio.pause();\n\n                PlayPauseElement.syncAll();\n            }\n        }\n    }\n}","import { Audio } from \"@/core/Audio\";\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\nimport { config } from \"@/config\";\n\nexport class CollectionAudioPauseElement{\n    static collectionAudioPauseQuery = '.amplitude-pause[data-amplitude-collection-key][data-amplitude-audio-index]';\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( CollectionAudioPauseElement.collectionAudioPauseQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( (element) => {\n            if( this.#mobile ){\n                element.removeEventListener(\"touchend\", this.#handleInteraction );\n                element.addEventListener(\"touchend\", this.#handleInteraction );\n            }else{\n                element.removeEventListener(\"click\", this.#handleInteraction );\n                element.addEventListener(\"click\", this.#handleInteraction );\n            }\n        });\n    }\n\n    #handleInteraction(){\n        if( !ConfigState.isTouchMoving() ){\n            let collectionKey = this.attribute('data-amplitude-collection-key');\n            let audioIndex = this.attribute('data-amplitude-audio-index');\n\n            if( config.active_collection == collectionKey &&\n                config.collections[ collectionKey ].active_index == audioIndex ){\n                    let audio = new Audio();\n                    audio.pause();\n\n                    PlayPauseElement.syncAll();\n            }\n        }\n    }\n}","import { Audio } from \"@/core/Audio\";\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\n\nexport class CollectionPauseElement{\n    static collectionPauseQuery = '.amplitude-pause[data-amplitude-collection-key]:not([data-amplitude-audio-index])';\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( CollectionPauseElement.collectionPauseQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( (element) => {\n            if( this.#mobile ){\n                element.removeEventListener(\"touchend\", this.#handleInteraction );\n                element.addEventListener(\"touchend\", this.#handleInteraction );\n            }else{\n                element.removeEventListener(\"click\", this.#handleInteraction );\n                element.addEventListener(\"click\", this.#handleInteraction );\n            }\n        });\n    }\n\n    #handleInteraction(){\n        if( !ConfigState.isTouchMoving() ){\n            let collectionKey = this.attribute('data-amplitude-collection-key');\n            \n            // Ensure we pause the audio if the active collection is\n            // what is controlled by this pause element.\n            if( config.active_collection == collectionKey ){\n                let audio = new Audio();\n                audio.pause();\n\n                PlayPauseElement.syncAll();\n            }\n        }\n    }\n}","import { Audio } from \"@/core/Audio\";\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\n\nexport class GlobalPauseElement {\n    static globalPauseQuery = '.amplitude-pause:not([data-amplitude-audio-index]):not([data-amplitude-collection-key])';\n    \n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( GlobalPauseElement.globalPauseQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( ( element ) => {\n            if( this.#mobile ){\n                element.removeEventListener( \"touchend\", this.#handleInteraction );\n                element.addEventListener( \"touchend\", this.#handleInteraction );\n            }else{\n                element.removeEventListener( \"click\", this.#handleInteraction );\n                element.addEventListener( \"click\", this.#handleInteraction );\n            }\n        });\n    }\n\n    #handleInteraction(){\n        if( !ConfigState.isTouchMoving() ){\n            let audio = new Audio();\n            audio.pause();\n\n            PlayPauseElement.syncAll();\n        }\n    }\n}","import { GlobalPlayElement } from \"./PlayElements/GlobalPlayElement\";\nimport { CollectionPlayElement } from \"./PlayElements/CollectionPlayElement\";\nimport { AudioPlayElement } from \"./PlayElements/AudioPlayElement\";\nimport { CollectionAudioPlayElement } from \"./PlayElements/CollectionAudioPlayElement\";\n/**\n * Handles the configuration and managing of the play elements.\n * \n * A Play element is defined as the following:\n * \n * Element: class=\"amplitude-play\"\n * \n * GLOBAL: class=\"amplitude-play\"\n * Controls the entire state of the audio player. Will play whatever is active.\n * \n * COLLECTION: class=\"amplitude-play\" data-amplitude-collection-key=\"{collection_key}\"\n * Scoped to an individual collection. Will only play within the collection.\n * \n * AUDIO: class=\"amplitude-play\" data-amplitude-audio-index=\"{audio_index}\"\n * Scoped to an individual audio element. Will only play a specific piece of audio.\n * \n * AUDIO IN COLLECTION: class=\"amplitude-play\" data-amplitude-collection-key=\"{collection_key}\" data-amplitude-audio-index=\"{audio_index}\"\n * Scoped to an individual audio element within a collection. Will only play a specific piece of audio in a collection.\n */\nexport class PlayElement{\n    setUp(){\n        this.#configureGlobalPlayElement();\n        this.#configureCollectionPlayElement();\n        this.#configureAudioPlayElement();\n        this.#configureCollectionAudioPlayElement();\n    }\n\n    #configureGlobalPlayElement(){\n        let globalPlayElement = new GlobalPlayElement();\n        globalPlayElement.initialize();\n    }\n\n    #configureCollectionPlayElement(){\n        let collectionPlayElement = new CollectionPlayElement();\n        collectionPlayElement.initialize();\n    }\n\n    #configureAudioPlayElement(){\n        let audioPlayElement = new AudioPlayElement();\n        audioPlayElement.initialize();\n    }\n\n    #configureCollectionAudioPlayElement(){\n        let collectionAudioPlayElement = new CollectionAudioPlayElement();\n        collectionAudioPlayElement.initialize();\n    }\n}","import { Audio } from '@/core/Audio.js';\nimport { Checks as AudioChecks } from '@/services/Audio/Checks.js';\nimport { Navigation as AudioNavigation } from '@/services/Audio/Navigation.js';\nimport { Checks as CollectionChecks } from '@/services/Collections/Checks.js';\nimport { Navigation as CollectionNavigation } from '@/services/Collections/Navigation.js';\nimport { Debug } from '@/utilities/debug';\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { config } from \"@/config\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\n\nexport class AudioPlayElement {\n    static audioPlayQuery = '.amplitude-play[data-amplitude-audio-index]:not([data-amplitude-collection-key])';\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( AudioPlayElement.audioPlayQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( (element) => {;\n            if( this.#mobile ){\n                element.removeEventListener(\"touchend\", this.#handleInteraction );\n                element.addEventListener(\"touchend\", this.#handleInteraction );\n            }else{\n                element.removeEventListener(\"click\", this.#handleInteraction );\n                element.addEventListener(\"click\", this.#handleInteraction );\n            }\n        } );\n    }\n\n    #handleInteraction(){\n        if( !ConfigState.isTouchMoving() ){\n            let index = this.attribute('data-amplitude-audio-index');\n            \n            if( !AudioChecks.audioExists( index ) ){\n                Debug.writeMessage('Audio with index \"'+index+'\" does not exist! Please add an audio object at this index in your configuration.');\n                return false;\n            }\n\n            this.#handleCollectionChanges( index );\n            this.#handleAudioChanges( index );\n            this.#playAudio();\n            \n            PlayPauseElement.syncAll();\n        }\n    }\n\n    #handleCollectionChanges( index ){\n        if( CollectionChecks.collectionChanged( null ) ){\n            let collectionNavigation = new CollectionNavigation();\n            let audioNavigation = new AudioNavigation();\n\n            collectionNavigation.setActiveCollection( null );\n            audioNavigation.changeAudio(\n                config.audio[index], index, true\n            );\n        }\n    }\n\n    #handleAudioChanges( index ){\n        if( AudioChecks.audioChanged( index ) ){\n            let audioNavigation = new AudioNavigation();\n\n            audioNavigation.changeAudio(\n                config.audio[index], index, true\n            );\n        }\n    }\n\n    #playAudio(){\n        let audio = new Audio();\n        audio.play();\n    }\n}","import { Audio } from '@/core/Audio.js';\nimport { Checks as AudioChecks } from '@/services/Audio/Checks.js';\nimport { Checks as CollectionChecks } from '@/services/Collections/Checks.js';\nimport { Navigation as CollectionNavigation } from '@/services/Collections/Navigation.js';\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { config } from \"@/config\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\n\nexport class CollectionAudioPlayElement {\n    static collectionAudioPlayQuery = '.amplitude-play[data-amplitude-audio-index][data-amplitude-collection-key]';\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( CollectionAudioPlayElement.collectionAudioPlayQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( (element) => {\n            if( this.#mobile ){\n                element.removeEventListener(\"touchend\", this.#handleInteraction );\n                element.addEventListener(\"touchend\", this.#handleInteraction );\n            }else{\n                element.removeEventListener(\"click\", this.#handleInteraction );\n                element.addEventListener(\"click\", this.#handleInteraction );\n            }\n        } );\n    }\n\n    #handleInteraction(){\n        if( !ConfigState.isTouchMoving() ){\n            let collectionKey = this.attribute('data-amplitude-collection-key');\n            let audioIndex = this.attribute('data-amplitude-audio-index');\n            \n            this.#handleCollectionChanges( collectionKey, audioIndex );\n            this.#handleAudioChanges( collectionKey, audioIndex );\n            this.#playAudio();\n\n            PlayPauseElement.syncAll();\n        }\n    }\n\n    #handleCollectionChanges( collectionKey, audioIndex ){\n        if( CollectionChecks.collectionChanged( collectionKey ) ){\n            let collectionNavigation = new CollectionNavigation();\n\n            collectionNavigation.setActiveCollection( collectionKey );\n            collectionNavigation.changeAudioCollection(\n                collectionKey,\n                config.collections[ collectionKey ].audio[audioIndex],\n                audioIndex,\n                true\n            );\n        }\n    }\n\n    #handleAudioChanges( collectionKey, audioIndex ){\n        if( AudioChecks.audioChanged( audioIndex, collectionKey ) ){\n            let collectionNavigation = new CollectionNavigation();\n\n            collectionNavigation.changeAudioCollection(\n                collectionKey,\n                config.collections[ collectionKey ].audio[audioIndex],\n                audioIndex,\n                true\n            );\n        }\n    }\n\n    #playAudio(){\n        let audio = new Audio();\n        audio.play();\n    }\n}","import { Audio } from \"@/core/Audio\";\nimport { Checks as CollectionChecks } from \"@/services/Collections/Checks\";\nimport { Navigation as CollectionNavigation } from \"@/services/Collections/Navigation\";\nimport { Debug } from \"@/utilities/debug\";\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { config } from \"@/config\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\n\nexport class CollectionPlayElement{\n    static collectionPlayQuery = '.amplitude-play[data-amplitude-collection-key]:not([data-amplitude-audio-index])';\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( CollectionPlayElement.collectionPlayQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( (element) => {\n            if( this.#mobile ){\n                element.removeEventListener(\"touchend\", this.#handleInteraction );\n                element.addEventListener(\"touchend\", this.#handleInteraction );\n            }else{\n                element.removeEventListener(\"click\", this.#handleInteraction );\n                element.addEventListener(\"click\", this.#handleInteraction );\n            }\n        });\n    }\n\n    #handleInteraction(){\n        if( !ConfigState.isTouchMoving() ){\n            let collection = this.getAttribute('data-amplitude-collection-key');\n\n            if( !CollectionChecks.collectionExists( collection ) ){\n                Debug.writeMessage('Collection with key \"'+collection+'\" does not exist! Please define this collection in your configuration.');\n                return false;\n            }\n\n            this.#handleCollectionChanges( collection );\n            this.#playAudio();\n\n            PlayPauseElement.syncAll();\n        }\n    }\n\n    #handleCollectionChanges( collection ){\n        if( CollectionChecks.collectionChanged( collection ) ){\n            \n            let collectionNavigation = new CollectionNavigation();\n            collectionNavigation.setActiveCollection( collection );\n\n            // If the collection is shuffled and the collection is changed,\n            // we change the audio to be the first audio in the array. Since,\n            // we are changing the collection, we are starting at the top.\n            if( CollectionChecks.isCollectionShuffled( collection ) ){\n                collectionNavigation.changeAudioCollection(\n                    collection,\n                    config.collections[ collection ].shuffle_list[0],\n                    0,\n                    true\n                );\n            }else{\n                collectionNavigation.changeAudioCollection(\n                    collection,\n                    config.collections[ collection ].audio[0],\n                    0\n                );\n            }\n        }\n    }\n\n    #playAudio(){\n        let audio = new Audio();\n        audio.play();\n    }\n}","import { Audio } from \"@/core/Audio\";\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\n\nexport class GlobalPlayElement {\n    static globalPlayQuery = '.amplitude-play:not([data-amplitude-audio-index]):not([data-amplitude-collection-index])';\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( GlobalPlayElement.globalPlayQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( ( element ) => {\n            if( this.#mobile ){\n                element.removeEventListener( \"touchend\", this.#handleInteraction );\n                element.addEventListener( \"touchend\", this.#handleInteraction );\n            }else{\n                element.removeEventListener( \"click\", this.#handleInteraction );\n                element.addEventListener( \"click\", this.#handleInteraction );\n            }\n        });\n    }\n\n    #handleInteraction(){\n        let audio = new Audio();\n        audio.play();\n\n        PlayPauseElement.syncAll();\n    }\n}","import { GlobalPlayPauseElement } from \"./PlayPauseElements/GlobalPlayPauseElement\";\nimport { CollectionPlayPauseElement } from \"./PlayPauseElements/CollectionPlayPauseElement\";\nimport { AudioPlayPauseElement } from \"./PlayPauseElements/AudioPlayPauseElement\";\nimport { CollectionAudioPlayPauseElement } from \"./PlayPauseElements/CollectionAudioPlayPauseElement\";\n\n/**\n * Handles the configuration and managing of Play/Pause elements.\n * \n * A Play Pause element is defined as the following:\n * \n * Element: class=\"amplitude-play-pause\"\n * \n * GLOBAL: class=\"amplitude-play-pause\" \n * Controls the entire state of the audio player. Will play or pause whatever is active.\n * \n * COLLECTION: class=\"amplitude-play-pause\" data-amplitude-collection-key=\"{collection_key}\"\n * Scoped to an individual collection. Will only play or pause within the scope of a collection.\n * \n * AUDIO: class=\"amplitude-play-pause\" data-amplitude-audio-index=\"{audio_index}\"\n * Scoped to an individual audio element. Will only play or pause a specific piece of audio.\n * \n * AUDIO IN COLLECTION: class=\"amplitude-play-pause\" data-amplitude-collection-key=\"{collection_key}\" data-amplitude-audio-index=\"{audio_index}\"\n * Scoped to an individual audio element within a collection. Will only play or pause a specific piece of audio in a collection.\n */\nexport class PlayPauseElement{\n    constructor(){\n\n    }\n\n    setUp(){\n        this.#configureGlobalPlayPauseElement();\n        this.#configureCollectionPlayPauseElement();\n        this.#configureAudioPlayPauseElement();\n        this.#configureCollectionAudioPlayPauseElement();\n    }\n\n    #configureGlobalPlayPauseElement(){\n        let globalPlayPauseElement = new GlobalPlayPauseElement();\n        globalPlayPauseElement.initialize();\n    }\n\n    #configureCollectionPlayPauseElement(){\n        let collectionPlayPauseElement = new CollectionPlayPauseElement();\n        collectionPlayPauseElement.initialize();\n    }\n\n    #configureAudioPlayPauseElement(){\n        let audioPlayPauseElement = new AudioPlayPauseElement();\n        audioPlayPauseElement.initialize();\n    }\n\n    #configureCollectionAudioPlayPauseElement(){\n        let collectionAudioPlayPauseElement = new CollectionAudioPlayPauseElement();\n        collectionAudioPlayPauseElement.initialize();\n    }\n\n    static syncAll(){\n        GlobalPlayPauseElement.syncUI();\n        CollectionPlayPauseElement.syncUI();\n        AudioPlayPauseElement.syncUI();\n        CollectionAudioPlayPauseElement.syncUI();\n    }\n\n    static syncAllToPause(){\n        GlobalPlayPauseElement.syncToPause();\n        CollectionPlayPauseElement.syncToPause();\n        AudioPlayPauseElement.syncToPause();\n        CollectionAudioPlayPauseElement.syncToPause();\n    }\n\n    /**\n     * Sets an element to be playing by removing the 'amplitude-paused' class\n     * and adding the 'amplitude-playing' class\n     *\n     * @access public\n     * @static\n     * @param {element} element - The element getting the playing class added.\n     */\n    static setElementPlay( element ){\n        element.classList.add(\"amplitude-playing\");\n        element.classList.remove(\"amplitude-paused\");\n    }\n\n    /**\n     * Sets an element to be paused by adding the 'amplitude-paused' class\n     * and removing the 'amplitude-playing' class\n     *\n     * @access public\n     * @static\n     * @param {element} element - The element getting the paused class added.\n     */\n    static setElementPause( element ){\n        element.classList.remove(\"amplitude-playing\");\n        element.classList.add(\"amplitude-paused\");\n    }\n}","import { Audio } from '@/core/Audio.js';\nimport { Checks as AudioChecks } from '@/services/Audio/Checks.js';\nimport { Navigation as AudioNavigation } from '@/services/Audio/Navigation.js';\nimport { Checks as CollectionChecks } from '@/services/Collections/Checks.js';\nimport { Navigation as CollectionNavigation } from '@/services/Collections/Navigation.js';\nimport { Debug } from '@/utilities/debug';\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { config } from \"@/config\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\n\nexport class AudioPlayPauseElement {\n    static audioPlayPauseQuery = '.amplitude-play-pause[data-amplitude-audio-index]:not([data-amplitude-collection-key])';\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( AudioPlayPauseElement.audioPlayPauseQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( (element) => {;\n            if( this.#mobile ){\n                element.removeEventListener(\"touchend\", this.#handleInteraction );\n                element.addEventListener(\"touchend\", this.#handleInteraction );\n            }else{\n                element.removeEventListener(\"click\", this.#handleInteraction );\n                element.addEventListener(\"click\", this.#handleInteraction );\n            }\n        } );\n    }\n\n    /**\n     * There can be multiple collections on the page. There can also be multiple\n     * individual audio players and audio players in collections.\n     * \n     * We first check to see if the audio index exists. This can be a game changer\n     * if the user messes up a key.\n     * \n     * Next, we check to see if the collection has changed. Even though, this class\n     * responds to audio that is not a part of a collection, technically the collection\n     * changes if the state of the player is in collection mode and we switch out of collection\n     * mode.\n     * \n     * Finally, we check to see if the audio has changed. This means there is more than\n     * one audio player on the page and the user has switched to a different player. If the\n     * player was in collection mode, this check won't do anything since we change the audio\n     * out of collection mode. This only fires if the player is not in collection mode and\n     * switches to another audio player not in collection mode.\n     * \n     * @returns {boolean|null}\n     */\n    #handleInteraction(){\n        if( !ConfigState.isTouchMoving() ){\n            let index = this.attribute('data-amplitude-audio-index');\n            \n            if( !AudioChecks.audioExists( index ) ){\n                Debug.writeMessage('Audio with index \"'+index+'\" does not exist! Please add an audio object at this index in your configuration.');\n                return false;\n            }\n\n            this.#handleCollectionChanges( index );\n            this.#handleAudioChanges( index );\n            this.#toggleAudio();\n            \n            PlayPauseElement.syncAll();\n        }\n    }\n\n    #handleCollectionChanges( index ){\n        if( CollectionChecks.collectionChanged( null ) ){\n            let collectionNavigation = new CollectionNavigation();\n            let audioNavigation = new AudioNavigation();\n\n            collectionNavigation.setActiveCollection( null );\n            audioNavigation.changeAudio(\n                config.audio[index], index, true\n            );\n        }\n    }\n\n    #handleAudioChanges( index ){\n        if( AudioChecks.audioChanged( index ) ){\n            let audioNavigation = new AudioNavigation();\n\n            audioNavigation.changeAudio(\n                config.audio[index], index, true\n            );\n        }\n    }\n\n    #toggleAudio(){\n        if( config.audio_element.paused ){\n            Audio.play();\n        }else{\n            Audio.pause();\n        }\n    }\n\n    static syncUI(){\n        let state = ConfigState.getAudioState();\n        let elements = document.querySelectorAll( AudioPlayPauseElement.audioPlayPauseQuery );\n\n        elements.forEach( ( element ) => {\n            if( state == 'playing' ){\n                PlayPauseElement.setElementPlay( element );\n            }else{\n                PlayPauseElement.setElementPause( element );\n            }\n        })\n    }\n\n    static syncToPause(){\n        let elements = document.querySelectorAll( AudioPlayPauseElement.audioPlayPauseQuery );\n\n        elements.forEach( ( element ) => {\n            PlayPauseElement.setElementPause( element );\n        });\n    }\n}","import { Audio } from '@/core/Audio.js';\nimport { Checks as AudioChecks } from '@/services/Audio/Checks.js';\nimport { Checks as CollectionChecks } from '@/services/Collections/Checks.js';\nimport { Navigation as CollectionNavigation } from '@/services/Collections/Navigation.js';\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { config } from \"@/config\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\n\nexport class CollectionAudioPlayPauseElement {\n    static collectionAudioPlayPauseQuery = '.amplitude-play-pause[data-amplitude-audio-index][data-amplitude-collection-key]';\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( CollectionAudioPlayPauseElement.collectionAudioPlayPauseQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( (element) => {\n            if( this.#mobile ){\n                element.removeEventListener(\"touchend\", this.#handleInteraction );\n                element.addEventListener(\"touchend\", this.#handleInteraction );\n            }else{\n                element.removeEventListener(\"click\", this.#handleInteraction );\n                element.addEventListener(\"click\", this.#handleInteraction );\n            }\n        } );\n    }\n\n    #handleInteraction(){\n        if( !ConfigState.isTouchMoving() ){\n            let collectionKey = this.attribute('data-amplitude-collection-key');\n            let audioIndex = this.attribute('data-amplitude-audio-index');\n            \n            this.#handleCollectionChanges( collectionKey, audioIndex );\n            this.#handleAudioChanges( collectionKey, audioIndex );\n            this.#toggleAudio();\n\n            PlayPauseElement.syncAll();\n        }\n    }\n\n    #handleCollectionChanges( collectionKey, audioIndex ){\n        if( CollectionChecks.collectionChanged( collectionKey ) ){\n            let collectionNavigation = new CollectionNavigation();\n\n            collectionNavigation.setActiveCollection( collectionKey );\n            collectionNavigation.changeAudioCollection(\n                collectionKey,\n                config.collections[ collectionKey ].audio[audioIndex],\n                audioIndex,\n                true\n            );\n        }\n    }\n\n    #handleAudioChanges( collectionKey, audioIndex ){\n        if( AudioChecks.audioChanged( audioIndex, collectionKey ) ){\n            let collectionNavigation = new CollectionNavigation();\n\n            collectionNavigation.changeAudioCollection(\n                collectionKey,\n                config.collections[ collectionKey ].audio[audioIndex],\n                audioIndex,\n                true\n            );\n        }\n    }\n\n    #toggleAudio(){\n        if( config.audio_element.paused ){\n            Audio.play();\n        }else{\n            Audio.pause();\n        }\n    }\n\n    static syncUI(){\n        let state = ConfigState.getAudioState();\n        let elements = document.querySelectorAll( CollectionAudioPlayPauseElement.collectionAudioPlayPauseQuery );\n\n        elements.forEach( ( element ) => {\n            if( state == 'playing' ){\n                PlayPauseElement.setElementPlay( element );\n            }else{\n                PlayPauseElement.setElementPause( element );\n            }\n        })\n    }\n\n    static syncToPause(){\n        let elements = document.querySelectorAll( CollectionAudioPlayPauseElement.collectionAudioPlayPauseQuery );\n\n        elements.forEach( ( element ) => {\n            PlayPauseElement.setElementPause( element );\n        });\n    }\n}","import { Audio } from \"@/core/Audio\";\nimport { Checks as CollectionChecks } from \"@/services/Collections/Checks\";\nimport { Navigation as CollectionNavigation } from \"@/services/Collections/Navigation\";\nimport { Debug } from \"@/utilities/debug\";\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { config } from \"@/config\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\n\n/**\n * A Collection Play Pause element is defined by the following:\n * \n * Element: class=\"amplitude-play-pause\" data-amplitude-collection-key=\"{collection_key}\"\n */\nexport class CollectionPlayPauseElement {\n    static collectionPlayPauseQuery = '.amplitude-play-pause[data-amplitude-collection-key]:not([data-amplitude-audio-index])';\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements()\n        this.#bindInteractions()\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( CollectionPlayPauseElement.collectionPlayPauseQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( (element) => {;\n            if( this.#mobile ){\n                element.removeEventListener(\"touchend\", this.#handleInteraction );\n                element.addEventListener(\"touchend\", this.#handleInteraction );\n            }else{\n                element.removeEventListener(\"click\", this.#handleInteraction );\n                element.addEventListener(\"click\", this.#handleInteraction );\n            }\n        } );\n    }\n\n    #handleInteraction(){\n        if( !ConfigState.isTouchMoving() ){\n            let collection = this.getAttribute('data-amplitude-collection-key');\n\n            if( !CollectionChecks.collectionExists( collection ) ){\n                Debug.writeMessage('Collection with key \"'+collection+'\" does not exist! Please define this collection in your configuration.');\n                return false;\n            }\n\n            this.#handleCollectionChanges( collection );\n            this.#toggleAudio();\n\n            PlayPauseElement.syncAll();\n        }\n    }\n\n    #handleCollectionChanges( collection ){\n        if( CollectionChecks.collectionChanged( collection ) ){\n            \n            let collectionNavigation = new CollectionNavigation();\n            collectionNavigation.setActiveCollection( collection );\n\n            // If the collection is shuffled and the collection is changed,\n            // we change the audio to be the first audio in the array. Since,\n            // we are changing the collection, we are starting at the top.\n            if( CollectionChecks.isCollectionShuffled( collection ) ){\n                collectionNavigation.changeAudioCollection(\n                    collection,\n                    config.collections[ collection ].shuffle_list[0],\n                    0,\n                    true\n                );\n            }else{\n                collectionNavigation.changeAudioCollection(\n                    collection,\n                    config.collections[ collection ].audio[0],\n                    0\n                );\n            }\n        }\n    }\n\n    #toggleAudio(){\n        if( config.audio_element.paused ){\n            Audio.play();\n        }else{\n            Audio.pause();\n        }\n    }\n\n    static syncUI(){\n        let state = ConfigState.getAudioState();\n        let elements = document.querySelectorAll( CollectionPlayPauseElement.collectionPlayPauseQuery );\n\n        elements.forEach( ( element ) => {\n            if( state == 'playing' ){\n                PlayPauseElement.setElementPlay( element );\n            }else{\n                PlayPauseElement.setElementPause( element );\n            }\n        })\n    }\n\n    static syncToPause(){\n        let elements = document.querySelectorAll( CollectionPlayPauseElement.collectionPlayPauseQuery );\n\n        elements.forEach( (element) => {\n            PlayPauseElement.setElementPause( element );\n        });\n    }\n}","import { Audio } from \"@/core/Audio\";\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { config } from \"@/config\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\n\nexport class GlobalPlayPauseElement{\n    static globalPlayPauseQuery = '.amplitude-play-pause:not([data-amplitude-audio-index]):not([data-amplitude-collection-key])';\n    \n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements()\n        this.#bindInteractions()\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( GlobalPlayPauseElement.globalPlayPauseQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( (element) => {\n            if( this.#mobile ){\n                element.removeEventListener(\"touchend\", this.#handleInteraction );\n                element.addEventListener(\"touchend\", this.#handleInteraction );\n            }else{\n                element.removeEventListener(\"click\", this.#handleInteraction );\n                element.addEventListener(\"click\", this.#handleInteraction );\n            }\n        } );\n    }\n\n    #handleInteraction(){\n        if( !ConfigState.isTouchMoving() ){\n            let audio = new Audio();\n\n            if( config.audio_element.paused ){\n                audio.play();\n            }else{\n                audio.pause();\n            }\n\n            PlayPauseElement.syncAll();\n        }\n    }\n\n    static syncUI(){\n        let state = ConfigState.getAudioState();\n        let elements = document.querySelectorAll( GlobalPlayPauseElement.globalPlayPauseQuery );\n\n        elements.forEach( ( element ) => {\n            if( state == 'playing' ){\n                PlayPauseElement.setElementPlay( element );\n            }else{\n                PlayPauseElement.setElementPause( element );\n            }\n        })\n    }\n\n    static syncToPause(){\n        let elements = document.querySelectorAll( GlobalPlayPauseElement.globalPlayPauseQuery );\n\n        elements.forEach( (element) => {\n            PlayPauseElement.setElementPause( element );\n        });\n    }\n}","import { config } from '@/config.js';\n\nexport class TimeUpdateEvent{\n    bind(){\n        this.#bindTimeUpdate();\n        this.#bindDurationChange();\n    }\n\n    #bindTimeUpdate(){\n        config.audio_element.removeEventListener(\"timeupdate\", this.#handle);\n        config.audio_element.addEventListener(\"timeupdate\", this.#handle);\n    }\n\n    #bindDurationChange(){\n        config.audio_element.removeEventListener(\"durationchange\", this.#handle);\n        config.audio_element.addEventListener(\"durationchange\", this.#handle);\n    }\n\n    #handle(){\n        console.log('asdf');\n    }\n}","import { Debug } from \"@/utilities/debug\";\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { EventManager } from \"@/services/EventManager\";\nimport { UIManager } from \"@/services/UIManager\";\nimport { config } from \"../config\";\nimport { Navigation as AudioNavigation } from \"@/services/Audio/Navigation\";\n\nexport class Initializer{\n    #element;\n    #userConfig;\n    #configState;\n    #ready = false;\n\n    constructor( userConfig, element ){\n        this.#configState = new ConfigState();\n        this.#configState.setIsMobile();\n        this.#userConfig = userConfig;\n        this.#element = element;\n    }\n\n    setup(){\n        if( this.#isValidUrl( this.#userConfig ) ){\n            this.#loadUserConfig();\n        }else{\n            this.#prepareAmplitude();\n        }\n    }\n\n    #isValidUrl(url){\n        try {\n            new URL(url);\n        } catch (e) {\n            Debug.writeMessage('AmplitudeJS must be initialized with a JSON object or a valid URL.')\n            return false;\n        }\n\n        return true;\n    }\n\n    #loadUserConfig(){\n        fetch( this.#userConfig )\n            .then( ( response ) => {\n                if( response.status != 200 ){\n                    throw response.status;\n                }else{\n                    return response.json();\n                }\n            })\n            .then( ( data ) => {\n                this.#userConfig = data;\n                this.#prepareAmplitude();\n            })\n            .catch( ( error ) => {\n                Debug.writeMessage( error );\n            })\n    }\n\n    #prepareAmplitude(){\n        this.#resetConfig();\n        this.#copyUserConfig();\n        this.#initializeAudio();\n        this.#initializeEvents();\n        this.#initializeElements();\n        this.#initializeCallbacks();\n    }\n\n    // Ensure we have a blank slate on initialization.\n    #resetConfig(){\n        this.#configState.resetConfig();\n    }\n\n    #copyUserConfig(){\n        this.#configState.setUserSettings( this.#userConfig );\n    }\n\n    #initializeEvents(){\n        let eventManager = new EventManager();\n        eventManager.initializeAllEvents();\n    }\n\n    #initializeElements(){\n        let uiManager = new UIManager();\n        uiManager.initializeElements();\n    }\n\n    #initializeCallbacks(){\n\n    }\n\n    #initializeAudio(){\n        let audioNavigator = new AudioNavigation();\n\n        if( config.start_audio ){\n    \n        }else{\n            audioNavigator.changeAudio( config.audio[0], 0 );\n        }\n    }\n}","import { config } from \"@/config.js\";\n\n/**\n * Returns the current config for AmplitudeJS\n * \n * Public Method: Amplitude.getConfig()\n * \n * @access public\n * @returns {object} \n */\nexport function getConfig(){\n    return config;\n}","import { Initializer } from \"@/init/Initializer\";\n\n/**\n * The main init function.  The user will call this through\n * Amplitude.init() and pass in their settings.\n *\n * Public Accessor: Amplitude.init( user_config_json )\n * @access public\n * @param {object|url} userConfig - A URL or JSON object of user defined values that help configure and initialize AmplitudeJS.\n * @param {string|element} element - A unique identifier or DOM Element to bind Amplitude methods to.\n */\nexport function init( userConfig = {}, element = null ){\n    let initializer = new Initializer( userConfig, element );\n    initializer.setup();\n}","import { config } from \"@/config.js\";\n\n/**\n * Returns the key of the active playlist\n * \n * Public Method: Amplitude.getActivePlaylist()\n * \n * @access public\n * @returns {string} \n */\n export function getActivePlaylist(){\n    return config.active_playlist;\n}","import { config } from \"@/config\";\n\nexport class Checks {\n    static audioExists( index ){\n        if( config.audio[ index ] ){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    static audioChanged( audioIndex, collectionKey = null ){\n\t\tif( config.active_collection != collectionKey ){\n\t\t\treturn true;\n\t\t}else{\n\t\t\tif( config.active_collection == null && collectionKey == null ){\n\t\t\t\tif( config.active_index != audioIndex ){\n\t\t\t\t\treturn true;\n\t\t\t\t}else{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tif( config.active_collection == collection && \n\t\t\t\t\tconfig.collections[ collectionKey ].active_index != audioIndex ){\n\t\t\t\t\t\treturn true;\n\t\t\t\t}else{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}","import { Audio } from \"@/core/Audio\";\nimport { config } from \"@/config\";\nimport { Callbacks } from \"@/services/Callbacks\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\nimport { MetaDataElement } from \"@/elements/MetaDataElement\";\n\nexport class Navigation {\n    /**\n     * Change audio in the audio array\n     *\n     * @prop {object} audio - The audio we are changing to.\n     * @prop {number} index - The index we are changing to.\n     * @prop {boolean} direct - Determines if it was a direct click on the song.\n     * We then don't care if shuffle is on or not.\n     */\n    changeAudio( audio, index, direct = false ){\n        this.#prepareAudioChange( audio );\n\n        this.#switchAudio(audio, index);\n\n        this.#afterAudioChange( direct );\n    }\n\n    #prepareAudioChange( audio ){\n        let coreAudio = new Audio();\n        coreAudio.stop();\n\n        // Sync elements\n        PlayPauseElement.syncAllToPause();\n        /**\n         * @todo Song Slider Elements -> reset\n         * @todo Song Played Progress Elements -> reset\n         * @todo Time Elements -> reset \n         * ( See src/utilities/audioNavigation.js Line #528)\n         */\n        /**\n         * @todo we don't have album change callback, make note.\n         */\n    }\n\n    #switchAudio( audio, index ){\n        config.audio_element.src = audio.url;\n        config.active_metadata = audio;\n        /** \n         * @todo We don't have active_album. make note.\n         */\n         config.active_index = parseInt( index );\n    }\n\n    #afterAudioChange( direct ){\n        this.#updateMetaData();\n\n        /**\n         * @todo container elements -> set active\n         * @todo time elements -> reset duration times\n         * ( see src/utilities/audioNavigation.js Line #558 )\n         */\n        Callbacks.run('audio_change');\n    }\n\n    #updateMetaData(){\n        let metaData = new MetaDataElement();\n        metaData.displayMetaData();\n    }\n}","export class Callbacks{\n    static run(){\n        \n    }\n}","import { config } from \"@/config\";\n\nexport class Checks {\n    static collectionExists( key ){\n\t\tif( config.collections[ key ] ){\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tstatic collectionChanged( collection ){\n\t\tif (config.active_collection != collection) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tstatic isCollectionShuffled( collection ){\n        if( config.collections[ collection ].shuffle ){\n            return true;\n        }else{\n            return false;\n        }\n    }\n}","import { Audio } from \"@/core/Audio\";\nimport { config } from \"@/config\";\nimport { Callbacks } from \"@/services/Callbacks\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\nimport { MetaDataElement } from \"@/elements/MetaDataElement\";\n\nexport class Navigation {\n    setActiveCollection( collection ){\n        if( config.active_collection != collection ){\n            Callbacks.run(\"collection_changed\");\n\n            config.active_collection = collection;\n\n            if( collection != null ){\n                config.collections[ collection ].active_index = 0;\n            }\n        }\n    }\n\n    /**\n     * Handles audio change in a collection\n     *\n     * @prop {string} collection - The collection we are changing the song on.\n     * @prop {object} audio - The audio object we are changing to in the collection.\n     * @prop {number} index - The index of the song we are changing to in the collection.\n     * @prop {boolean} direct - Determines if it was a direct click on the song. We\n     * then don't care if shuffle is on or not\n     */\n    changeAudioCollection( collection, audio, index, direct ){\n        this.#prepareAudioChange( audio );\n\n        this.#switchAudio( collection, audio, index );\n\n        this.#afterAudioChange( direct );\n    }\n\n    #prepareAudioChange( audio ){\n        Audio.stop();\n\n        // Sync elements\n        PlayPauseElement.syncAllToPause();\n        /**\n         * @todo Song Slider Elements -> reset\n         * @todo Song Played Progress Elements -> reset\n         * @todo Time Elements -> reset \n         * ( See src/utilities/audioNavigation.js Line #528)\n         */\n        /**\n         * @todo we don't have album change callback, make note.\n         */\n    }\n\n    #switchAudio( collection, audio, index ){\n        config.audio_element = audio.url;\n        config.active_metadata = audio;\n        /** \n         * @todo We don't have active_album. make note.\n         */\n        config.active_index = null;\n        config.collections[collection].active_index = parseInt(index);\n    }\n\n    #afterAudioChange( direct ){\n        this.#updateMetaData();\n        /**\n         * @todo container elements -> set active\n         * @todo time elements -> reset duration times\n         * ( see src/utilities/audioNavigation.js Line #558 )\n         */\n        Callbacks.run('audio_change');\n    }\n\n    #updateMetaData(){\n        let metaData = new MetaDataElement();\n        metaData.displayMetaData();\n    }\n}","import { config } from '@/config.js';\n\nexport class ConfigState{\n\tsetIsMobile(){\n\t\tif ( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test( navigator.userAgent ) ) {\n\t\t\tconfig.mobile = true;\n\t\t}else{\n\t\t\tconfig.mobile = false;\n\t\t}\n\t}\n\n\tstatic isMobile(){\n\t\treturn config.mobile;\n\t}\n\n\tstatic isTouchMoving(){\n\t\treturn config.is_touch_moving;\n\t}\n\n\tstatic getAudioState(){\n\t\treturn config.audio_element.paused ? \"paused\" : \"playing\";\n\t}\n\n\tstatic getScope(){\n\t\tif( config.active_collection == '' || config.active_collection == null ){\n\t\t\treturn 'audio';\n\t\t}else{\n\t\t\treturn 'collection';\n\t\t}\n\t}\n\n\tresetConfig(){\n\t\tconfig.audio_element = new Audio();\n\t\tconfig.active_metadata = {};\n\t\tconfig.active_album = \"\";\n\t\tconfig.active_index = 0;\n\t\tconfig.active_playlist = null;\n\t\tconfig.playback_speed = 1.0;\n\t\tconfig.callbacks = {};\n\t\tconfig.audio = [];\n\t\tconfig.playlists = {};\n\t\tconfig.start_audio = \"\";\n\t\tconfig.starting_playlist = \"\";\n\t\tconfig.starting_playlist_song = \"\";\n\t\tconfig.repeat = false;\n\t\tconfig.shuffle_list = {};\n\t\tconfig.shuffle_on = false;\n\t\tconfig.default_artwork = \"\";\n\t\tconfig.default_playlist_art = \"\";\n\t\tconfig.debug = true;\n\n\t\tconfig.volume = 0.5;\n\t\tconfig.pre_mute_volume = 0.5;\n\t\tconfig.volume_increment = 5;\n\t\tconfig.volume_decrement = 5;\n\n\t\tconfig.soundcloud = {\n\t\t\tclient: '',\n\t\t\tuse_art: false,\n\t\t\taudio_count: 0,\n\t\t\tready_count: 0\n\t\t},\n\n\t\t/**\n\t\t * @todo BREAKING CHANGE\n\t\t */\n\t\t// config.soundcloud_client = \"\";\n\t\t// config.soundcloud_use_art = false;\n\t\t// config.soundcloud_song_count = 0;\n\t\t// config.soundcloud_songs_ready = 0;\n\t\tconfig.continue_next = true;\n\t}\n\n\tsetUserSettings( userConfig ){\n\t\tthis.setAudio( userConfig.audio );\n\t\tthis.setDebug( userConfig.debug );\n\t\tthis.setDefaultArtwork( userConfig.default_artwork );\n\t\tthis.setGroupings( userConfig.groupings );\n\t\tthis.setPlaybackSpeed( userConfig.playback_speed );\n\t\tthis.setCallbacks( userConfig.callbacks );\n\t}\n\n\tsetAudio( value ){\n\t\tconfig.audio = value != undefined ? value : [];\n\t\tthis.#setDefaultLiveSettings();\n\t\tthis.#setDefaultAudioIndices();\n\t}\n\n\tsetDebug( value ){\n\t\tconfig.debug = value != undefined ? value : false;\n\t}\n\n\tsetDefaultArtwork( value ){\n\t\tconfig.default_artwork = value != undefined ? value : false;\n\t}\n\n\tsetGroupings( groupings ){\n\t\t// @todo set groupings\n\t}\n\n\tsetPlaybackSpeed( speed ){\n\t\tconfig.playback_speed = speed != undefined ? speed : 1.0;\n\t}\n\n\tsetCallbacks( callbacks ){\n\t\tconfig.callbacks = callbacks != undefined ? callbacks : {};\n\t}\n\n\t#setDefaultLiveSettings(){\n\t\tconfig.audio.forEach( ( audio, index ) => {\n\t\t\tif( audio.live == undefined ){\n\t\t\t\taudio.live = false;\n\t\t\t}\n\t\t});\n\t}\n\n\t#setDefaultAudioIndices(){\n\t\tconfig.audio.forEach( ( audio, index ) => {\n\t\t\taudio.index = index;\n\t\t});\n\t}\n\n\n\tstatic setPlayerState(){\n\t\t// If paused and the current time is 0 the player is stopped.\n\t\tif (config.audio_element.paused && config.audio_element.currentTime == 0) {\n\t\t\tconfig.player_state = \"stopped\";\n\t\t}\n  \n\t\t// If paused and the current time is greater than 0 the player is paused.\n\t\tif (config.audio_element.paused && config.audio_element.currentTime > 0) {\n\t\t\tconfig.player_state = \"paused\";\n\t\t}\n  \n\t\t// If playing, the current state is playing.\n\t\tif (!config.audio_element.paused) {\n\t\t\tconfig.player_state = \"playing\";\n\t\t}\n\t}\n}","import { TimeUpdateEvent } from \"@/events/TimeUpdateEvent\";\nimport { Debug } from \"@/utilities/debug\";\nimport { config } from \"@/config.js\";\n\nexport class EventManager{\n    initializeAllEvents(){\n        Debug.writeMessage(\"Starting initialization of event handlers...\");\n\n        this.#bindTouchEvents();\n        this.#bindTimeUpdateEvents();\n        this.#bindKeyBindingEvents();\n        this.#bindAudioEndedEvent();\n        this.#bindProgressEvent();\n    }\n\n    #bindTouchEvents(){\n        document.addEventListener(\"touchmove\", () => {\n            config.is_touch_moving = true;\n        });\n\n        document.addEventListener(\"touchend\", () => {\n            if( !config.is_touch_moving ){\n                config.is_touch_moving = false;\n            }\n        })\n    }\n\n    #bindTimeUpdateEvents(){\n        // let timeUpdateEvent = new TimeUpdateEvent();\n        // timeUpdateEvent.bind();\n    }\n\n    #bindKeyBindingEvents(){\n\n    }\n\n    #bindAudioEndedEvent(){\n\n    }\n\n    #bindProgressEvent(){\n\n    }\n}","import { PauseElement } from \"@/elements/PauseElement\";\nimport { PlayElement } from \"@/elements/PlayElement\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\nimport { MetaDataElement } from \"@/elements/MetaDataElement\";\n\nexport class UIManager{\n    setVisualElementsDefaults(){\n\n    }\n\n    initializeElements(){\n        this.#initializeMetaData();\n        this.#initializePlayElement();\n        this.#initializePauseElement();\n        this.#initializePlayPauseElement();\n    }\n\n    #initializeMetaData(){\n        let metaDataElement = new MetaDataElement();\n        metaDataElement.syncMetaData();\n    }\n\n    #initializePlayElement(){\n        let playElement = new PlayElement();\n        playElement.setUp();\n    }\n\n    #initializePauseElement(){\n        let pauseElement = new PauseElement();\n        pauseElement.setUp();\n    }\n\n    #initializePlayPauseElement(){\n        let playPauseElement = new PlayPauseElement();\n        playPauseElement.setUp();\n    }\n}","import { config } from \"@/config.js\";\n\nexport class Debug{\n\tstatic writeMessage( message ){\n\t\tif( config.debug ){\n\t\t\tconsole.log( message );\n\t\t}\n\t}\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * @name AmplitudeJS\n * @author Dan Pastori (Server Side Up) <hello@serversideup.net>\n */\nimport * as initMethods from \"@/methods/init\";\nimport * as configMethods from \"@/methods/config\";\nimport * as playlistMethods from \"@/methods/playlists\";\n\n/**\n * Amplitude is an interface to the public methods.\n * All public methods are in the /methods directory.\n * These methods use clases to perform functionality.\n * The state is stored in /config.js\n *\n * @module Amplitude\n */\nconst Amplitude = (function(){\n    return {\n        ...initMethods,\n        ...configMethods,\n        ...playlistMethods\n    }\n})();\n\n\nexport default Amplitude;"],"names":["version","config","mobile","audio_element","Audio","active_metadata","active_album","active_index","active_podcast","active_playlist","active_collection","playback_speed","callbacks","songs","episodes","audio","playlists","seasons","podcasts","start_audio","starting_playlist","starting_playlist_song","starting_podcast","starting_podcast_episode","repeat","repeat_song","shuffle_list","shuffle_on","default_artwork","default_playlist_art","debug","volume","initial","increment","decrement","pre_mute_level","soundcloud","client","use_art","audio_count","ready_count","is_touch_moving","buffered","bindings","continue_next","delay","player_state","web_audio_api","availabile","context","source","analyser","visualizations","available","active","backup","waveforms","sample_rate","built","ConfigState","setPlayerState","volumeLevel","percentage","live","currentTime","duration","playbackSpeed","playbackRate","isMobile","paused","src","url","load","playPromise","play","undefined","then","_","error","pause","seconds","muted","MetaDataElement","displayCollectionMetaData","globalAudioInfoElements","document","querySelectorAll","globalMetaDataElementsQuery","forEach","element","key","getAttribute","value","collectionInfoElements","collectionMetaDataElementsQuery","audioInfoElements","audioMetaDataElementsQuery","audioIndex","collectionAudioInfoElements","collectionAudioMetaDataElementsQuery","collectionKey","collections","info","indexOf","default_art","setAttribute","innerHTML","GlobalPauseElement","CollectionPauseElement","AudioPauseElement","CollectionAudioPauseElement","PauseElement","globalPauseElement","initialize","collectionPauseElement","audioPauseElement","collectionAudioPauseElement","PlayPauseElement","audioPauseQuery","removeEventListener","addEventListener","isTouchMoving","attribute","getScope","syncAll","collectionAudioPauseQuery","collectionPauseQuery","globalPauseQuery","GlobalPlayElement","CollectionPlayElement","AudioPlayElement","CollectionAudioPlayElement","PlayElement","globalPlayElement","collectionPlayElement","audioPlayElement","collectionAudioPlayElement","Checks","AudioChecks","Navigation","AudioNavigation","CollectionChecks","CollectionNavigation","Debug","audioPlayQuery","index","audioExists","writeMessage","collectionChanged","collectionNavigation","audioNavigation","setActiveCollection","changeAudio","audioChanged","collectionAudioPlayQuery","changeAudioCollection","collectionPlayQuery","collection","collectionExists","isCollectionShuffled","globalPlayQuery","GlobalPlayPauseElement","CollectionPlayPauseElement","AudioPlayPauseElement","CollectionAudioPlayPauseElement","syncUI","syncToPause","classList","add","remove","globalPlayPauseElement","collectionPlayPauseElement","audioPlayPauseElement","collectionAudioPlayPauseElement","state","getAudioState","elements","audioPlayPauseQuery","setElementPlay","setElementPause","collectionAudioPlayPauseQuery","collectionPlayPauseQuery","globalPlayPauseQuery","TimeUpdateEvent","console","log","EventManager","UIManager","Initializer","userConfig","setIsMobile","URL","e","fetch","response","status","json","data","resetConfig","setUserSettings","eventManager","initializeAllEvents","uiManager","initializeElements","audioNavigator","getConfig","init","initializer","setup","getActivePlaylist","Callbacks","direct","coreAudio","stop","syncAllToPause","parseInt","run","metaData","displayMetaData","shuffle","test","navigator","userAgent","pre_mute_volume","volume_increment","volume_decrement","setAudio","setDebug","setDefaultArtwork","setGroupings","groupings","setPlaybackSpeed","setCallbacks","speed","metaDataElement","syncMetaData","playElement","setUp","pauseElement","playPauseElement","message","initMethods","configMethods","playlistMethods","Amplitude"],"sourceRoot":""}