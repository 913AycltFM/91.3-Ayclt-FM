{"version":3,"file":"amplitude.js","mappings":"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","sources":["webpack://Amplitude/webpack/universalModuleDefinition","webpack://Amplitude/./src/config.js","webpack://Amplitude/./src/core/Audio.js","webpack://Amplitude/./src/elements/BufferedProgressElement.js","webpack://Amplitude/./src/elements/BufferedProgressElements/AudioBufferedProgressElement.js","webpack://Amplitude/./src/elements/BufferedProgressElements/CollectionAudioBufferedProgressElement.js","webpack://Amplitude/./src/elements/BufferedProgressElements/CollectionBufferedProgressElement.js","webpack://Amplitude/./src/elements/BufferedProgressElements/GlobalBufferedProgressElement.js","webpack://Amplitude/./src/elements/ContainerElement.js","webpack://Amplitude/./src/elements/ContainerElements/AudioContainerElement.js","webpack://Amplitude/./src/elements/ContainerElements/CollectionAudioContainerElement.js","webpack://Amplitude/./src/elements/MetaDataElement.js","webpack://Amplitude/./src/elements/MuteElement.js","webpack://Amplitude/./src/elements/NextElement.js","webpack://Amplitude/./src/elements/NextElements/CollectionNextElement.js","webpack://Amplitude/./src/elements/NextElements/GlobalNextElement.js","webpack://Amplitude/./src/elements/PauseElement.js","webpack://Amplitude/./src/elements/PauseElements/AudioPauseElement.js","webpack://Amplitude/./src/elements/PauseElements/CollectionAudioPauseElement.js","webpack://Amplitude/./src/elements/PauseElements/CollectionPauseElement.js","webpack://Amplitude/./src/elements/PauseElements/GlobalPauseElement.js","webpack://Amplitude/./src/elements/PlayElement.js","webpack://Amplitude/./src/elements/PlayElements/AudioPlayElement.js","webpack://Amplitude/./src/elements/PlayElements/CollectionAudioPlayElement.js","webpack://Amplitude/./src/elements/PlayElements/CollectionPlayElement.js","webpack://Amplitude/./src/elements/PlayElements/GlobalPlayElement.js","webpack://Amplitude/./src/elements/PlayPauseElement.js","webpack://Amplitude/./src/elements/PlayPauseElements/AudioPlayPauseElement.js","webpack://Amplitude/./src/elements/PlayPauseElements/CollectionAudioPlayPauseElement.js","webpack://Amplitude/./src/elements/PlayPauseElements/CollectionPlayPauseElement.js","webpack://Amplitude/./src/elements/PlayPauseElements/GlobalPlayPauseElement.js","webpack://Amplitude/./src/elements/PlaybackSpeedElement.js","webpack://Amplitude/./src/elements/PreviousElement.js","webpack://Amplitude/./src/elements/PreviousElements/CollectionPreviousElement.js","webpack://Amplitude/./src/elements/PreviousElements/GlobalPreviousElement.js","webpack://Amplitude/./src/elements/ProgressElement.js","webpack://Amplitude/./src/elements/ProgressElements/AudioProgressElement.js","webpack://Amplitude/./src/elements/ProgressElements/CollectionAudioProgressElement.js","webpack://Amplitude/./src/elements/ProgressElements/CollectionProgressElement.js","webpack://Amplitude/./src/elements/ProgressElements/GlobalProgressElement.js","webpack://Amplitude/./src/elements/ShuffleElement.js","webpack://Amplitude/./src/elements/ShuffleElements/CollectionShuffleElement.js","webpack://Amplitude/./src/elements/ShuffleElements/GlobalShuffleElement.js","webpack://Amplitude/./src/elements/SkipToElement.js","webpack://Amplitude/./src/elements/SkipToElements/AudioSkipToElement.js","webpack://Amplitude/./src/elements/SkipToElements/CollectionAudioSkipToElement.js","webpack://Amplitude/./src/elements/StopElement.js","webpack://Amplitude/./src/elements/TimeElement.js","webpack://Amplitude/./src/elements/TimeElements/CurrentTime/AudioCurrentTimeElement.js","webpack://Amplitude/./src/elements/TimeElements/CurrentTime/CollectionAudioCurrentTimeElement.js","webpack://Amplitude/./src/elements/TimeElements/CurrentTime/CollectionCurrentTimeElement.js","webpack://Amplitude/./src/elements/TimeElements/CurrentTime/GlobalCurrentTimeElement.js","webpack://Amplitude/./src/elements/TimeElements/Duration/AudioDurationElement.js","webpack://Amplitude/./src/elements/TimeElements/Duration/CollectionAudioDurationElement.js","webpack://Amplitude/./src/elements/TimeElements/Duration/CollectionDurationElement.js","webpack://Amplitude/./src/elements/TimeElements/Duration/GlobalDurationElement.js","webpack://Amplitude/./src/elements/TrackerElement.js","webpack://Amplitude/./src/elements/TrackerElements/AudioTrackerElement.js","webpack://Amplitude/./src/elements/TrackerElements/CollectionAudioTrackerElement.js","webpack://Amplitude/./src/elements/TrackerElements/CollectionTrackerElement.js","webpack://Amplitude/./src/elements/TrackerElements/GlobalTrackerElement.js","webpack://Amplitude/./src/elements/VolumeDownElement.js","webpack://Amplitude/./src/elements/VolumeSliderElement.js","webpack://Amplitude/./src/elements/VolumeUpElement.js","webpack://Amplitude/./src/events/AudioEndedEvent.js","webpack://Amplitude/./src/events/TimeUpdateEvent.js","webpack://Amplitude/./src/init/Initializer.js","webpack://Amplitude/./src/methods/config.js","webpack://Amplitude/./src/methods/eventListeners.js","webpack://Amplitude/./src/methods/init.js","webpack://Amplitude/./src/methods/playlists.js","webpack://Amplitude/./src/services/Audio/Checks.js","webpack://Amplitude/./src/services/Audio/Navigation.js","webpack://Amplitude/./src/services/Callbacks.js","webpack://Amplitude/./src/services/Collections/Checks.js","webpack://Amplitude/./src/services/Collections/Navigation.js","webpack://Amplitude/./src/services/Collections/Shuffle.js","webpack://Amplitude/./src/services/ConfigState.js","webpack://Amplitude/./src/services/Debug.js","webpack://Amplitude/./src/services/ElementsManager.js","webpack://Amplitude/./src/services/EventManager.js","webpack://Amplitude/./src/services/Time.js","webpack://Amplitude/webpack/bootstrap","webpack://Amplitude/webpack/runtime/define property getters","webpack://Amplitude/webpack/runtime/hasOwnProperty shorthand","webpack://Amplitude/webpack/runtime/make namespace object","webpack://Amplitude/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Amplitude\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Amplitude\"] = factory();\n\telse\n\t\troot[\"Amplitude\"] = factory();\n})(self, () => {\nreturn ","/**\n * These variables make Amplitude run. The config is the most important\n * containing active settings and parameters.\n *\n * The config JSON is the global settings for ALL of Amplitude functions.\n * This is global and contains all of the user preferences. The default\n * settings are set, and the user overwrites them when they initialize\n * Amplitude.\n */\nimport version from \"../package.json\";\n\nexport const config = {\n\t// Amplitude State Variables\n\taudio_element: new Audio(),\n\tmobile: false,\n\tversion: version,\n\n\t// Amplitude Dynamic Variables\n\tactive_metadata: {},\n\tactive_album: \"\",\n\tactive_index: 0,\n\n\tactive_podcast: null,\n\tactive_playlist: null,\n\tactive_collection: null,\n\n\tplayback_speed: 1.0,\n\trepeat: false,\n\tshuffle_list: {},\n\t/**\n\t * @todo BREAKING should be repeat_audio\n\t */\n\t// repeat_song: false,\n\trepeat_audio: false,\n\tshuffle_on: false,\n\n\t// User Definable Variables\n\tcallbacks: {},\n\t\n\tsongs: [],\n\tepisodes: [],\n\taudio: [],\n\n\tplaylists: [],\n\tseasons: [],\n\tpodcasts: [],\n\tdebug: true,\n\tdefault_artwork: \"\",\n\tdefault_playlist_art: \"\",\n\n\tstart_audio: \"\",\n\n\tstarting_playlist: \"\",\n\tstarting_playlist_song: \"\",\n\n\tstarting_podcast: \"\",\n\tstarting_podcast_episode: \"\",\n\n\t\n\n\t\n\n\t\n\n\t\n\n\t\n\t\n\n\t\n\n\t/**\n\t * @todo BREAKING CHANGE\n\t */\n\tvolume: {\n\t\tcurrent: 50,\n\t\tincrement: 5,\n\t\tdecrement: 5,\n\t\tpre_mute_level: 50\n\t},\n\t//   volume: 0.5,\n\n\t//   pre_mute_volume: 0.5,\n\n\t//   volume_increment: 5,\n\n\t//   volume_decrement: 5,\n\n\t/**\n\t * @todo BREAKING CHANGE\n\t */\n\tsoundcloud: {\n\t\tclient: '',\n\t\tuse_art: false,\n\t\taudio_count: 0,\n\t\tready_count: 0\n\t},\n\t// soundcloud_client: \"\",\n\n\t// soundcloud_use_art: false,\n\n\t// soundcloud_song_count: 0,\n\n\t// soundcloud_songs_ready: 0,\n\n\tis_touch_moving: false,\n\n\tbuffered: 0,\n\n\tbindings: {},\n\n\tcontinue_next: true,\n\n\tdelay: 0,\n\n\tplayer_state: \"stopped\",\n\n\ttime_format: 'MM:SS',\n\n\t/**\n\t * @todo BREAKING\n\t */\n\tweb_audio_api:{\n\t\tavailabile: false,\n\t\tcontext: null,\n\t\tsource: null,\n\t\tanalyser: null\n\t},\n\t//   web_audio_api_available: false,\n\n\t//   context: null,\n\n\t//   source: null,\n\n\t//   analyser: null,\n\n\tvisualizations: {\n\t\tavailable: [],\n\n\t\tactive: [],\n\n\t\tbackup: \"\"\n\t},\n\t\n\twaveforms: {\n\tsample_rate: 100,\n\n\tbuilt: [],\n\n\t}\n};\n","import { Callbacks } from \"@/services/Callbacks\";\nimport { config } from \"@/config.js\";\nimport { ConfigState } from \"../services/ConfigState\";\nimport { Debug } from \"@/services/Debug\";\n\nexport class Audio{\n    play(){\n        this.#startVisualizations();\n        this.#reconnectStream();\n        this.#playAudio();\n        ConfigState.setPlayerState();\n    }\n\n    pause(){\n        this.#stopVisualizations();\n        this.#pauseAudio();\n        this.#disconnectStream();\n        ConfigState.setPlayerState();\n    }\n\n    stop(){\n        this.#stopVisualizations();\n        this.setCurrentTime(0);\n        this.#pauseAudio();\n        this.#disconnectStream();\n        ConfigState.setPlayerState();\n        Callbacks.run('stop');\n    }\n\n    skipToLocation(seconds){\n        // Cannot skip live streams\n        if( !config.active_metadata.live ){\n            // We only skip to the location when the audio is loaded enough to play through\n            // and skip to a location. This event is unbound after it's fired once.\n            config.audio_element.addEventListener(\"canplaythrough\", function(){\n                if( config.audio_element.duration >= seconds && seconds > 0 ){\n                    config.audio_element.currentTime = seconds;\n                } else {\n                    Debug.writeMessage( \"Amplitude can't skip to a location greater than the duration of the audio or less than 0.\")\n                }\n            }, { once: true } );\n        }\n    }\n\n    /**\n     * \n     * @param {number} volumeLevel - A number between 1 - 100 as percentage of volume.\n     */\n    setVolume( volumeLevel ){\n        this.#setMuted( volumeLevel );\n        this.#setAudioVolume( volumeLevel );\n    }\n\n    setAudioLocation( percentage ){\n        if( !config.active_metadata.live ){\n            config.audio_element.currentTime = config.audio_element.duration * ( percentage / 100 );\n        }\n    }\n\n    setPlaybackSpeed( playbackSpeed ){\n        config.playback_speed = playbackSpeed;\n        config.audio_element.playbackRate = config.playback_speed;\n    }\n\n    #startVisualizations(){\n        // Visualizations.stop();\n        // Visualizations.run();\n    }\n\n    #stopVisualizations(){\n        // Visualizations.stop();\n    }\n\n    #reconnectStream(){\n        /*\n            Mobile remote sources need to be reconnected on play. I think this is\n            because mobile browsers are optimized not to load all resources\n            for speed reasons. We only do this if mobile and the paused button\n            is not clicked. If the pause button was clicked then we don't reconnect\n            or the user will lose their place in the stream.\n        */ \n        if( config.active_metadata.live \n            || ( ConfigState.isMobile() && !config.paused ) ){\n                config.audio_element.src = config.active_metadata.url;\n                config.audio_element.load();\n        }\n    }\n\n    #disconnectStream(){\n        if( config.active_metadata.live ){\n            config.audio_element.src = \"\";\n            config.audio_element.load();\n        }\n    }\n\n    #playAudio(){\n        let playPromise = config.audio_element.play();\n\n        if( playPromise !== undefined ){\n            playPromise.then(_ => {}).catch(error => {});\n        }\n\n        config.audio_element.playbackRate = config.playback_speed;\n    }\n\n    #pauseAudio(){\n        config.audio_element.pause();\n        config.paused = true;\n    }\n\n    setCurrentTime( seconds ){\n        if ( isFinite( seconds ) ) {\n            config.audio_element.currentTime = seconds;\n        }\n    }\n\n    #setMuted( volumeLevel ){\n        if( volumeLevel == 0 ){\n            config.audio_element.muted = true;\n        }else{\n            config.audio_element.muted = false;\n        }\n    }\n\n    #setAudioVolume( volumeLevel ){\n        config.volume.current = volumeLevel;\n        config.audio_element.volume = ( volumeLevel / 100 );\n    }\n}","import { GlobalBufferedProgressElement } from \"./BufferedProgressElements/GlobalBufferedProgressElement\";\nimport { CollectionBufferedProgressElement } from \"./BufferedProgressElements/CollectionBufferedProgressElement\";\nimport { CollectionAudioBufferedProgressElement } from './BufferedProgressElements/CollectionAudioBufferedProgressElement';\nimport { AudioBufferedProgressElement } from \"./BufferedProgressElements/AudioBufferedProgressElement\";\n\nexport class BufferedProgressElement{\n    static syncAll(){\n        GlobalBufferedProgressElement.syncUI();\n        CollectionBufferedProgressElement.syncUI();\n        AudioBufferedProgressElement.syncUI();\n        CollectionAudioBufferedProgressElement.syncUI();\n    }\n}","import { ConfigState } from \"@/services/ConfigState\";\nimport { config } from '@/config.js';\n\nexport class AudioBufferedProgressElement{\n    static audioBufferedProgressQuery = 'progress.amplitude-buffered-progress[data-amplitude-audio-index]:not([data-amplitude-collection-key])';\n\n    static syncUI(){\n        let activeIndex = ConfigState.getActiveAudioIndex();\n        let elements = document.querySelectorAll('progress.amplitude-buffered-progress[data-amplitude-audio-index=\"'+activeIndex+'\"]:not([data-amplitude-collection-key])');\n\n        elements.forEach( function( element ){\n            if( !isNaN( config.buffered ) ){\n                element.value = parseFloat(\n                    ConfigState.getBufferedPercentage()\n                );\n            }\n        });\n    }\n}","import { ConfigState } from \"@/services/ConfigState\";\nimport { config } from '@/config.js';\n\nexport class CollectionAudioBufferedProgressElement{\n    static syncUI(){\n        \n    }\n}","import { ConfigState } from \"@/services/ConfigState\";\nimport { config } from '@/config.js';\n\nexport class CollectionBufferedProgressElement{\n    static syncUI(){\n        let activeCollection = ConfigState.getActiveCollection();\n        let elements = document.querySelectorAll('progress.amplitude-buffered-progress[data-amplitude-collection-key=\"'+activeCollection+'\"]:not([data-amplitude-audio-index])');\n\n        elements.forEach( function( element ){\n            if( !isNaN( config.buffered ) ){\n                element.value = parseFloat(\n                    ConfigState.getBufferedPercentage()\n                );\n            }\n        });\n    }\n}","import { ConfigState } from \"@/services/ConfigState\";\nimport { config } from '@/config.js';\n\nexport class GlobalBufferedProgressElement{\n    static globalBufferedProgressQuery = 'progress.amplitude-buffered-progress:not([data-amplitude-audio-index]):not([data-amplitude-collection-key])';\n\n    static syncUI(){\n        let elements = document.querySelectorAll( GlobalBufferedProgressElement.globalBufferedProgressQuery );\n\n        elements.forEach( function( element ){\n            if( !isNaN( config.buffered ) ){\n                element.value = parseFloat(\n                    ConfigState.getBufferedPercentage()\n                );\n            }\n        } );\n    }\n}","import { AudioContainerElement } from \"./ContainerElements/AudioContainerElement\";\nimport { CollectionAudioContainerElement } from \"./ContainerElements/CollectionAudioContainerElement\";\n\nexport class ContainerElement{\n    \n    setActiveContainers( direct ){\n        this.#setActiveAudioContainers();\n        this.#setActiveCollectionAudioContainers( direct );\n    }\n\n    #setActiveAudioContainers(){\n        let audioContainerElements = new AudioContainerElement();\n        audioContainerElements.setActive();\n    }\n\n    #setActiveCollectionAudioContainers( direct ){\n        let collectionAudioContainerElements = new CollectionAudioContainerElement( direct );\n        collectionAudioContainerElements.setActive();\n    }\n}","import { config } from \"@/config\";\nimport { ConfigState } from \"@/services/ConfigState\";\n\nexport class AudioContainerElement {\n    static audioContainerElementQuery = '.amplitude-audio-container[data-amplitude-audio-index]:not([data-amplitude-collection-key])';\n    \n    #elements;\n    #activeIndex;\n\n    setActive(){\n        if( ConfigState.getScope() == 'audio' ){\n            this.#findElements();\n            this.#resetElements();\n            this.#getActiveIndex();\n            this.#setActiveContainerElements();\n        }\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( AudioContainerElement.audioContainerElementQuery );\n    }\n\n    #resetElements(){\n        this.#elements.forEach( function( element ){\n            element.classList.remove('amplitude-active-audio-container');\n        });\n    }\n\n    #getActiveIndex(){\n        this.#activeIndex = config.active_index;\n    }\n\n    #setActiveContainerElements(){\n        let activeContainerElements = document.querySelectorAll('.amplitude-audio-container[data-amplitude-audio-index=\"'+this.#activeIndex+'\"]:not([data-amplitude-collection-key])');\n        \n        activeContainerElements.forEach( function( element ){\n            element.classList.add(\"amplitude-active-audio-container\");\n        });\n    }\n}","import { config } from \"@/config\";\nimport { ConfigState } from \"@/services/ConfigState\";\n\nexport class CollectionAudioContainerElement {\n    static collectionAudioContainerElementQuery = '.amplitude-audio-container[data-amplitude-audio-index][data-amplitude-collection-key]';\n\n    #direct;\n    #elements;\n    #activeIndex;\n    #activeCollection;\n\n    constructor( direct ){\n        this.#direct = direct;\n    }\n\n    setActive(){\n        if( ConfigState.getScope() == 'collection' ){\n            this.#findElements();\n            this.#resetElements();\n            this.#getActiveIndex();\n            this.#setActiveContainerElements();\n        }\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( CollectionAudioContainerElement.collectionAudioContainerElementQuery );\n    }\n\n    #resetElements(){\n        this.#elements.forEach( function( element ){\n            element.classList.remove('amplitude-active-audio-container');\n        });\n    }\n\n    #getActiveIndex(){\n        this.#activeCollection = ConfigState.getActiveCollection();\n\n        if( this.#direct ){\n            this.#activeIndex = config.collections[ this.#activeCollection ].active_index;\n        }else{\n            if( ConfigState.isCollectionShuffled( this.#activeCollection ) ){\n                this.#activeIndex = config.collections[ this.#activeCollection ].shuffle_list[\n                    config.collections[ this.#activeCollection ].active_index\n                ].index;\n            }else{\n                this.#activeIndex = config.collections[ this.#activeCollection ].active_index;\n            }\n        }\n    }\n\n    #setActiveContainerElements(){\n        let activeContainerElements = document.querySelectorAll('.amplitude-audio-container[data-amplitude-audio-index=\"'+this.#activeIndex+'\"][data-amplitude-collection-key=\"'+this.#activeCollection+'\"]');\n        activeContainerElements.forEach( function( element ){\n            element.classList.add(\"amplitude-active-audio-container\");\n        });\n    }\n}","import { config } from \"@/config\";\n\nexport class MetaDataElement {\n    static globalMetaDataElementsQuery = '[data-amplitude-audio-info]:not([data-amplitude-audio-index]):not([data-amplitude-collection-key])';\n    static collectionMetaDataElementsQuery = '[data-amplitude-audio-info][data-amplitude-collection-key]:not([data-amplitude-audio-index])';\n    static audioMetaDataElementsQuery = '[data-amplitude-audio-info][data-amplitude-audio-index]:not([data-amplitude-collection-key])';\n    static collectionAudioMetaDataElementsQuery = '[data-amplitude-audio-info][data-amplitude-audio-index][data-amplitude-collection-key]';\n    static collectionInfoElementsQuery = '[data-amplitude-collection-info]';\n\n    #imageMetaDataKeys = [\n        \"cover_art_url\",\n        \"station_art_url\",\n        \"podcast_episode_cover_art_url\",\n        \"album_art_url\"\n    ]\n\n    /**\n     * Gets called after audio has been changed. Updates all of the global\n     * elements and collection elements, not the individual audio elements.\n     * Individual audio elements should only be dynamically set once and not again\n     * since they never change.\n     * \n     * Examples:\n     * Update - Global cover art for a song.\n     * Update - Playlist now playing cover art.\n     * Update - Podcast now playing cover art.\n     * Do Not Update - Individual audio element. These will be set with syncMetaData()\n     * and won't need to be updated again.\n     */\n    displayMetaData(){\n        this.#displayGlobalMetaElements();\n        this.#displayCollectionMetaElements();\n    }\n\n    #displayGlobalMetaElements(){\n        let globalAudioInfoElements = document.querySelectorAll( MetaDataElement.globalMetaDataElementsQuery );\n\n        globalAudioInfoElements.forEach( ( element ) => {\n            let key = element.getAttribute('data-amplitude-audio-info');\n            let value = ( config.active_metadata[ key ] != undefined ) ? config.active_metadata[ key ] : null;\n\n            this.#setMetaValue( key, value, element );\n        });\n    }\n\n    #displayCollectionMetaElements(){\n        let collectionInfoElements = document.querySelectorAll( MetaDataElement.collectionMetaDataElementsQuery );\n\n        collectionInfoElements.forEach( ( element ) => {\n            let key = element.getAttribute('data-amplitude-audio-info');\n            let value = ( config.active_metadata[ key ] != undefined ) ? config.active_metadata[ key ] : null;\n\n            this.#setMetaValue( key, value, element );\n        });\n    }\n    \n    #displayAudioMetaElements(){\n        let audioInfoElements = document.querySelectorAll( MetaDataElement.audioMetaDataElementsQuery );\n\n        audioInfoElements.forEach( ( element ) => {\n            let key = element.getAttribute('data-amplitude-audio-info');\n            let audioIndex = element.getAttribute('data-amplitude-audio-index');\n            let value = config.audio[ audioIndex ][ key ] != undefined ? config.audio[ audioIndex ][ key ] : null;\n\n            this.#setMetaValue( key, value, element );\n        });\n    }\n\n    #displayCollectionAudioMetaElements(){\n        let collectionAudioInfoElements = document.querySelectorAll( MetaDataElement.collectionAudioMetaDataElementsQuery );\n\n        collectionAudioInfoElements.forEach( ( element ) => {\n            let key = element.getAttribute('data-amplitude-audio-info');\n            let audioIndex = element.getAttribute('data-amplitude-audio-index');\n            let collectionKey = element.getAttribute('data-amplitude-collection-key');\n            let value = config.collections[ collectionKey ].audio[ audioIndex ][ info ] != undefined\n                            ? config.collections[ collectionKey ].audio[ audioIndex ][ info ]\n                            : null;\n\n            this.#setMetaValue( key, value, element );\n        });\n    }\n\n    #setMetaValue( key, value, element ){\n        if( this.#imageMetaDataKeys.indexOf( key ) >= 0 ){\n            value = value || config.default_art;\n            element.setAttribute('src', value);\n        }else{\n            value = value || \"\";\n            element.innerHTML = value;\n        }\n    }\n\n    displayCollectionMetaData(){\n\n    }\n\n    syncMetaData(){\n        this.#displayAudioMetaElements();\n        this.#displayCollectionAudioMetaElements();\n        this.displayCollectionMetaData();\n    }\n}","import { Audio } from \"@/core/Audio\";\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { VolumeSliderElement } from \"./VolumeSliderElement\";\nimport { Debug } from \"@/services/Debug\";\n/**\n * Handles the configuration and managing of Mute elements\n * \n * A Mute element is defined as the following:\n * \n * Element: class=\"amplitude-mute\"\n * \n * Whenever this element is interacted with, the audio is muted no matter where.\n */\nexport class MuteElement {\n    static muteElementQuery = '.amplitude-mute';\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    setUp(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( MuteElement.muteElementQuery );\n    }\n\n    #bindInteractions(){\n        if( ConfigState.isIos() ){\n            Debug.writeMessage(\n                \"iOS does NOT allow volume to be set through javascript: https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html#//apple_ref/doc/uid/TP40009523-CH5-SW4\"\n            );\n        }else{\n            this.#elements.forEach( ( element ) => {\n                if( this.#mobile ){\n                    element.removeEventListener( \"touchend\", this.#handleInteraction );\n                    element.addEventListener( \"touchend\", this.#handleInteraction );\n                }else{\n                    element.removeEventListener( \"click\", this.#handleInteraction );\n                    element.addEventListener( \"click\", this.#handleInteraction );\n                }\n            });\n        }\n    }\n\n    #handleInteraction(){\n        if( !ConfigState.isTouchMoving() ){\n            let audio = new Audio();\n\n            if( ConfigState.getVolume() == 0 ){\n                audio.setVolume( ConfigState.getPreMuteVolume() );\n            }else{\n                ConfigState.setPreMuteVolume();\n                audio.setVolume( 0 );\n            }\n\n            MuteElement.syncElements();\n            VolumeSliderElement.syncElements();\n        }\n    }\n\n    static syncElements(){\n        let elements = document.querySelectorAll( MuteElement.muteElementQuery );\n\n        elements.forEach( function( element ){\n            if( ConfigState.getVolume() == 0 ){\n                element.classList.remove(\"amplitude-not-muted\");\n                element.classList.add(\"amplitude-muted\");\n            }else{\n                element.classList.add(\"amplitude-not-muted\");\n                element.classList.remove(\"amplitude-muted\");\n            }\n        });\n    }\n}","import { CollectionNextElement } from \"./NextElements/CollectionNextElement\";\nimport { GlobalNextElement } from \"./NextElements/GlobalNextElement\";\n\n/**\n * Handles the configuration and managing of Next elements\n * \n * A Next element is defined as the following:\n * \n * Element: class=\"amplitude-next\"\n * \n * GLOBAL: class=\"amplitude-next\"\n * Handles next for whatever scope the player is in.\n * \n * COLLECTION: class=\"amplitude-next\" data-amplitude-collection=\"{collection_key}\"\n * Handles the next audio within a specific collection.\n */\nexport class NextElement {\n    setUp(){\n        this.#configureGlobalNextElement();\n        this.#configureCollectionNextElement();\n    }\n\n    #configureGlobalNextElement(){\n        let globalNextElement = new GlobalNextElement();\n        globalNextElement.initialize();\n    }\n\n    #configureCollectionNextElement(){\n        let collectionNextElement = new CollectionNextElement();\n        collectionNextElement.initialize();\n    }\n}","import { ConfigState } from \"@/services/ConfigState\";\nimport { Navigation as CollectionNavigation } from \"@/services/Collections/Navigation.js\";\nimport { config } from \"@/config\";\nimport { Debug } from \"@/services/Debug\";\n\nexport class CollectionNextElement {\n    static collectionNextQuery = '.amplitude-next[data-amplitude-collection-key]';\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( CollectionNextElement.collectionNextQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( ( element ) => {\n            if( this.#mobile ){\n                element.removeEventListener( \"touchend\", this.#handleInteraction );\n                element.addEventListener( \"touchend\", this.#handleInteraction );\n            }else{\n                element.removeEventListener( \"click\", this.#handleInteraction );\n                element.addEventListener( \"click\", this.#handleInteraction );\n            }\n        });\n    }\n\n    #handleInteraction(){\n        let collectionKey = this.getAttribute('data-amplitude-collection-key');\n\n        if( collectionKey == config.active_collection ){\n            let collectionNavigation = new CollectionNavigation();\n            collectionNavigation.next( collectionKey );\n        }else{\n            Debug.writeMessage(\"You can not go to the next audio on a playlist that is not being played!\");\n        }\n    }\n}","import { ConfigState } from \"@/services/ConfigState\";\nimport { Debug } from \"@/services/Debug\";\nimport { Navigation as CollectionNavigation } from '@/services/Collections/Navigation.js';\n\nexport class GlobalNextElement {\n    static globalNextQuery = '.amplitude-next:not([data-amplitude-collection-key])';\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( GlobalNextElement.globalNextQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( ( element ) => {\n            if( this.#mobile ){\n                element.removeEventListener( \"touchend\", this.#handleInteraction );\n                element.addEventListener( \"touchend\", this.#handleInteraction );\n            }else{\n                element.removeEventListener( \"click\", this.#handleInteraction );\n                element.addEventListener( \"click\", this.#handleInteraction );\n            }\n        });\n    }\n\n    #handleInteraction(){\n        if( ConfigState.getScope() == 'collection' ){\n            let collectionNavigation = new CollectionNavigation();\n            collectionNavigation.next();\n        }else{\n            Debug.writeMessage(\"You can only navigate next when you are playing a collection.\");\n        }\n    }\n}","import { GlobalPauseElement } from \"./PauseElements/GlobalPauseElement\";\nimport { CollectionPauseElement } from \"./PauseElements/CollectionPauseElement\";\nimport { AudioPauseElement } from \"./PauseElements/AudioPauseElement\";\nimport { CollectionAudioPauseElement } from \"./PauseElements/CollectionAudioPauseElement\";\n\n/**\n * Handles the configuration and managing of Pause elements.\n * \n * A Pause element is defined as the following:\n * \n * Element: class=\"amplitude-pause\"\n * \n * GLOBAL: class=\"amplitude-pause\"\n * Controls the entire state of the audio player.\n * \n * COLLECTION: class=\"amplitude-pause\" data-amplitude-collection=\"{collection_key}\"\n * Scoped to an individual collection. Will only pause what's within the scope of the collection.\n * \n * AUDIO: class=\"amplitude-pause\" data-amplitude-audio-index=\"{audio_index}\"\n * Scoped to an individual audio element.\n * \n * AUDIO IN COLLECTION: class=\"amplitude-pause\" data-amplitude-collection-key=\"{collection_key}\" data-amplitude-audio-index=\"{audio_index}\"\n * Scoped to an individual audio element within a collection.\n */\nexport class PauseElement {\n    setUp(){\n        this.#configureGlobalPauseElement();\n        this.#configureCollectionPauseElement();\n        this.#configureAudioPauseElement();\n        this.#configureCollectionAudioPauseElement();\n    }\n\n    #configureGlobalPauseElement(){\n        let globalPauseElement = new GlobalPauseElement();\n        globalPauseElement.initialize();\n    }\n\n    #configureCollectionPauseElement(){\n        let collectionPauseElement = new CollectionPauseElement();\n        collectionPauseElement.initialize();\n    }\n\n    #configureAudioPauseElement(){\n        let audioPauseElement = new AudioPauseElement();\n        audioPauseElement.initialize();\n    }\n\n    #configureCollectionAudioPauseElement(){\n        let collectionAudioPauseElement = new CollectionAudioPauseElement();\n        collectionAudioPauseElement.initialize();\n    }\n}","import { Audio } from \"@/core/Audio\";\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\nimport { config } from \"../../config\";\n\nexport class AudioPauseElement{\n    static audioPauseQuery = \".amplitude-pause[data-amplitude-audio-index]:not([data-amplitude-collection-key])\";\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( AudioPauseElement.audioPauseQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( (element) => {\n            if( this.#mobile ){\n                element.removeEventListener(\"touchend\", this.#handleInteraction );\n                element.addEventListener(\"touchend\", this.#handleInteraction );\n            }else{\n                element.removeEventListener(\"click\", this.#handleInteraction );\n                element.addEventListener(\"click\", this.#handleInteraction );\n            }\n        });\n    }\n\n    #handleInteraction(){\n        if( !ConfigState.isTouchMoving() ){\n            let audioIndex = this.getAttribute('data-amplitude-audio-index');\n\n            // If the scope is audio and the index of the element matches the active audio\n            // index, then we pause the player.\n            if( ConfigState.getScope() == 'audio' && ( config.active_index == audioIndex ) ){\n                let audio = new Audio();\n                audio.pause();\n\n                PlayPauseElement.syncAll();\n            }\n        }\n    }\n}","import { Audio } from \"@/core/Audio\";\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\nimport { config } from \"@/config\";\n\nexport class CollectionAudioPauseElement{\n    static collectionAudioPauseQuery = '.amplitude-pause[data-amplitude-collection-key][data-amplitude-audio-index]';\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( CollectionAudioPauseElement.collectionAudioPauseQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( (element) => {\n            if( this.#mobile ){\n                element.removeEventListener(\"touchend\", this.#handleInteraction );\n                element.addEventListener(\"touchend\", this.#handleInteraction.bind(this, element) );\n            }else{\n                element.removeEventListener(\"click\", this.#handleInteraction );\n                element.addEventListener(\"click\", this.#handleInteraction.bind(this, element) );\n            }\n        });\n    }\n\n    #handleInteraction(){\n        if( !ConfigState.isTouchMoving() ){\n            let collectionKey = element.getAttribute('data-amplitude-collection-key');\n            let audioIndex = element.getAttribute('data-amplitude-audio-index');\n\n            if( config.active_collection == collectionKey &&\n                config.collections[ collectionKey ].active_index == audioIndex ){\n                    let audio = new Audio();\n                    audio.pause();\n\n                    PlayPauseElement.syncAll();\n            }\n        }\n    }\n}","import { Audio } from \"@/core/Audio\";\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\n\nexport class CollectionPauseElement{\n    static collectionPauseQuery = '.amplitude-pause[data-amplitude-collection-key]:not([data-amplitude-audio-index])';\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( CollectionPauseElement.collectionPauseQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( (element) => {\n            if( this.#mobile ){\n                element.removeEventListener(\"touchend\", this.#handleInteraction );\n                element.addEventListener(\"touchend\", this.#handleInteraction );\n            }else{\n                element.removeEventListener(\"click\", this.#handleInteraction );\n                element.addEventListener(\"click\", this.#handleInteraction );\n            }\n        });\n    }\n\n    #handleInteraction(){\n        if( !ConfigState.isTouchMoving() ){\n            let collectionKey = this.getAttribute('data-amplitude-collection-key');\n            \n            // Ensure we pause the audio if the active collection is\n            // what is controlled by this pause element.\n            if( config.active_collection == collectionKey ){\n                let audio = new Audio();\n                audio.pause();\n\n                PlayPauseElement.syncAll();\n            }\n        }\n    }\n}","import { Audio } from \"@/core/Audio\";\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\n\nexport class GlobalPauseElement {\n    static globalPauseQuery = '.amplitude-pause:not([data-amplitude-audio-index]):not([data-amplitude-collection-key])';\n    \n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( GlobalPauseElement.globalPauseQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( ( element ) => {\n            if( this.#mobile ){\n                element.removeEventListener( \"touchend\", this.#handleInteraction );\n                element.addEventListener( \"touchend\", this.#handleInteraction );\n            }else{\n                element.removeEventListener( \"click\", this.#handleInteraction );\n                element.addEventListener( \"click\", this.#handleInteraction );\n            }\n        });\n    }\n\n    #handleInteraction(){\n        if( !ConfigState.isTouchMoving() ){\n            let audio = new Audio();\n            audio.pause();\n\n            PlayPauseElement.syncAll();\n        }\n    }\n}","import { GlobalPlayElement } from \"./PlayElements/GlobalPlayElement\";\nimport { CollectionPlayElement } from \"./PlayElements/CollectionPlayElement\";\nimport { AudioPlayElement } from \"./PlayElements/AudioPlayElement\";\nimport { CollectionAudioPlayElement } from \"./PlayElements/CollectionAudioPlayElement\";\n/**\n * Handles the configuration and managing of the play elements.\n * \n * A Play element is defined as the following:\n * \n * Element: class=\"amplitude-play\"\n * \n * GLOBAL: class=\"amplitude-play\"\n * Controls the entire state of the audio player. Will play whatever is active.\n * \n * COLLECTION: class=\"amplitude-play\" data-amplitude-collection-key=\"{collection_key}\"\n * Scoped to an individual collection. Will only play within the collection.\n * \n * AUDIO: class=\"amplitude-play\" data-amplitude-audio-index=\"{audio_index}\"\n * Scoped to an individual audio element. Will only play a specific piece of audio.\n * \n * AUDIO IN COLLECTION: class=\"amplitude-play\" data-amplitude-collection-key=\"{collection_key}\" data-amplitude-audio-index=\"{audio_index}\"\n * Scoped to an individual audio element within a collection. Will only play a specific piece of audio in a collection.\n */\nexport class PlayElement{\n    setUp(){\n        this.#configureGlobalPlayElement();\n        this.#configureCollectionPlayElement();\n        this.#configureAudioPlayElement();\n        this.#configureCollectionAudioPlayElement();\n    }\n\n    #configureGlobalPlayElement(){\n        let globalPlayElement = new GlobalPlayElement();\n        globalPlayElement.initialize();\n    }\n\n    #configureCollectionPlayElement(){\n        let collectionPlayElement = new CollectionPlayElement();\n        collectionPlayElement.initialize();\n    }\n\n    #configureAudioPlayElement(){\n        let audioPlayElement = new AudioPlayElement();\n        audioPlayElement.initialize();\n    }\n\n    #configureCollectionAudioPlayElement(){\n        let collectionAudioPlayElement = new CollectionAudioPlayElement();\n        collectionAudioPlayElement.initialize();\n    }\n}","import { Audio } from '@/core/Audio.js';\nimport { Checks as AudioChecks } from '@/services/Audio/Checks.js';\nimport { Navigation as AudioNavigation } from '@/services/Audio/Navigation.js';\nimport { Checks as CollectionChecks } from '@/services/Collections/Checks.js';\nimport { Navigation as CollectionNavigation } from '@/services/Collections/Navigation.js';\nimport { Debug } from \"@/services/Debug\";\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { config } from \"@/config\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\n\nexport class AudioPlayElement {\n    static audioPlayQuery = '.amplitude-play[data-amplitude-audio-index]:not([data-amplitude-collection-key])';\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( AudioPlayElement.audioPlayQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( (element) => {\n            if( this.#mobile ){\n                element.removeEventListener(\"touchend\", this.#handleInteraction );\n                element.addEventListener(\"touchend\", this.#handleInteraction.bind(this, element) );\n            }else{\n                element.removeEventListener(\"click\", this.#handleInteraction );\n                element.addEventListener(\"click\", this.#handleInteraction.bind(this, element) );\n            }\n        } );\n    }\n\n    #handleInteraction( element ){\n        if( !ConfigState.isTouchMoving() ){     \n            let index = element.getAttribute('data-amplitude-audio-index');\n\n            if( !AudioChecks.audioExists( index ) ){\n                Debug.writeMessage('Audio with index \"'+index+'\" does not exist! Please add an audio object at this index in your configuration.');\n                return false;\n            }\n\n            this.#handleCollectionChanges( index );\n            this.#handleAudioChanges( index );\n            this.#playAudio();\n            \n            PlayPauseElement.syncAll();\n        }\n    }\n\n    #handleCollectionChanges( index ){\n        if( CollectionChecks.collectionChanged( null ) ){\n            let collectionNavigation = new CollectionNavigation();\n            let audioNavigation = new AudioNavigation();\n\n            collectionNavigation.setActiveCollection( null );\n            audioNavigation.changeAudio(\n                config.audio[index], index, true\n            );\n        }\n    }\n\n    #handleAudioChanges( index ){\n        if( AudioChecks.audioChanged( index ) ){\n            let audioNavigation = new AudioNavigation();\n\n            audioNavigation.changeAudio(\n                config.audio[index], index, true\n            );\n        }\n    }\n\n    #playAudio(){\n        let audio = new Audio();\n        audio.play();\n    }\n}","import { Audio } from '@/core/Audio.js';\nimport { Checks as AudioChecks } from '@/services/Audio/Checks.js';\nimport { Checks as CollectionChecks } from '@/services/Collections/Checks.js';\nimport { Navigation as CollectionNavigation } from '@/services/Collections/Navigation.js';\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { config } from \"@/config\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\n\nexport class CollectionAudioPlayElement {\n    static collectionAudioPlayQuery = '.amplitude-play[data-amplitude-audio-index][data-amplitude-collection-key]';\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( CollectionAudioPlayElement.collectionAudioPlayQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( (element) => {\n            if( this.#mobile ){\n                element.removeEventListener(\"touchend\", this.#handleInteraction );\n                element.addEventListener(\"touchend\", this.#handleInteraction );\n            }else{\n                element.removeEventListener(\"click\", this.#handleInteraction );\n                element.addEventListener(\"click\", this.#handleInteraction );\n            }\n        } );\n    }\n\n    #handleInteraction(){\n        if( !ConfigState.isTouchMoving() ){\n            let collectionKey = this.getAttribute('data-amplitude-collection-key');\n            let audioIndex = this.getAttribute('data-amplitude-audio-index');\n            \n            this.#handleCollectionChanges( collectionKey, audioIndex );\n            this.#handleAudioChanges( collectionKey, audioIndex );\n            this.#playAudio();\n\n            PlayPauseElement.syncAll();\n        }\n    }\n\n    #handleCollectionChanges( collectionKey, audioIndex ){\n        if( CollectionChecks.collectionChanged( collectionKey ) ){\n            let collectionNavigation = new CollectionNavigation();\n\n            collectionNavigation.setActiveCollection( collectionKey );\n            collectionNavigation.changeAudioCollection(\n                collectionKey,\n                config.collections[ collectionKey ].audio[audioIndex],\n                audioIndex,\n                true\n            );\n        }\n    }\n\n    #handleAudioChanges( collectionKey, audioIndex ){\n        if( AudioChecks.audioChanged( audioIndex, collectionKey ) ){\n            let collectionNavigation = new CollectionNavigation();\n\n            collectionNavigation.changeAudioCollection(\n                collectionKey,\n                config.collections[ collectionKey ].audio[audioIndex],\n                audioIndex,\n                true\n            );\n        }\n    }\n\n    #playAudio(){\n        let audio = new Audio();\n        audio.play();\n    }\n}","import { Audio } from \"@/core/Audio\";\nimport { Checks as CollectionChecks } from \"@/services/Collections/Checks\";\nimport { Navigation as CollectionNavigation } from \"@/services/Collections/Navigation\";\nimport { Debug } from \"@/services/Debug\";\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { config } from \"@/config\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\n\nexport class CollectionPlayElement{\n    static collectionPlayQuery = '.amplitude-play[data-amplitude-collection-key]:not([data-amplitude-audio-index])';\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( CollectionPlayElement.collectionPlayQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( (element) => {\n            if( this.#mobile ){\n                element.removeEventListener(\"touchend\", this.#handleInteraction );\n                element.addEventListener(\"touchend\", this.#handleInteraction );\n            }else{\n                element.removeEventListener(\"click\", this.#handleInteraction );\n                element.addEventListener(\"click\", this.#handleInteraction );\n            }\n        });\n    }\n\n    #handleInteraction(){\n        if( !ConfigState.isTouchMoving() ){\n            let collection = this.getAttribute('data-amplitude-collection-key');\n\n            if( !CollectionChecks.collectionExists( collection ) ){\n                Debug.writeMessage('Collection with key \"'+collection+'\" does not exist! Please define this collection in your configuration.');\n                return false;\n            }\n\n            this.#handleCollectionChanges( collection );\n            this.#playAudio();\n\n            PlayPauseElement.syncAll();\n        }\n    }\n\n    #handleCollectionChanges( collection ){\n        if( CollectionChecks.collectionChanged( collection ) ){\n            \n            let collectionNavigation = new CollectionNavigation();\n            collectionNavigation.setActiveCollection( collection );\n\n            // If the collection is shuffled and the collection is changed,\n            // we change the audio to be the first audio in the array. Since,\n            // we are changing the collection, we are starting at the top.\n            if( CollectionChecks.isCollectionShuffled( collection ) ){\n                collectionNavigation.changeAudioCollection(\n                    collection,\n                    config.collections[ collection ].shuffle_list[0],\n                    0,\n                    true\n                );\n            }else{\n                collectionNavigation.changeAudioCollection(\n                    collection,\n                    config.collections[ collection ].audio[0],\n                    0\n                );\n            }\n        }\n    }\n\n    #playAudio(){\n        let audio = new Audio();\n        audio.play();\n    }\n}","import { Audio } from \"@/core/Audio\";\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\n\nexport class GlobalPlayElement {\n    static globalPlayQuery = '.amplitude-play:not([data-amplitude-audio-index]):not([data-amplitude-collection-index])';\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( GlobalPlayElement.globalPlayQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( ( element ) => {\n            if( this.#mobile ){\n                element.removeEventListener( \"touchend\", this.#handleInteraction );\n                element.addEventListener( \"touchend\", this.#handleInteraction );\n            }else{\n                element.removeEventListener( \"click\", this.#handleInteraction );\n                element.addEventListener( \"click\", this.#handleInteraction );\n            }\n        });\n    }\n\n    #handleInteraction(){\n        let audio = new Audio();\n        audio.play();\n\n        PlayPauseElement.syncAll();\n    }\n}","import { GlobalPlayPauseElement } from \"./PlayPauseElements/GlobalPlayPauseElement\";\nimport { CollectionPlayPauseElement } from \"./PlayPauseElements/CollectionPlayPauseElement\";\nimport { AudioPlayPauseElement } from \"./PlayPauseElements/AudioPlayPauseElement\";\nimport { CollectionAudioPlayPauseElement } from \"./PlayPauseElements/CollectionAudioPlayPauseElement\";\n\n/**\n * Handles the configuration and managing of Play/Pause elements.\n * \n * A Play Pause element is defined as the following:\n * \n * Element: class=\"amplitude-play-pause\"\n * \n * GLOBAL: class=\"amplitude-play-pause\" \n * Controls the entire state of the audio player. Will play or pause whatever is active.\n * \n * COLLECTION: class=\"amplitude-play-pause\" data-amplitude-collection-key=\"{collection_key}\"\n * Scoped to an individual collection. Will only play or pause within the scope of a collection.\n * \n * AUDIO: class=\"amplitude-play-pause\" data-amplitude-audio-index=\"{audio_index}\"\n * Scoped to an individual audio element. Will only play or pause a specific piece of audio.\n * \n * AUDIO IN COLLECTION: class=\"amplitude-play-pause\" data-amplitude-collection-key=\"{collection_key}\" data-amplitude-audio-index=\"{audio_index}\"\n * Scoped to an individual audio element within a collection. Will only play or pause a specific piece of audio in a collection.\n */\nexport class PlayPauseElement{\n    constructor(){\n\n    }\n\n    setUp(){\n        this.#configureGlobalPlayPauseElement();\n        this.#configureCollectionPlayPauseElement();\n        this.#configureAudioPlayPauseElement();\n        this.#configureCollectionAudioPlayPauseElement();\n    }\n\n    #configureGlobalPlayPauseElement(){\n        let globalPlayPauseElement = new GlobalPlayPauseElement();\n        globalPlayPauseElement.initialize();\n    }\n\n    #configureCollectionPlayPauseElement(){\n        let collectionPlayPauseElement = new CollectionPlayPauseElement();\n        collectionPlayPauseElement.initialize();\n    }\n\n    #configureAudioPlayPauseElement(){\n        let audioPlayPauseElement = new AudioPlayPauseElement();\n        audioPlayPauseElement.initialize();\n    }\n\n    #configureCollectionAudioPlayPauseElement(){\n        let collectionAudioPlayPauseElement = new CollectionAudioPlayPauseElement();\n        collectionAudioPlayPauseElement.initialize();\n    }\n\n    static syncAll(){\n        GlobalPlayPauseElement.syncUI();\n        CollectionPlayPauseElement.syncUI();\n        AudioPlayPauseElement.syncUI();\n        CollectionAudioPlayPauseElement.syncUI();\n    }\n\n    static syncAllToPause(){\n        GlobalPlayPauseElement.syncToPause();\n        CollectionPlayPauseElement.syncToPause();\n        AudioPlayPauseElement.syncToPause();\n        CollectionAudioPlayPauseElement.syncToPause();\n    }\n\n    /**\n     * Sets an element to be playing by removing the 'amplitude-paused' class\n     * and adding the 'amplitude-playing' class\n     *\n     * @access public\n     * @static\n     * @param {element} element - The element getting the playing class added.\n     */\n    static setElementPlay( element ){\n        element.classList.add(\"amplitude-playing\");\n        element.classList.remove(\"amplitude-paused\");\n    }\n\n    /**\n     * Sets an element to be paused by adding the 'amplitude-paused' class\n     * and removing the 'amplitude-playing' class\n     *\n     * @access public\n     * @static\n     * @param {element} element - The element getting the paused class added.\n     */\n    static setElementPause( element ){\n        element.classList.remove(\"amplitude-playing\");\n        element.classList.add(\"amplitude-paused\");\n    }\n}","import { Audio } from '@/core/Audio.js';\nimport { Checks as AudioChecks } from '@/services/Audio/Checks.js';\nimport { Navigation as AudioNavigation } from '@/services/Audio/Navigation.js';\nimport { Checks as CollectionChecks } from '@/services/Collections/Checks.js';\nimport { Navigation as CollectionNavigation } from '@/services/Collections/Navigation.js';\nimport { Debug } from \"@/services/Debug\";\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { config } from \"@/config\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\n\nexport class AudioPlayPauseElement {\n    static audioPlayPauseQuery = '.amplitude-play-pause[data-amplitude-audio-index]:not([data-amplitude-collection-key])';\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( AudioPlayPauseElement.audioPlayPauseQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( (element) => {\n            if( this.#mobile ){\n                element.removeEventListener(\"touchend\", this.#handleInteraction );\n                element.addEventListener(\"touchend\", this.#handleInteraction.bind(this, element) );\n            }else{\n                element.removeEventListener(\"click\", this.#handleInteraction );\n                element.addEventListener(\"click\", this.#handleInteraction.bind(this, element) );\n            }\n        } );\n    }\n\n    /**\n     * There can be multiple collections on the page. There can also be multiple\n     * individual audio players and audio players in collections.\n     * \n     * We first check to see if the audio index exists. This can be a game changer\n     * if the user messes up a key.\n     * \n     * Next, we check to see if the collection has changed. Even though, this class\n     * responds to audio that is not a part of a collection, technically the collection\n     * changes if the state of the player is in collection mode and we switch out of collection\n     * mode.\n     * \n     * Finally, we check to see if the audio has changed. This means there is more than\n     * one audio player on the page and the user has switched to a different player. If the\n     * player was in collection mode, this check won't do anything since we change the audio\n     * out of collection mode. This only fires if the player is not in collection mode and\n     * switches to another audio player not in collection mode.\n     * \n     * @returns {boolean|null}\n     */\n    #handleInteraction( element ){\n        if( !ConfigState.isTouchMoving() ){\n            let index = element.getAttribute('data-amplitude-audio-index');\n            \n            if( !AudioChecks.audioExists( index ) ){\n                Debug.writeMessage('Audio with index \"'+index+'\" does not exist! Please add an audio object at this index in your configuration.');\n                return false;\n            }\n\n            this.#handleCollectionChanges( index );\n            this.#handleAudioChanges( index );\n            this.#toggleAudio();\n            \n            PlayPauseElement.syncAll();\n        }\n    }\n\n    #handleCollectionChanges( index ){\n        if( CollectionChecks.collectionChanged( null ) ){\n            let collectionNavigation = new CollectionNavigation();\n            let audioNavigation = new AudioNavigation();\n\n            collectionNavigation.setActiveCollection( null );\n            audioNavigation.changeAudio(\n                config.audio[index], index, true\n            );\n        }\n    }\n\n    #handleAudioChanges( index ){\n        if( AudioChecks.audioChanged( index ) ){\n            let audioNavigation = new AudioNavigation();\n\n            audioNavigation.changeAudio(\n                config.audio[index], index, true\n            );\n        }\n    }\n\n    #toggleAudio(){\n        let audio = new Audio();\n\n        if( config.audio_element.paused ){\n            audio.play();\n        }else{\n            audio.pause();\n        }\n    }\n\n    static syncUI(){\n        let state = ConfigState.getAudioState();\n        let elements = document.querySelectorAll( AudioPlayPauseElement.audioPlayPauseQuery );\n        let activeAudioIndex = ConfigState.getActiveAudioIndex();\n\n        elements.forEach( ( element ) => {\n            let elementAudioIndex = element.getAttribute('data-amplitude-audio-index');\n\n            if( state == 'playing' && ( activeAudioIndex == elementAudioIndex ) ){\n                PlayPauseElement.setElementPlay( element );\n            }else{\n                PlayPauseElement.setElementPause( element );\n            }\n        })\n    }\n\n    static syncToPause(){\n        let elements = document.querySelectorAll( AudioPlayPauseElement.audioPlayPauseQuery );\n\n        elements.forEach( ( element ) => {\n            PlayPauseElement.setElementPause( element );\n        });\n    }\n}","import { Audio } from '@/core/Audio.js';\nimport { Checks as AudioChecks } from '@/services/Audio/Checks.js';\nimport { Checks as CollectionChecks } from '@/services/Collections/Checks.js';\nimport { Navigation as CollectionNavigation } from '@/services/Collections/Navigation.js';\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { config } from \"@/config\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\n\nexport class CollectionAudioPlayPauseElement {\n    static collectionAudioPlayPauseQuery = '.amplitude-play-pause[data-amplitude-audio-index][data-amplitude-collection-key]';\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( CollectionAudioPlayPauseElement.collectionAudioPlayPauseQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( (element) => {\n            if( this.#mobile ){\n                element.removeEventListener(\"touchend\", this.#handleInteraction );\n                element.addEventListener(\"touchend\", this.#handleInteraction.bind(this, element) );\n            }else{\n                element.removeEventListener(\"click\", this.#handleInteraction );\n                element.addEventListener(\"click\", this.#handleInteraction.bind(this, element) );\n            }\n        } );\n    }\n\n    #handleInteraction( element ){\n        if( !ConfigState.isTouchMoving() ){\n            let collectionKey = element.getAttribute('data-amplitude-collection-key');\n            let audioIndex = element.getAttribute('data-amplitude-audio-index');\n            \n            this.#handleCollectionChanges( collectionKey, audioIndex );\n            this.#handleAudioChanges( collectionKey, audioIndex );\n            this.#toggleAudio();\n\n            PlayPauseElement.syncAll();\n        }\n    }\n\n    #handleCollectionChanges( collectionKey, audioIndex ){\n        if( CollectionChecks.collectionChanged( collectionKey ) ){\n            let collectionNavigation = new CollectionNavigation();\n\n            collectionNavigation.setActiveCollection( collectionKey );\n            collectionNavigation.changeAudioCollection(\n                collectionKey,\n                config.collections[ collectionKey ].audio[audioIndex],\n                audioIndex,\n                true\n            );\n        }\n    }\n\n    #handleAudioChanges( collectionKey, audioIndex ){\n        if( AudioChecks.audioChanged( audioIndex, collectionKey ) ){\n            let collectionNavigation = new CollectionNavigation();\n\n            collectionNavigation.changeAudioCollection(\n                collectionKey,\n                config.collections[ collectionKey ].audio[audioIndex],\n                audioIndex,\n                true\n            );\n        }\n    }\n\n    #toggleAudio(){\n        let audio = new Audio();\n\n        if( config.audio_element.paused ){\n            audio.play();\n        }else{\n            audio.pause();\n        }\n    }\n\n    static syncUI(){\n        let state = ConfigState.getAudioState();\n        let elements = document.querySelectorAll( CollectionAudioPlayPauseElement.collectionAudioPlayPauseQuery );\n        \n        elements.forEach( ( element ) => {\n            if( state == 'playing' ){\n                PlayPauseElement.setElementPlay( element );\n            }else{\n                PlayPauseElement.setElementPause( element );\n            }\n        })\n    }\n\n    static syncToPause(){\n        let elements = document.querySelectorAll( CollectionAudioPlayPauseElement.collectionAudioPlayPauseQuery );\n\n        elements.forEach( ( element ) => {\n            PlayPauseElement.setElementPause( element );\n        });\n    }\n}","import { Audio } from \"@/core/Audio\";\nimport { Checks as CollectionChecks } from \"@/services/Collections/Checks\";\nimport { Navigation as CollectionNavigation } from \"@/services/Collections/Navigation\";\nimport { Debug } from \"@/services/Debug\";\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { config } from \"@/config\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\n\n/**\n * A Collection Play Pause element is defined by the following:\n * \n * Element: class=\"amplitude-play-pause\" data-amplitude-collection-key=\"{collection_key}\"\n */\nexport class CollectionPlayPauseElement {\n    static collectionPlayPauseQuery = '.amplitude-play-pause[data-amplitude-collection-key]:not([data-amplitude-audio-index])';\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements()\n        this.#bindInteractions()\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( CollectionPlayPauseElement.collectionPlayPauseQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( (element) => {;\n            if( this.#mobile ){\n                element.removeEventListener(\"touchend\", this.#handleInteraction );\n                element.addEventListener(\"touchend\", this.#handleInteraction.bind(this, element) );\n            }else{\n                element.removeEventListener(\"click\", this.#handleInteraction );\n                element.addEventListener(\"click\", this.#handleInteraction.bind(this, element) );\n            }\n        } );\n    }\n\n    #handleInteraction( element ){\n        if( !ConfigState.isTouchMoving() ){\n            let collection = element.getAttribute('data-amplitude-collection-key');\n\n            if( !CollectionChecks.collectionExists( collection ) ){\n                Debug.writeMessage('Collection with key \"'+collection+'\" does not exist! Please define this collection in your configuration.');\n                return false;\n            }\n\n            this.#handleCollectionChanges( collection );\n            this.#toggleAudio();\n\n            PlayPauseElement.syncAll();\n        }\n    }\n\n    #handleCollectionChanges( collection ){\n        if( CollectionChecks.collectionChanged( collection ) ){\n            \n            let collectionNavigation = new CollectionNavigation();\n            collectionNavigation.setActiveCollection( collection );\n\n            // If the collection is shuffled and the collection is changed,\n            // we change the audio to be the first audio in the array. Since,\n            // we are changing the collection, we are starting at the top.\n            if( CollectionChecks.isCollectionShuffled( collection ) ){\n                collectionNavigation.changeAudioCollection(\n                    collection,\n                    config.collections[ collection ].shuffle_list[0],\n                    0,\n                    true\n                );\n            }else{\n                collectionNavigation.changeAudioCollection(\n                    collection,\n                    config.collections[ collection ].audio[0],\n                    0\n                );\n            }\n        }\n    }\n\n    #toggleAudio(){\n        let audio = new Audio();\n\n        if( config.audio_element.paused ){\n            audio.play();\n        }else{\n            audio.pause();\n        }\n    }\n\n    static syncUI(){\n        let state = ConfigState.getAudioState();\n        let elements = document.querySelectorAll( CollectionPlayPauseElement.collectionPlayPauseQuery );\n        let activeCollectionKey = ConfigState.getActiveCollection();\n\n        elements.forEach( ( element ) => {\n            let elementCollectionKey = element.getAttribute('data-amplitude-collection-key');\n\n            if( state == 'playing' && ( activeCollectionKey == elementCollectionKey ) ){\n                PlayPauseElement.setElementPlay( element );\n            }else{\n                PlayPauseElement.setElementPause( element );\n            }\n        })\n    }\n\n    static syncToPause(){\n        let elements = document.querySelectorAll( CollectionPlayPauseElement.collectionPlayPauseQuery );\n\n        elements.forEach( (element) => {\n            PlayPauseElement.setElementPause( element );\n        });\n    }\n}","import { Audio } from \"@/core/Audio\";\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { config } from \"@/config\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\n\nexport class GlobalPlayPauseElement{\n    static globalPlayPauseQuery = '.amplitude-play-pause:not([data-amplitude-audio-index]):not([data-amplitude-collection-key])';\n    \n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements()\n        this.#bindInteractions()\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( GlobalPlayPauseElement.globalPlayPauseQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( (element) => {\n            if( this.#mobile ){\n                element.removeEventListener(\"touchend\", this.#handleInteraction );\n                element.addEventListener(\"touchend\", this.#handleInteraction );\n            }else{\n                element.removeEventListener(\"click\", this.#handleInteraction );\n                element.addEventListener(\"click\", this.#handleInteraction );\n            }\n        } );\n    }\n\n    #handleInteraction(){\n        if( !ConfigState.isTouchMoving() ){\n            let audio = new Audio();\n\n            if( config.audio_element.paused ){\n                audio.play();\n            }else{\n                audio.pause();\n            }\n\n            PlayPauseElement.syncAll();\n        }\n    }\n\n    static syncUI(){\n        let state = ConfigState.getAudioState();\n        let elements = document.querySelectorAll( GlobalPlayPauseElement.globalPlayPauseQuery );\n\n        elements.forEach( ( element ) => {\n            if( state == 'playing' ){\n                PlayPauseElement.setElementPlay( element );\n            }else{\n                PlayPauseElement.setElementPause( element );\n            }\n        })\n    }\n\n    static syncToPause(){\n        let elements = document.querySelectorAll( GlobalPlayPauseElement.globalPlayPauseQuery );\n\n        elements.forEach( (element) => {\n            PlayPauseElement.setElementPause( element );\n        });\n    }\n}","import { Audio } from \"@/core/Audio\";\nimport { ConfigState } from \"@/services/ConfigState\";\n\nexport class PlaybackSpeedElement {\n    static playbackSpeedElementQuery = '.amplitude-playback-speed';\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    setUp(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( PlaybackSpeedElement.playbackSpeedElementQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( ( element ) => {\n            if( this.#mobile ){\n                element.removeEventListener( \"touchend\", this.#handleInteraction );\n                element.addEventListener( \"touchend\", this.#handleInteraction );\n            }else{\n                element.removeEventListener( \"click\", this.#handleInteraction );\n                element.addEventListener( \"click\", this.#handleInteraction );\n            }\n        });\n    }\n\n    #handleInteraction(){\n        if( !ConfigState.isTouchMoving() ){\n            let audio = new Audio();\n\n            switch( ConfigState.getPlaybackSpeed() ){\n                case 1:\n                    audio.setPlaybackSpeed( 1.5 );\n                break;\n                case 1.5:\n                    audio.setPlaybackSpeed( 2 );\n                break;\n                case 2:\n                    audio.setPlaybackSpeed( 1 );\n                break;\n            }\n\n            PlaybackSpeedElement.syncElements();\n        }\n    }\n\n    static syncElements(){\n        let elements = document.querySelectorAll( PlaybackSpeedElement.playbackSpeedElementQuery );\n\n        elements.forEach( function( element ){\n            element.classList.remove(\"amplitude-playback-speed-10\");\n            element.classList.remove(\"amplitude-playback-speed-15\");\n            element.classList.remove(\"amplitude-playback-speed-20\");\n\n            switch( ConfigState.getPlaybackSpeed() ){\n                case 1:\n                    element.classList.add(\"amplitude-playback-speed-10\");\n                break;\n                case 1.5:\n                    element.classList.add(\"amplitude-playback-speed-15\");\n                break;\n                case 2:\n                    element.classList.add(\"amplitude-playback-speed-20\");\n                break;\n            }\n        });\n    }\n}","import { CollectionPreviousElement } from \"./PreviousElements/CollectionPreviousElement\";\nimport { GlobalPreviousElement } from \"./PreviousElements/GlobalPreviousElement\";\n\n/**\n * Handles the configuration and managing of Previous elements\n * \n * A Previous element is defined as the following:\n * \n * Element: class=\"amplitude-previous\"\n * \n * GLOBAL: class=\"amplitude-previous\"\n * Handles previous for whatever scope the player is in.\n * \n * COLLECTION: class=\"amplitude-previous\" data-amplitude-collection=\"{collection_key}\"\n * Handles the previous audio within a specific collection.\n */\nexport class PreviousElement {\n    setUp(){\n        this.#configureGlobalPreviousElement();\n        this.#configureCollectionPreviousElement();\n    }\n\n    #configureGlobalPreviousElement(){\n        let globalPreviousElement = new GlobalPreviousElement();\n        globalPreviousElement.initialize();\n    }\n\n    #configureCollectionPreviousElement(){\n        let collectionPreviousElement = new CollectionPreviousElement();\n        collectionPreviousElement.initialize();   \n    }\n}","import { ConfigState } from \"@/services/ConfigState\";\nimport { Debug } from \"@/services/Debug\";\nimport { Navigation as CollectionNavigation } from \"@/services/Collections/Navigation.js\"\n\nexport class CollectionPreviousElement {\n    static collectionPreviousQuery = '.amplitude-previous[data-amplitude-collection-key]';\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( CollectionPreviousElement.collectionPreviousQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( ( element ) => {\n            if( this.#mobile ){\n                element.removeEventListener( \"touchend\", this.#handleInteraction );\n                element.addEventListener( \"touchend\", this.#handleInteraction );\n            }else{\n                element.removeEventListener( \"click\", this.#handleInteraction );\n                element.addEventListener( \"click\", this.#handleInteraction );\n            }\n        });\n    }\n\n    #handleInteraction(){\n        if( !ConfigState.isTouchMoving() ){\n            let collectionKey = this.getAttribute('data-amplitude-collection-key');\n\n            if( collectionKey == config.active_collection ){\n                let collectionNavigation = new CollectionNavigation();\n                collectionNavigation.previous();\n            }else{\n                Debug.writeMessage(\"You can not go to the previous audio on a playlist that is not being played!\");\n            }\n        }\n    }\n}","import { ConfigState } from \"@/services/ConfigState\";\nimport { Debug } from \"@/services/Debug\";\nimport { Navigation as CollectionNavigation } from \"@/services/Collections/Navigation.js\"\n\nexport class GlobalPreviousElement {\n    static globalPreviousQuery = '.amplitude-previous:not([data-amplitude-collection-key])';\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( GlobalPreviousElement.globalPreviousQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( ( element ) => {\n            if( this.#mobile ){\n                element.removeEventListener( \"touchend\", this.#handleInteraction );\n                element.addEventListener( \"touchend\", this.#handleInteraction );\n            }else{\n                element.removeEventListener( \"click\", this.#handleInteraction );\n                element.addEventListener( \"click\", this.#handleInteraction );\n            }\n        });\n    }\n\n    #handleInteraction(){\n        if( !ConfigState.isTouchMoving() ){\n            if( ConfigState.getScope() == 'collection' ){\n                let collectionNavigation = new CollectionNavigation();\n                collectionNavigation.previous();\n            }else{\n                Debug.writeMessage(\"You can only navigate previous when you are playing a collection.\");\n            }\n        }\n    }\n}","import { GlobalProgressElement } from \"./ProgressElements/GlobalProgressElement\";\nimport { CollectionProgressElement } from \"./ProgressElements/CollectionProgressElement\";\nimport { AudioProgressElement } from \"./ProgressElements/AudioProgressElement\";\nimport { CollectionAudioProgressElement } from \"./ProgressElements/CollectionAudioProgressElement\";\n\nexport class ProgressElement{\n    constructor(){\n\n    }\n\n    static syncCurrentTime( percentage ){\n        GlobalProgressElement.syncUI( percentage );\n        CollectionProgressElement.syncUI( percentage );\n        AudioProgressElement.syncUI( percentage );\n        CollectionAudioProgressElement.syncUI( percentage );\n    }\n}","import { ConfigState } from '@/services/ConfigState';\n\nexport class AudioProgressElement{\n    static audioProgressQuery = 'progress.amplitude-audio-played-progress[data-amplitude-audio-index]:not([data-amplitude-collection-key])';\n\n    static syncUI( completionPercentage ){\n        if( !isNaN( completionPercentage ) && isFinite( completionPercentage ) ){\n            let elements = document.querySelectorAll( AudioProgressElement.audioProgressQuery );\n            let activeAudioIndex = ConfigState.getActiveAudioIndex();\n\n            elements.forEach( ( element ) => {\n                let elementAudioIndex = element.getAttribute('data-amplitude-audio-index');\n                let max = element.max;\n\n                if( activeAudioIndex == elementAudioIndex ){\n                    element.value = ( completionPercentage / 100 ) * max;\n                }else{\n                    element.value = 0;\n                }\n            });\n        }\n    }\n}","import { ConfigState } from '@/services/ConfigState';\n\nexport class CollectionAudioProgressElement{\n    static collectionAudioProgressQuery = 'progress.amplitude-audio-played-progress[data-amplitude-collection-key][data-amplitude-audio-index]';\n\n    static syncUI( completionPercentage ){\n        if( !isNaN( completionPercentage ) && isFinite( completionPercentage ) ){\n            let elements = document.querySelectorAll( CollectionAudioProgressElement.collectionAudioProgressQuery );\n            let activeCollectionKey = ConfigState.getActiveCollection();\n            let activeAudioIndex = ConfigState.getActiveAudioIndex();\n\n            elements.forEach( ( element ) => {\n                let elementCollectionKey = element.getAttribute('data-amplitude-collection-key');\n                let elementAudioIndex = element.getAttribute('data-amplitude-audio-index');\n                let max = element.max;\n\n                if( ( activeCollectionKey == elementCollectionKey ) && ( activeAudioIndex == elementAudioIndex ) ){\n                    element.value = ( completionPercentage / 100 ) * max;\n                }else{\n                    element.value = 0;\n                }\n            });\n        }\n    }\n}","import { ConfigState } from '@/services/ConfigState';\n\nexport class CollectionProgressElement{\n    static collectionProgressQuery = 'progress.amplitude-audio-played-progress[data-amplitude-collection-key]:not([data-amplitude-audio-index])';\n\n    static syncUI( completionPercentage ){\n        if( !isNaN( completionPercentage ) && isFinite( completionPercentage ) ){\n            let elements = document.querySelectorAll( CollectionProgressElement.collectionProgressQuery );\n            let activeCollectionKey = ConfigState.getActiveCollection();\n\n            elements.forEach( ( element ) => {\n                let elementCollectionKey = element.getAttribute('data-amplitude-collection-key');\n                let max = element.max;\n\n                if( activeCollectionKey == elementCollectionKey ){\n                    element.value = ( completionPercentage / 100 ) * max;\n                }else{\n                    element.value = 0;\n                }\n            });\n        }\n    }\n}","export class GlobalProgressElement{\n    static globalProgressQuery = 'progress.amplitude-audio-played-progress:not([data-amplitude-audio-index]):not([data-amplitude-collection-key])';\n\n    static syncUI( completionPercentage ){\n        if( !isNaN( completionPercentage ) && isFinite( completionPercentage ) ){\n            let elements = document.querySelectorAll( GlobalProgressElement.globalProgressQuery );\n\n            elements.forEach( ( element ) => {\n                let max = element.max;\n\n                element.value = ( completionPercentage / 100 ) * max;\n            });\n        }\n    }\n}","import { CollectionShuffleElement } from \"./ShuffleElements/CollectionShuffleElement\";\nimport { GlobalShuffleElement } from \"./ShuffleElements/GlobalShuffleElement\";\n\n/**\n * Handles the configuration and managing of Shuffle elements\n * \n * A Shuffle element is defined as the following:\n * \n * Element: class=\"amplitude-shuffle\"\n * \n * GLOBAL: class=\"amplitude-shuffles\"\n * Shuffles the active collection\n * \n * COLLECTION: class=\"amplitude-shuffle\" data-amplitude-collection=\"{collection_key}\"\n * Shuffles the collection identified\n */\nexport class ShuffleElement {\n    setUp(){\n        this.#configureGlobalShuffleElement();\n        this.#configureCollectionShuffleElement();\n    }\n\n    #configureGlobalShuffleElement(){\n        let globalShuffleElement = new GlobalShuffleElement();\n        globalShuffleElement.initialize();\n    }\n\n    #configureCollectionShuffleElement(){\n        let collectionShuffleElement = new CollectionShuffleElement();\n        collectionShuffleElement.initialize();\n    }\n}","import { ConfigState } from \"@/services/ConfigState\";\nimport { Shuffle } from \"@/services/Collections/Shuffle\";\n\nexport class CollectionShuffleElement {\n    static collectionShuffleQuery = '.amplitude-shuffle[data-amplitude-collection-key]';\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( CollectionShuffleElement.collectionShuffleQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( ( element ) => {\n            if( this.#mobile ){\n                element.removeEventListener( \"touchend\", this.#handleInteraction );\n                element.addEventListener( \"touchend\", this.#handleInteraction );\n            }else{\n                element.removeEventListener( \"click\", this.#handleInteraction );\n                element.addEventListener( \"click\", this.#handleInteraction );\n            }\n        });\n    }\n\n    #handleInteraction(){\n        let collectionKey = this.getAttribute('data-amplitude-collection-key');\n\n        let shuffle = new Shuffle( collectionKey );\n        shuffle.toggleShuffle();\n\n        CollectionShuffleElement.syncUI( collectionKey )\n    }\n\n    static syncUI( collection ){\n        let elements = document.querySelectorAll( '.amplitude-shuffle[data-amplitude-collection=\"'+collection+'\"]');\n        \n        elements.forEach( ( element ) => {\n            if( ConfigState.isCollectionShuffled( collection ) ){\n                element.classList.add( \"amplitude-shuffle-on\" );\n                element.classList.remove( \"amplitude-shuffle-off\" );\n            }else{\n                element.classList.add( \"amplitude-shuffle-off\" );\n                element.classList.remove( \"amplitude-shuffle-on\" );\n            }\n        });\n    }\n}","import { ConfigState } from \"@/services/ConfigState\";\nimport { Shuffle } from \"@/services/Collections/Shuffle\";\nimport { Debug } from \"@/services/Debug\";\nimport { CollectionShuffleElement } from \"./CollectionShuffleElement\";\n\nexport class GlobalShuffleElement {\n    static globalShuffleQuery = '.amplitude-shuffle:not([data-amplitude-collection-key])';\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( GlobalShuffleElement.globalShuffleQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( ( element ) => {\n            if( this.#mobile ){\n                element.removeEventListener( \"touchend\", this.#handleInteraction );\n                element.addEventListener( \"touchend\", this.#handleInteraction );\n            }else{\n                element.removeEventListener( \"click\", this.#handleInteraction );\n                element.addEventListener( \"click\", this.#handleInteraction );\n            }\n        });\n    }\n\n    #handleInteraction(){\n        if( ConfigState.getScope() == 'collection' ){\n            let collection = ConfigState.getActiveCollection();\n\n            let shuffle = new Shuffle( collectionKey );\n            shuffle.toggleShuffle();\n\n            GlobalShuffleElement.syncUI();\n            CollectionShuffleElement.syncUI( collection );\n        }else{\n            Debug.writeMessage(\"You can only shuffle a collection if you are playing a collection.\");\n        }\n    }\n\n    static syncUI(){\n        let elements = document.querySelectorAll( GlobalShuffleElement.globalShuffleQuery );\n        let collection = ConfigState.getActiveCollection();\n\n        elements.forEach( ( element ) => {\n            if( ConfigState.isCollectionShuffled( collection ) ){\n                element.classList.add( \"amplitude-shuffle-on\" );\n                element.classList.remove( \"amplitude-shuffle-off\" );\n            }else{\n                element.classList.add( \"amplitude-shuffle-off\" );\n                element.classList.remove( \"amplitude-shuffle-on\" );\n            }\n        });\n    }\n}","import { AudioSkipToElement } from \"./SkipToElements/AudioSkipToElement\";\nimport { CollectionAudioSkipToElement } from \"./SkipToElements/CollectionAudioSkipToElement\";\n\nexport class SkipToElement {\n    setUp(){\n        this.#configureAudioSkipToElement();\n        this.#configureCollectionAudioSkipToElement();\n    }\n\n    #configureAudioSkipToElement(){\n        let audioSkipToElement = new AudioSkipToElement();\n        audioSkipToElement.initialize();\n    }\n\n    #configureCollectionAudioSkipToElement(){\n        let collectionAudioSkipToElement = new CollectionAudioSkipToElement();\n        collectionAudioSkipToElement.initialize();\n    }\n}","import { Audio } from '@/core/Audio.js';\nimport { config } from '@/config';\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { Debug } from \"@/services/Debug\";\nimport { Navigation as AudioNavigation } from '@/services/Audio/Navigation.js';\nimport { PlayPauseElement } from '@/elements/PlayPauseElement';\n\nexport class AudioSkipToElement {\n    static audioSkipToElementQuery = \".amplitude-skip-to[data-amplitude-audio-index]:not([data-amplitude-collection-key])\";\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( AudioSkipToElement.audioSkipToElementQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( (element) => {\n            if( this.#mobile ){\n                element.removeEventListener(\"touchend\", this.#handleInteraction );\n                element.addEventListener(\"touchend\", this.#handleInteraction.bind(this, element) );\n            }else{\n                element.removeEventListener(\"click\", this.#handleInteraction );\n                element.addEventListener(\"click\", this.#handleInteraction.bind(this, element) );\n            }\n        });\n    }\n\n    #handleInteraction( element ){\n        if( !ConfigState.isTouchMoving() ){\n            let audioIndex = element.getAttribute('data-amplitude-audio-index');\n            let location = element.getAttribute('data-amplitude-location');\n\n            if( this.#validElement( audioIndex, location ) ){\n                this.#handleAudioChange( audioIndex );\n                this.#playAudio();\n                PlayPauseElement.syncAll();\n                this.#skipToLocation( location );\n            }\n        }\n    }\n\n    #validElement( audioIndex, location ){\n        if( audioIndex == null ){\n            Debug.writeMessage( \"You must add a `data-amplitude-audio-index` attribute to your `amplitude-skip-to` element.\");\n            return false;\n        }\n\n        if( location == null ){\n            Debug.writeMessage( \"You must add a `data-amplitude-location` attribute in seconds to your `amplitude-skip-to` element.\");\n            return false;\n        }\n\n        return true;\n    }\n\n    #handleAudioChange( audioIndex ){\n        let audioNavigation = new AudioNavigation();\n        audioNavigation.changeAudio(\n            config.audio[ parseInt( audioIndex ) ], parseInt( audioIndex ), true\n        );\n    }\n\n    #playAudio(){\n        let audio = new Audio();\n        audio.play();\n    }\n\n    #skipToLocation( location ){\n        let audio = new Audio();\n        audio.skipToLocation( parseInt( location ) );\n    }\n}","import { Audio } from '@/core/Audio.js';\nimport { Checks as CollectionChecks } from \"@/services/Collections/Checks\";\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { Navigation as CollectionNavigation } from \"@/services/Collections/Navigation\";\nimport { PlayPauseElement } from '@/elements/PlayPauseElement';\n\nexport class CollectionAudioSkipToElement {\n    static collectionAudioSkipToElementQuery = \".amplitude-skip-to[data-amplitude-audio-index][data-amplitude-collection-key]\";\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( CollectionAudioSkipToElement.collectionAudioSkipToElementQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( (element) => {\n            if( this.#mobile ){\n                element.removeEventListener(\"touchend\", this.#handleInteraction );\n                element.addEventListener(\"touchend\", this.#handleInteraction.bind(this, element) );\n            }else{\n                element.removeEventListener(\"click\", this.#handleInteraction );\n                element.addEventListener(\"click\", this.#handleInteraction.bind(this, element) );\n            }\n        });\n    }\n\n    #handleInteraction( element ){\n        if( !ConfigState.isTouchMoving() ){\n            let audioIndex = element.getAttribute('data-amplitude-audio-index');\n            let collectionKey = element.getAttribute('data-amplitude-collection-key');\n            let location = element.getAttribute('data-amplitude-location');\n\n            if( this.#validElement( audioIndex, collectionKey, location ) ){\n                this.#handleCollectionChange( collectionKey );\n                this.#handleAudioChange( audioIndex, collectionKey );\n                this.#playAudio();\n                PlayPauseElement.syncAll();\n                this.#skipToLocation( location );\n            }\n        }\n    }\n\n    #validElement( audioIndex, collectionKey, location ){\n        if( audioIndex == null ){\n            Debug.writeMessage( \"You must add a `data-amplitude-audio-index` attribute to your `amplitude-skip-to` element.\");\n            return false;\n        }\n\n        if( collectionKey == null ){\n            Debug.writeMessage( \"You must add a valid `data-amplitude-collection-key` attribute to your `amplitude-skip-to` element.\");\n            return false;\n        }\n\n        if( location == null ){\n            Debug.writeMessage( \"You must add a `data-amplitude-location` attribute in seconds to your `amplitude-skip-to` element.\");\n            return false;\n        }\n\n        return true;\n    }\n\n    #handleCollectionChange( collection ){\n        if( CollectionChecks.collectionChanged( collection ) ){   \n            let collectionNavigation = new CollectionNavigation();\n            collectionNavigation.setActiveCollection( collection );\n        }\n    }\n\n    #handleAudioChange( audioIndex, collectionKey ){\n        let collectionNavigation = new CollectionNavigation();\n\n        collectionNavigation.changeAudioCollection(\n            collectionKey,\n            config.collections[ collectionKey ].audio[ parseInt( audioIndex ) ],\n            parseInt( audioIndex ),\n            true\n        );\n    }\n\n    #playAudio(){\n        let audio = new Audio();\n        audio.play();\n    }\n\n    #skipToLocation( location ){\n        let audio = new Audio();\n        audio.skipToLocation( parseInt( location ) );\n    }\n}","import { Audio } from \"@/core/Audio\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\nimport { ConfigState } from \"@/services/ConfigState\";\n\n/**\n * Handles the configuration and managing of Stop elements\n * \n * A Stop element is defined as the following:\n * \n * Element: class=\"amplitude-stop\"\n * \n * Whenever this element is interacted with, the audio is stopped no matter where.\n */\nexport class StopElement {\n    static stopElementQuery = '.amplitude-stop';\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    setUp(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( StopElement.stopElementQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( ( element ) => {\n            if( this.#mobile ){\n                element.removeEventListener( \"touchend\", this.#handleInteraction );\n                element.addEventListener( \"touchend\", this.#handleInteraction );\n            }else{\n                element.removeEventListener( \"click\", this.#handleInteraction );\n                element.addEventListener( \"click\", this.#handleInteraction );\n            }\n        });\n    }\n\n    #handleInteraction(){\n        if( !ConfigState.isTouchMoving() ){\n            let audio = new Audio();\n            audio.stop();\n\n            PlayPauseElement.syncAll();\n        }\n    }\n}","import { GlobalCurrentTimeElement } from \"./TimeElements/CurrentTime/GlobalCurrentTimeElement\";\nimport { CollectionCurrentTimeElement } from \"./TimeElements/CurrentTime/CollectionCurrentTimeElement\";\nimport { AudioCurrentTimeElement } from \"./TimeElements/CurrentTime/AudioCurrentTimeElement\";\nimport { CollectionAudioCurrentTimeElement } from \"./TimeElements/CurrentTime/CollectionAudioCurrentTimeElement\";\n\nimport { GlobalDurationElement } from \"./TimeElements/Duration/GlobalDurationElement\";\nimport { CollectionDurationElement } from \"./TimeElements/Duration/CollectionDurationElement\";\nimport { AudioDurationElement } from \"./TimeElements/Duration/AudioDurationElement\";\nimport { CollectionAudioDurationElement } from \"./TimeElements/Duration/CollectionAudioDurationElement\";\n\nexport class TimeElement {\n    syncCurrentTime( currentTime ){\n        let globalCurrentTimeElement = new GlobalCurrentTimeElement( currentTime );\n        globalCurrentTimeElement.sync();\n\n        let collectionCurrentTimeElement = new CollectionCurrentTimeElement( currentTime );\n        collectionCurrentTimeElement.sync();\n\n        let audioCurrentTimeElement = new AudioCurrentTimeElement( currentTime );\n        audioCurrentTimeElement.sync();\n\n        let collectionAudioCurrentTimeElement = new CollectionAudioCurrentTimeElement( currentTime );\n        collectionAudioCurrentTimeElement.sync();\n    }\n\n    syncDurationTime(){\n\n    }\n\n    resetDurationTime(){\n\n    }\n}","import { ConfigState } from \"@/services/ConfigState\";\n\nexport class AudioCurrentTimeElement {\n    static audioFormattedTimeElementQuery = '.amplitude-current-time[data-amplitude-audio-index]:not([data-amplitude-collection-key])';\n    static audioHoursTimeElementQuery = '.amplitude-current-hours[data-amplitude-audio-index]:not([data-amplitude-collection-key])';\n    static audioMinutesTimeElementQuery = '.amplitude-current-minutes[data-amplitude-audio-index]:not([data-amplitude-collection-key])';\n    static audioSecondsTimeElementQuery = '.amplitude-current-seconds[data-amplitude-audio-index]:not([data-amplitude-collection-key])';\n\n    #currentTime;\n\n    constructor( currentTime ){\n        this.#currentTime = currentTime;\n    }\n\n    sync(){\n        this.#syncFormattedTimeElement();\n        this.#syncHourTimeElement();\n        this.#syncMinuteTimeElement();\n        this.#syncSecondTimeElement();\n    }\n\n    #syncFormattedTimeElement(){\n        let timeFormat = ConfigState.getTimeFormat();\n        let activeAudioIndex = ConfigState.getActiveAudioIndex();\n\n        let elements = document.querySelectorAll( AudioCurrentTimeElement.audioFormattedTimeElementQuery );\n        let formattedTime = timeFormat.replace( 'HH', this.#currentTime.hours )\n                                      .replace( 'MM', this.#currentTime.minutes )\n                                      .replace( 'SS', this.#currentTime.seconds );\n        \n        elements.forEach( ( element ) => {\n            let elementAudioIndex = element.getAttribute('data-amplitude-audio-index');\n\n            if( activeAudioIndex == elementAudioIndex ){\n                element.innerHTML = formattedTime;\n            }else{\n                element.innerHTML = '00:00';\n            }\n        })\n    }\n\n    #syncHourTimeElement(){\n        let elements = document.querySelectorAll( AudioCurrentTimeElement.audioHoursTimeElementQuery );\n        let activeAudioIndex = ConfigState.getActiveAudioIndex();\n\n        elements.forEach( ( element ) => {\n            let elementAudioIndex = element.getAttribute('data-amplitude-audio-index');\n\n            if( activeAudioIndex == elementAudioIndex ){\n                element.innerHTML = this.#currentTime.hours;\n            }else{\n                element.innerHTML = '00';\n            }\n        });\n    }\n\n    #syncMinuteTimeElement(){\n        let elements = document.querySelectorAll( AudioCurrentTimeElement.audioMinutesTimeElementQuery );\n        let activeAudioIndex = ConfigState.getActiveAudioIndex();\n\n        elements.forEach( ( element ) => {\n            let elementAudioIndex = element.getAttribute('data-amplitude-audio-index');\n\n            if( activeAudioIndex == elementAudioIndex ){\n                element.innerHTML = this.#currentTime.minutes;\n            }else{\n                element.innerHTML = '00';\n            }\n        });\n    }\n\n    #syncSecondTimeElement(){\n        let elements = document.querySelectorAll( AudioCurrentTimeElement.audioSecondsTimeElementQuery );\n        let activeAudioIndex = ConfigState.getActiveAudioIndex();\n\n        elements.forEach( ( element ) => {\n            let elementAudioIndex = element.getAttribute('data-amplitude-audio-index');\n\n            if( activeAudioIndex == elementAudioIndex ){\n                element.innerHTML = this.#currentTime.seconds;\n            }else{\n                element.innerHTML = '00';\n            }\n        });\n    }\n}","import { ConfigState } from \"@/services/ConfigState\";\n\nexport class CollectionAudioCurrentTimeElement {\n    static collectionAudioFormattedTimeElementQuery = '.amplitude-current-time[data-amplitude-collection-key][data-amplitude-audio-index]';\n    static collectionAudioHoursTimeElementQuery = '.amplitude-current-hours[data-amplitude-collection-key][data-amplitude-audio-index]';\n    static collectionAudioMinutesTimeElementQuery = '.amplitude-current-minutes[data-amplitude-collection-key][data-amplitude-audio-index]';\n    static collectionAudioSecondsTimeElementQuery = '.amplitude-current-seconds[data-amplitude-collection-key][data-amplitude-audio-index]';\n\n    #currentTime;\n\n    constructor( currentTime ){\n        this.#currentTime = currentTime;\n    }\n\n    sync(){\n        this.#syncFormattedTimeElement();\n        this.#syncHourTimeElement();\n        this.#syncMinuteTimeElement();\n        this.#syncSecondTimeElement();\n    }\n\n    #syncFormattedTimeElement(){\n        let timeFormat = ConfigState.getTimeFormat();\n        let activeCollectionKey = ConfigState.getActiveCollection();\n        let activeAudioIndex = ConfigState.getActiveAudioIndex();\n\n        let elements = document.querySelectorAll( CollectionAudioCurrentTimeElement.collectionAudioFormattedTimeElementQuery );\n        let formattedTime = timeFormat.replace( 'HH', this.#currentTime.hours )\n                                      .replace( 'MM', this.#currentTime.minutes )\n                                      .replace( 'SS', this.#currentTime.seconds );\n        \n        elements.forEach( ( element ) => {\n            let elementCollectionKey = element.getAttribute('data-amplitude-collection-key');\n            let elementAudioIndex = element.getAttribute('data-amplitude-audio-index');\n\n            if( ( activeCollectionKey == elementCollectionKey ) && ( activeAudioIndex == elementAudioIndex ) ){\n                element.innerHTML = formattedTime;\n            }else{\n                element.innerHTML = '00:00';\n            }\n        })\n    }\n\n    #syncHourTimeElement(){\n        let elements = document.querySelectorAll( CollectionAudioCurrentTimeElement.collectionAudioHoursTimeElementQuery );\n        let activeCollectionKey = ConfigState.getActiveCollection();\n        let activeAudioIndex = ConfigState.getActiveAudioIndex();\n\n        elements.forEach( ( element ) => {\n            let elementCollectionKey = element.getAttribute('data-amplitude-collection-key');\n            let elementAudioIndex = element.getAttribute('data-amplitude-audio-index');\n\n            if( ( activeCollectionKey == elementCollectionKey ) && ( activeAudioIndex == elementAudioIndex ) ){\n                element.innerHTML = this.#currentTime.hours;\n            }else{\n                element.innerHTML = '00';\n            }\n        });\n    }\n\n    #syncMinuteTimeElement(){\n        let elements = document.querySelectorAll( CollectionAudioCurrentTimeElement.collectionAudioMinutesTimeElementQuery );\n        let activeCollectionKey = ConfigState.getActiveCollection();\n        let activeAudioIndex = ConfigState.getActiveAudioIndex();\n\n        elements.forEach( ( element ) => {\n            let elementCollectionKey = element.getAttribute('data-amplitude-collection-key');\n            let elementAudioIndex = element.getAttribute('data-amplitude-audio-index');\n\n            if( ( activeCollectionKey == elementCollectionKey ) && ( activeAudioIndex == elementAudioIndex ) ){\n                element.innerHTML = this.#currentTime.minutes;\n            }else{\n                element.innerHTML = '00';\n            }\n        });\n    }\n\n    #syncSecondTimeElement(){\n        let elements = document.querySelectorAll( CollectionAudioCurrentTimeElement.collectionAudioSecondsTimeElementQuery );\n        let activeCollectionKey = ConfigState.getActiveCollection();\n        let activeAudioIndex = ConfigState.getActiveAudioIndex();\n\n        elements.forEach( ( element ) => {\n            let elementCollectionKey = element.getAttribute('data-amplitude-collection-key');\n            let elementAudioIndex = element.getAttribute('data-amplitude-audio-index');\n\n            if( ( activeCollectionKey == elementCollectionKey ) && ( activeAudioIndex == elementAudioIndex ) ){\n                element.innerHTML = this.#currentTime.seconds;\n            }else{\n                element.innerHTML = '00';\n            }\n        });\n    }\n}","import { ConfigState } from \"@/services/ConfigState\";\n\nexport class CollectionCurrentTimeElement {\n    static collectionFormattedTimeElementQuery = '.amplitude-current-time[data-amplitude-collection-key]:not([data-amplitude-audio-index])';\n    static collectionHoursTimeElementQuery = '.amplitude-current-hours[data-amplitude-collection-key]:not([data-amplitude-audio-index])';\n    static collectionMinutesTimeElementQuery = '.amplitude-current-minutes[data-amplitude-collection-key]:not([data-amplitude-audio-index])';\n    static collectionSecondsTimeElementQuery = '.amplitude-current-seconds[data-amplitude-collection-key]:not([data-amplitude-audio-index])';\n\n    #currentTime;\n\n    constructor( currentTime ){\n        this.#currentTime = currentTime;\n    }\n\n    sync(){\n        this.#syncFormattedTimeElement();\n        this.#syncHourTimeElement();\n        this.#syncMinuteTimeElement();\n        this.#syncSecondTimeElement();\n    }\n\n    #syncFormattedTimeElement(){\n        let timeFormat = ConfigState.getTimeFormat();\n        let activeCollectionKey = ConfigState.getActiveCollection();\n\n        let elements = document.querySelectorAll( CollectionCurrentTimeElement.collectionFormattedTimeElementQuery );\n        let formattedTime = timeFormat.replace( 'HH', this.#currentTime.hours )\n                                      .replace( 'MM', this.#currentTime.minutes )\n                                      .replace( 'SS', this.#currentTime.seconds );\n        \n        elements.forEach( ( element ) => {\n            let elementCollectionKey = element.getAttribute('data-amplitude-collection-key');\n\n            if( activeCollectionKey == elementCollectionKey ){\n                element.innerHTML = formattedTime;\n            }else{\n                element.innerHTML = '00:00';\n            }\n        })\n    }\n\n    #syncHourTimeElement(){\n        let elements = document.querySelectorAll( CollectionCurrentTimeElement.collectionHoursTimeElementQuery );\n        let activeCollectionKey = ConfigState.getActiveCollection();\n\n        elements.forEach( ( element ) => {\n            let elementCollectionKey = element.getAttribute('data-amplitude-collection-key');\n\n            if( activeCollectionKey == elementCollectionKey ){\n                element.innerHTML = this.#currentTime.hours;\n            }else{\n                element.innerHTML = '00';\n            }\n        });\n    }\n\n    #syncMinuteTimeElement(){\n        let elements = document.querySelectorAll( CollectionCurrentTimeElement.collectionMinutesTimeElementQuery );\n        let activeCollectionKey = ConfigState.getActiveCollection();\n\n        elements.forEach( ( element ) => {\n            let elementCollectionKey = element.getAttribute('data-amplitude-collection-key');\n\n            if( activeCollectionKey == elementCollectionKey ){\n                element.innerHTML = this.#currentTime.minutes;\n            }else{\n                element.innerHTML = '00';\n            }\n        });\n    }\n\n    #syncSecondTimeElement(){\n        let elements = document.querySelectorAll( CollectionCurrentTimeElement.collectionSecondsTimeElementQuery );\n        let activeCollectionKey = ConfigState.getActiveCollection();\n\n        elements.forEach( ( element ) => {\n            let elementCollectionKey = element.getAttribute('data-amplitude-collection-key');\n\n            if( activeCollectionKey == elementCollectionKey ){\n                element.innerHTML = this.#currentTime.seconds;\n            }else{\n                element.innerHTML = '00';\n            }\n        });\n    }\n}","import { ConfigState } from \"@/services/ConfigState\";\n\nexport class GlobalCurrentTimeElement {\n    static globalFormattedTimeElementQuery = '.amplitude-current-time:not([data-amplitude-audio-index]):not([data-amplitude-collection-key])';\n    static globalHoursTimeElementQuery = '.amplitude-current-hours:not([data-amplitude-audio-index]):not([data-amplitude-collection-key])';\n    static globalMinutesTimeElementQuery = '.amplitude-current-minutes:not([data-amplitude-audio-index]):not([data-amplitude-collection-key])';\n    static globalSecondsTimeElementQuery = '.amplitude-current-seconds:not([data-amplitude-audio-index]):not([data-amplitude-collection-key])';\n    \n    #currentTime;\n\n    constructor( currentTime ){\n        this.#currentTime = currentTime\n    }\n    \n    sync(){\n        this.#syncFormattedTimeElement();\n        this.#syncHourTimeElement();\n        this.#syncMinuteTimeElement();\n        this.#syncSecondTimeElement();\n    }\n\n    #syncFormattedTimeElement(){\n        let timeFormat = ConfigState.getTimeFormat();\n\n        let elements = document.querySelectorAll( GlobalCurrentTimeElement.globalFormattedTimeElementQuery );\n        let formattedTime = timeFormat.replace( 'HH', this.#currentTime.hours )\n                                      .replace( 'MM', this.#currentTime.minutes )\n                                      .replace( 'SS', this.#currentTime.seconds );\n\n        elements.forEach( ( element ) => {\n            element.innerHTML = formattedTime;\n        });\n    }\n\n    #syncHourTimeElement(){\n        let elements = document.querySelectorAll( GlobalCurrentTimeElement.globalHoursTimeElementQuery );\n\n        elements.forEach( ( element ) => {\n            element.innerHTML = this.#currentTime.hours;\n        });\n    }\n\n    #syncMinuteTimeElement(){\n        let elements = document.querySelectorAll( GlobalCurrentTimeElement.globalMinutesTimeElementQuery );\n\n        elements.forEach( ( element ) => {\n            element.innerHTML = this.#currentTime.minutes;\n        });\n    }\n\n    #syncSecondTimeElement(){\n        let elements = document.querySelectorAll( GlobalCurrentTimeElement.globalSecondsTimeElementQuery );\n\n        elements.forEach( ( element ) => {\n            element.innerHTML = this.#currentTime.seconds;\n        });\n    }\n}","export class AudioDurationElement {\n    \n}","export class CollectionAudioDurationElement {\n    \n}","export class CollectionDurationElement {\n    \n}","export class GlobalDurationElement {\n    \n}","import { GlobalTrackerElement } from \"./TrackerElements/GlobalTrackerElement\";\nimport { CollectionTrackerElement } from \"./TrackerElements/CollectionTrackerElement\";\nimport { AudioTrackerElement } from \"./TrackerElements/AudioTrackerElement\";\nimport { CollectionAudioTrackerElement } from \"./TrackerElements/CollectionAudioTrackerElement\";\n\nexport class TrackerElement{\n    constructor(){\n\n    }\n\n    setUp(){\n        this.#configureGlobalTrackerElement();\n        this.#configureCollectionTrackerElement();\n        this.#configureAudioTrackerElement();\n        this.#configureCollectionAudioTrackerElement();\n    }\n\n    #configureGlobalTrackerElement(){\n        let globalTrackerElement = new GlobalTrackerElement();\n        globalTrackerElement.initialize();\n    }\n\n    #configureCollectionTrackerElement(){\n        let collectionTrackerElement = new CollectionTrackerElement();\n        collectionTrackerElement.initialize();\n    }\n\n    #configureAudioTrackerElement(){\n        let audioTrackerElement = new AudioTrackerElement();\n        audioTrackerElement.initialize();\n    }\n\n    #configureCollectionAudioTrackerElement(){\n        let collectionAudioTrackerElement = new CollectionAudioTrackerElement();\n        collectionAudioTrackerElement.initialize();\n    }\n\n    static syncCurrentTime( currentTime ){\n        GlobalTrackerElement.syncUI( currentTime );\n        CollectionTrackerElement.syncUI( currentTime );\n        AudioTrackerElement.syncUI( currentTime );\n        CollectionAudioTrackerElement.syncUI( currentTime );\n    }\n}","import { Audio } from \"@/core/Audio\";\nimport { ConfigState } from '@/services/ConfigState';\nimport { Time } from '@/services/Time';\n\nexport class AudioTrackerElement{\n    static audioTrackerQuery = 'input[type=\"range\"].amplitude-audio-tracker[data-amplitude-audio-index]:not([data-amplitude-collection-key])';\n\n    #elements;\n    #isIE;\n\n    constructor(){\n        this.#isIE = ConfigState.isIE();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( AudioTrackerElement.audioTrackerQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( (element) => {\n            if( this.#isIE ){\n                element.removeEventListener(\"change\", this.#handleInteraction );\n                element.addEventListener(\"change\", this.#handleInteraction.bind( this, element ) );\n            }else{\n                element.removeEventListener(\"input\", this.#handleInteraction);\n                element.addEventListener(\"input\", this.#handleInteraction.bind( this, element ) );\n            }\n        });\n    }\n\n    #handleInteraction( element ){\n        if( !ConfigState.isLive() ){\n            let activeAudioIndex = ConfigState.getActiveAudioIndex();\n            let elementAudioIndex = element.getAttribute( 'data-amplitude-audio-index' );\n\n            if( activeAudioIndex == elementAudioIndex ){\n                let locationPercentage = element.value;\n                let trackedLocation = Time.percentageInSeconds( locationPercentage );\n                \n                let audio = new Audio();\n                audio.setCurrentTime( trackedLocation )\n            }\n        }\n    }\n\n    static syncUI( completionPercentage ){\n        let elements = document.querySelectorAll( AudioTrackerElement.audioTrackerQuery );\n        let activeAudioIndex = ConfigState.getActiveAudioIndex();\n\n        elements.forEach( ( element ) => {\n            let elementAudioIndex = element.getAttribute('data-amplitude-audio-index');\n            \n            if( activeAudioIndex == elementAudioIndex ){\n                element.value = completionPercentage;\n            }else{\n                element.value = 0;\n            }\n        });\n    }\n}","import { Audio } from \"@/core/Audio\";\nimport { ConfigState } from '@/services/ConfigState';\nimport { Time } from '@/services/Time';\n\nexport class CollectionAudioTrackerElement{\n    static collectionAudioTrackerQuery = 'input[type=\"range\"].amplitude-audio-tracker[data-amplitude-collection-key][data-amplitude-audio-index]';\n\n    #elements;\n    #isIE;\n\n    constructor(){\n        this.#isIE = ConfigState.isIE();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( CollectionAudioTrackerElement.collectionAudioTrackerQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( (element) => {\n            if( this.#isIE ){\n                element.removeEventListener(\"change\", this.#handleInteraction );\n                element.addEventListener(\"change\", this.#handleInteraction.bind( this, element ) );\n            }else{\n                element.removeEventListener(\"input\", this.#handleInteraction);\n                element.addEventListener(\"input\", this.#handleInteraction.bind( this, element ) );\n            }\n        });\n    }\n\n    #handleInteraction( element ){\n        if( !ConfigState.isLive() ){\n            let activeCollectionKey = ConfigState.getActiveCollection();\n            let elementCollectionKey = element.getAttribute( 'data-amplitude-collection-key' );\n\n            let activeAudioIndex = ConfigState.getActiveAudioIndex();\n            let elementAudioIndex = element.getAttribute( 'data-amplitude-audio-index' );\n\n            if( ( activeCollectionKey == elementCollectionKey ) && ( activeAudioIndex == elementAudioIndex ) ){\n                let locationPercentage = element.value;\n                let trackedLocation = Time.percentageInSeconds( locationPercentage );\n                \n                let audio = new Audio();\n                audio.setCurrentTime( trackedLocation )\n            }\n        }\n    }\n\n    static syncUI( completionPercentage ){\n        let elements = document.querySelectorAll( CollectionAudioTrackerElement.collectionAudioTrackerQuery );\n        let activeCollectionKey = ConfigState.getActiveCollection();\n        let activeAudioIndex = ConfigState.getActiveAudioIndex();\n\n        elements.forEach( ( element ) => {\n            let elementCollectionKey = element.getAttribute('data-amplitude-collection-key');\n            let elementAudioIndex = element.getAttribute('data-amplitude-audio-index');\n            \n            if( ( activeCollectionKey == elementCollectionKey ) && ( activeAudioIndex == elementAudioIndex ) ){\n                element.value = completionPercentage;\n            }else{\n                element.value = 0;\n            }\n        });\n    }\n}","import { Audio } from \"@/core/Audio\";\nimport { ConfigState } from '@/services/ConfigState';\nimport { Time } from '@/services/Time';\n\nexport class CollectionTrackerElement{\n    static collectionTrackerQuery = 'input[type=\"range\"].amplitude-audio-tracker[data-amplitude-collection-key]:not([data-amplitude-audio-index])';\n\n    #elements;\n    #isIE;\n\n    constructor(){\n        this.#isIE = ConfigState.isIE();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( CollectionTrackerElement.collectionTrackerQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( (element) => {\n            if( this.#isIE ){\n                element.removeEventListener(\"change\", this.#handleInteraction );\n                element.addEventListener(\"change\", this.#handleInteraction.bind( this, element ) );\n            }else{\n                element.removeEventListener(\"input\", this.#handleInteraction);\n                element.addEventListener(\"input\", this.#handleInteraction.bind( this, element ) );\n            }\n        });\n    }\n\n    #handleInteraction( element ){\n        if( !ConfigState.isLive() ){\n            let activeCollectionKey = ConfigState.getActiveCollection();\n            let elementCollectionKey = element.getAttribute( 'data-amplitude-collection-key' );\n\n            if( activeCollectionKey == elementCollectionKey ){\n                let locationPercentage = element.value;\n                let trackedLocation = Time.percentageInSeconds( locationPercentage );\n                \n                let audio = new Audio();\n                audio.setCurrentTime( trackedLocation )\n            }\n        }\n    }\n\n    static syncUI( completionPercentage ){\n        let elements = document.querySelectorAll( CollectionTrackerElement.collectionTrackerQuery );\n        let activeCollectionKey = ConfigState.getActiveCollection();\n\n        elements.forEach( ( element ) => {\n            let elementCollectionKey = element.getAttribute('data-amplitude-collection-key');\n            \n            if( activeCollectionKey == elementCollectionKey ){\n                element.value = completionPercentage;\n            }else{\n                element.value = 0;\n            }\n        });\n    }\n}","import { Audio } from \"@/core/Audio\";\nimport { ConfigState } from '@/services/ConfigState';\nimport { Time } from '@/services/Time';\n\nexport class GlobalTrackerElement{\n    static globalTrackerQuery = 'input[type=\"range\"].amplitude-audio-tracker:not([data-amplitude-audio-index]):not([data-amplitude-collection-key])';\n\n    #elements;\n    #isIE;\n\n    constructor(){\n        this.#isIE = ConfigState.isIE();\n    }\n\n    initialize(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( GlobalTrackerElement.globalTrackerQuery );\n    }\n\n    #bindInteractions(){\n        this.#elements.forEach( (element) => {\n            if( this.#isIE ){\n                element.removeEventListener(\"change\", this.#handleInteraction );\n                element.addEventListener(\"change\", this.#handleInteraction.bind( this, element ) );\n            }else{\n                element.removeEventListener(\"input\", this.#handleInteraction);\n                element.addEventListener(\"input\", this.#handleInteraction.bind( this, element ) );\n            }\n        } );\n    }\n\n    #handleInteraction( element ){\n        if( !ConfigState.isLive() ){\n            let locationPercentage = element.value;\n            let trackedLocation = Time.percentageInSeconds( locationPercentage );\n            \n            let audio = new Audio();\n            audio.setCurrentTime( trackedLocation )\n        }\n    }\n\n    static syncUI( completionPercentage ){\n        let elements = document.querySelectorAll( GlobalTrackerElement.globalTrackerQuery );\n\n        elements.forEach( ( element ) => {\n            element.value = completionPercentage;\n        });\n    }\n}","import { Audio } from \"@/core/Audio\";\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { MuteElement } from \"./MuteElement\";\nimport { VolumeSliderElement } from \"./VolumeSliderElement\";\nimport { Debug } from \"@/services/Debug\";\n\n/**\n * Handles the configuration and managing of Volume Down elements\n * \n * A Volume Down element is defined as the following:\n * \n * Element: class=\"amplitude-volume-down\"\n * \n * Whenever this element is interacted with, the audio is muted no matter where.\n */\nexport class VolumeDownElement {\n    static volumeDownElementQuery = '.amplitude-volume-down';\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    setUp(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( VolumeDownElement.volumeDownElementQuery );\n    }\n\n    #bindInteractions(){\n        if( this.#elements.length > 0 && ConfigState.isIos() ){\n            Debug.writeMessage(\n                \"iOS does NOT allow volume to be set through javascript: https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html#//apple_ref/doc/uid/TP40009523-CH5-SW4\"\n            );\n        }else{\n            this.#elements.forEach( ( element ) => {\n                if( this.#mobile ){\n                    element.removeEventListener( \"touchend\", this.#handleInteraction );\n                    element.addEventListener( \"touchend\", this.#handleInteraction );\n                }else{\n                    element.removeEventListener( \"click\", this.#handleInteraction );\n                    element.addEventListener( \"click\", this.#handleInteraction );\n                }\n            });\n        }\n    }\n\n    #handleInteraction(){\n        if( !ConfigState.isTouchMoving() ){\n            let audio = new Audio();\n            let currentVolume = ConfigState.getVolume();\n            let volumeDecrement = ConfigState.getVolumeDecrement();\n\n            if( currentVolume - volumeDecrement > 0 ){\n                audio.setVolume( currentVolume - volumeDecrement );\n            }else{\n                audio.setVolume( 0 );\n            }\n\n            MuteElement.syncElements();\n            VolumeSliderElement.syncElements();\n        }\n    }\n}","import { ConfigState } from \"@/services/ConfigState\";\nimport { MuteElement } from \"./MuteElement\";\nimport { Audio } from \"@/core/Audio\";\n\n/**\n * Handles the configuration and managing of Volume Slider elements\n * \n * A Volume Slider element is defined as the following:\n * \n * Element: class=\"amplitude-volume-slider\"\n * Type: input[type=\"range\"]\n * \n * Whenever this element is interacted with, the audio volume is adjusted no matter where.\n */\nexport class VolumeSliderElement {\n    static volumeSliderElementQuery = 'input[type=\"range\"].amplitude-volume-slider';\n\n    #elements;\n    #ie;\n\n    constructor(){\n        this.#ie = ConfigState.isIE();\n    }\n\n    setUp(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( VolumeSliderElement.volumeSliderElementQuery );\n    }\n\n    #bindInteractions(){\n        if( ConfigState.isIos() ){\n            Debug.writeMessage(\n                \"iOS does NOT allow volume to be set through javascript: https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html#//apple_ref/doc/uid/TP40009523-CH5-SW4\"\n            );\n        }else{\n            this.#elements.forEach( ( element ) => {\n                if( this.#ie ){\n                    element.removeEventListener( \"change\", this.#handleInteraction );\n                    element.addEventListener( \"change\", this.#handleInteraction );\n                }else{\n                    element.removeEventListener( \"input\", this.#handleInteraction );\n                    element.addEventListener( \"input\", this.#handleInteraction );\n                }\n            });\n        }\n    }\n\n    #handleInteraction(){\n        let audio = new Audio();\n        audio.setVolume( this.value );\n\n        MuteElement.syncElements();\n        VolumeSliderElement.syncElements();\n    }\n    \n\n    static syncElements(){\n        let elements = document.querySelectorAll( VolumeSliderElement.volumeSliderElementQuery );\n\n        elements.forEach( function( element ){\n            element.value = ConfigState.getVolume();\n        });\n    }\n}","import { Audio } from \"@/core/Audio\";\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { MuteElement } from \"./MuteElement\";\nimport { VolumeSliderElement } from \"./VolumeSliderElement\";\nimport { Debug } from \"@/services/Debug\";\n\n/**\n * Handles the configuration and managing of Volume Up elements\n * \n * A Volume Up element is defined as the following:\n * \n * Element: class=\"amplitude-volume-up\"\n * \n * Whenever this element is interacted with, the audio is muted no matter where.\n */\nexport class VolumeUpElement {\n    static volumeUpElementQuery = '.amplitude-volume-up';\n\n    #elements;\n    #mobile;\n\n    constructor(){\n        this.#mobile = ConfigState.isMobile();\n    }\n\n    setUp(){\n        this.#findElements();\n        this.#bindInteractions();\n    }\n\n    #findElements(){\n        this.#elements = document.querySelectorAll( VolumeUpElement.volumeUpElementQuery );\n    }\n\n    #bindInteractions(){\n        if( this.#elements.length > 0 && ConfigState.isIos() ){\n            Debug.writeMessage(\n                \"iOS does NOT allow volume to be set through javascript: https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html#//apple_ref/doc/uid/TP40009523-CH5-SW4\"\n            );\n        }else{\n            this.#elements.forEach( ( element ) => {\n                if( this.#mobile ){\n                    element.removeEventListener( \"touchend\", this.#handleInteraction );\n                    element.addEventListener( \"touchend\", this.#handleInteraction );\n                }else{\n                    element.removeEventListener( \"click\", this.#handleInteraction );\n                    element.addEventListener( \"click\", this.#handleInteraction );\n                }\n            });\n        }\n    }\n\n    #handleInteraction(){\n        if( !ConfigState.isTouchMoving() ){\n            let audio = new Audio();\n            let currentVolume = ConfigState.getVolume();\n            let volumeIncrement = ConfigState.getVolumeIncrement();\n\n            if( currentVolume + volumeIncrement <= 100 ){\n                audio.setVolume( currentVolume + volumeIncrement );\n            }else{\n                audio.setVolume( 100 );\n            }\n\n            MuteElement.syncElements();\n            VolumeSliderElement.syncElements();\n        }\n    }\n}","import { Audio } from '@/core/Audio.js';\nimport { config } from '@/config.js';\nimport { ConfigState } from '@/services/ConfigState';\nimport { Navigation } from '@/services/Collections/Navigation';\nimport { PlayPauseElement } from '@/elements/PlayPauseElement';\n\nexport class AudioEndedEvent{\n    bind(){\n        config.audio_element.removeEventListener( \"ended\", this.#handle );\n        config.audio_element.addEventListener( \"ended\", this.#handle.bind(this) );\n    }\n\n    #handle(){\n        setTimeout( function(){\n            if( ConfigState.getScope() == 'collection' && ConfigState.getContinueNext() ){\n                let navigation = new Navigation();\n                navigation.next( ConfigState.getActiveCollection(), true );\n            }else{\n                let audio = new Audio();\n                audio.stop();\n\n                PlayPauseElement.syncAll();\n            }\n        }, config.delay );\n    }\n}","import { BufferedProgressElement } from '@/elements/BufferedProgressElement';\nimport { ConfigState } from '@/services/ConfigState';\nimport { config } from '@/config.js';\nimport { ProgressElement } from '@/elements/ProgressElement';\nimport { Time } from '@/services/Time';\nimport { TimeElement } from '@/elements/TimeElement';\nimport { TrackerElement } from '@/elements/TrackerElement';\n\nexport class TimeUpdateEvent{\n    bind(){\n        this.#bindTimeUpdate();\n        this.#bindDurationChange();\n    }\n\n    #bindTimeUpdate(){\n        config.audio_element.removeEventListener( \"timeupdate\", this.#handle.bind(this) );\n        config.audio_element.addEventListener( \"timeupdate\", this.#handle.bind(this) );\n    }\n\n    #bindDurationChange(){\n        config.audio_element.removeEventListener( \"durationchange\", this.#handle.bind(this) );\n        config.audio_element.addEventListener( \"durationchange\", this.#handle.bind(this) );\n    }\n\n    #handle(){\n        ConfigState.updateBufferedTime();\n        BufferedProgressElement.syncAll();\n        this.#updateTimeInformation();\n        this.#runTimeCallbacks();\n    }\n\n    #updateTimeInformation(){\n        if( !ConfigState.isLive() ){\n            let time = new Time();\n\n            let currentTime = time.computeCurrentTimes();\n            let completionPercentage = time.computeAudioCompletionPercentage();\n            let duration = time.computeAudioDuration();\n\n            let timeElement = new TimeElement();\n            timeElement.syncCurrentTime( currentTime );\n            timeElement.syncDurationTime( currentTime, duration );\n\n            TrackerElement.syncCurrentTime( completionPercentage );\n            ProgressElement.syncCurrentTime( completionPercentage );\n        }\n    }\n\n    #runTimeCallbacks(){\n\n    }\n}","import { Debug } from \"@/services/Debug\";\nimport { ConfigState } from \"@/services/ConfigState\";\nimport { EventManager } from \"@/services/EventManager\";\nimport { ElementsManager } from \"@/services/ElementsManager\";\nimport { config } from \"../config\";\nimport { Navigation as AudioNavigation } from \"@/services/Audio/Navigation\";\nimport { Callbacks } from \"@/services/Callbacks\";\n\nexport class Initializer{\n    #element;\n    #userConfig;\n    #configState;\n    #ready = false;\n\n    constructor( userConfig, element ){\n        this.#configState = new ConfigState();\n        this.#configState.setIsMobile();\n        this.#userConfig = userConfig;\n        this.#element = element;\n    }\n\n    setup(){\n        if( this.#isValidUrl( this.#userConfig ) ){\n            this.#loadUserConfig();\n        }else{\n            this.#prepareAmplitude();\n        }\n    }\n\n    #isValidUrl(url){\n        try {\n            new URL(url);\n        } catch (e) {\n            Debug.writeMessage('AmplitudeJS must be initialized with a JSON object or a valid URL.')\n            return false;\n        }\n\n        return true;\n    }\n\n    #loadUserConfig(){\n        fetch( this.#userConfig )\n            .then( ( response ) => {\n                if( response.status != 200 ){\n                    throw response.status;\n                }else{\n                    return response.json();\n                }\n            })\n            .then( ( data ) => {\n                this.#userConfig = data;\n                this.#prepareAmplitude();\n            })\n            .catch( ( error ) => {\n                Debug.writeMessage( error );\n            })\n    }\n\n    #prepareAmplitude(){\n        this.#resetConfig();\n        this.#copyUserConfig();\n        this.#initializeAudio();\n        this.#initializeEvents();\n        this.#initializeElements();\n        this.#initializeCallbacks();\n        this.#initializeKeybindingEvents();\n    }\n\n    // Ensure we have a blank slate on initialization.\n    #resetConfig(){\n        this.#configState.resetConfig();\n    }\n\n    #copyUserConfig(){\n        this.#configState.setUserSettings( this.#userConfig );\n    }\n\n    #initializeEvents(){\n        let eventManager = new EventManager();\n        eventManager.initializeAllEvents();\n    }\n\n    #initializeElements(){\n        let elementsManager = new ElementsManager();\n        elementsManager.initializeElements();\n    }\n\n    #initializeAudio(){\n        let audioNavigator = new AudioNavigation();\n\n        if( config.start_audio ){\n    \n        }else{\n            audioNavigator.changeAudio( config.audio[0], 0 );\n        }\n    }\n\n    #initializeCallbacks(){\n        let callbacks = new Callbacks();\n        callbacks.handleNativeAudioElementEvents();\n    }\n\n    #initializeKeybindingEvents(){\n\n    }\n}","import { config } from \"@/config.js\";\n\n/**\n * Returns the current config for AmplitudeJS\n * \n * Public Method: Amplitude.getConfig()\n * \n * @access public\n * @returns {object} \n */\nexport function getConfig(){\n    return config;\n}","import { config } from \"@/config.js\";\nimport { Debug } from \"@/services/Debug\";\n\nconst validEventListeners = [\n    'abort',\n    'error',\n    'loadeddata',\n    'loadedmetadata',\n    'loadstart',\n    'pause',\n    'playing',\n    'play',\n    'progress',\n    'ratechange',\n    'seeked',\n    'seeking',\n    'stalled',\n    'suspend',\n    'timeupdate',\n    'volumechange',\n    'waiting',\n    'canplay',\n    'canplaythrough',\n    'durationchange',\n    'ended'\n];\n\n/**\n * Binds an event listener to a native HTML 5 event\n * emitted from the audio element.\n * \n * Public Accessor: Amplitude.addAudioEventListener( event, method )\n * @access public\n * @param string event - The event name you want to bind a listener to.\n * @param string method - The method you are binding to the event.\n */\nexport function addAudioEventListener( event, method ){\n    if( validEventListeners.indexOf( event ) > -1 ){\n        config.audio_element.addEventListener( event, method );\n    }else{\n        Debug.writeMessage( \"Invalid event listener. Please see all valid events here: https://www.w3schools.com/tags/ref_av_dom.asp\")\n    }\n}","import { Initializer } from \"@/init/Initializer\";\n\n/**\n * The main init function.  The user will call this through\n * Amplitude.init() and pass in their settings.\n *\n * Public Accessor: Amplitude.init( user_config_json )\n * @access public\n * @param {object|url} userConfig - A URL or JSON object of user defined values that help configure and initialize AmplitudeJS.\n * @param {string|element} element - A unique identifier or DOM Element to bind Amplitude methods to.\n */\nexport function init( userConfig = {}, element = null ){\n    let initializer = new Initializer( userConfig, element );\n    initializer.setup();\n}","import { config } from \"@/config.js\";\n\n/**\n * Returns the key of the active playlist\n * \n * Public Method: Amplitude.getActivePlaylist()\n * \n * @access public\n * @returns {string} \n */\n export function getActivePlaylist(){\n    return config.active_playlist;\n}","import { config } from \"@/config\";\n\nexport class Checks {\n    static audioExists( index ){\n        if( config.audio[ index ] ){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    static audioChanged( audioIndex, collectionKey = null ){\n\t\tif( config.active_collection != collectionKey ){\n\t\t\treturn true;\n\t\t}else{\n\t\t\tif( config.active_collection == null && collectionKey == null ){\n\t\t\t\tif( config.active_index != audioIndex ){\n\t\t\t\t\treturn true;\n\t\t\t\t}else{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tif( config.active_collection == collection && \n\t\t\t\t\tconfig.collections[ collectionKey ].active_index != audioIndex ){\n\t\t\t\t\t\treturn true;\n\t\t\t\t}else{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}","import { Audio } from \"@/core/Audio\";\nimport { config } from \"@/config\";\nimport { Callbacks } from \"@/services/Callbacks\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\nimport { MetaDataElement } from \"@/elements/MetaDataElement\";\nimport { ContainerElement } from \"@/elements/ContainerElement\";\n\nexport class Navigation {\n    /**\n     * Change audio in the audio array\n     *\n     * @prop {object} audio - The audio we are changing to.\n     * @prop {number} index - The index we are changing to.\n     * @prop {boolean} direct - Determines if it was a direct click on the song.\n     * We then don't care if shuffle is on or not.\n     */\n    changeAudio( audio, index, direct = false ){\n        this.#prepareAudioChange( audio );\n\n        this.#switchAudio(audio, index);\n\n        this.#afterAudioChange( direct );\n    }\n\n    #prepareAudioChange( audio ){\n        let coreAudio = new Audio();\n        coreAudio.stop();\n\n        // Sync elements\n        PlayPauseElement.syncAllToPause();\n        /**\n         * @todo Song Slider Elements -> reset\n         * @todo Song Played Progress Elements -> reset\n         * @todo Time Elements -> reset \n         * ( See src/utilities/audioNavigation.js Line #528)\n         */\n        /**\n         * @todo we don't have album change callback, make note.\n         */\n    }\n\n    #switchAudio( audio, index ){\n        config.active_collection = null;\n        config.audio_element.src = audio.url;\n        config.active_metadata = audio;\n        /** \n         * @todo We don't have active_album. make note.\n         */\n         config.active_index = parseInt( index );\n    }\n\n    #afterAudioChange( direct ){\n        this.#updateMetaData();\n\n        let containerElements = new ContainerElement();\n        containerElements.setActiveContainers( direct );\n\n        /**\n         * @todo time elements -> reset duration times\n         * ( see src/utilities/audioNavigation.js Line #558 )\n         */\n        Callbacks.run('audio_change');\n    }\n\n    #updateMetaData(){\n        let metaData = new MetaDataElement();\n        metaData.displayMetaData();\n    }\n}","import { config } from \"../config\";\nimport { ConfigState } from \"./ConfigState\";\nimport { Debug } from \"./Debug\";\n\nexport class Callbacks{\n    #events = [\n        'abort',\n        'error',\n        'loadeddata',\n        'loadedmetadata',\n        'loadstart',\n        'pause',\n        'playing',\n        'play',\n        'progress',\n        'ratechange',\n        'seeked',\n        'seeking',\n        'stalled',\n        'suspend',\n        'timeupdate',\n        'volumechange',\n        'waiting',\n        'canplay',\n        'canplaythrough',\n        'durationchange',\n        'ended'\n    ];\n\n    handleNativeAudioElementEvents(){\n        this.#events.forEach( function( event ){\n            config.audio_element.addEventListener( event, function( ){\n                Callbacks.run( event );\n            } );\n        });\n    }\n\n    static run( event ){\n        let callback = ConfigState.getCallback( event );\n\n        if( callback ){\n            Debug.writeMessage( \"Running Callback for event '\" + callback.event + \"' with method '\" + callback.handler + \"'\");\n\n            try {\n                window[callback.handler]();\n            } catch ( error ){\n                if (error.message == \"CANCEL EVENT\") {\n                    throw error;\n                }else{\n                    Debug.writeMessage( error.message );\n                }\n            }\n        }\n    }\n}","import { config } from \"@/config\";\n\nexport class Checks {\n    static collectionExists( key ){\n\t\tif( config.collections[ key ] ){\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tstatic collectionChanged( collection ){\n\t\tif (config.active_collection != collection) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tstatic isCollectionShuffled( collection ){\n        if( config.collections[ collection ].shuffle ){\n            return true;\n        }else{\n            return false;\n        }\n    }\n}","import { Audio } from \"@/core/Audio\";\nimport { config } from \"@/config\";\nimport { Callbacks } from \"@/services/Callbacks\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\nimport { MetaDataElement } from \"@/elements/MetaDataElement\";\nimport { ContainerElement } from \"@/elements/ContainerElement\";\n\nexport class Navigation {\n    /**\n     * Sets the next song in a collection.\n     * \n     * @param {string} collectionKey - The collection to navigate. Defaults to the active collection.\n     * @param {boolean} audioEnded - If the audio ended, this is true to take in effect the repeat setting.\n     */\n    next( collectionKey = null, audioEnded = false ){\n        if( !collectionKey ){\n            collectionKey = config.active_collection;\n        }\n\n        let nextAudio = this.#findNextAudio( collectionKey );\n        \n        this.setActiveCollection( collectionKey );\n        this.changeCollectionAudio( collectionKey, nextAudio.audio, nextAudio.index );\n        this.#playNextAudio( nextAudio.end, audioEnded )\n        \n        PlayPauseElement.syncAll();\n        Callbacks.run(\"next\");\n\n        if( config.repeat_audio ){\n            Callbacks.run(\"audio_repeated\");\n        }\n    }\n\n    #findNextAudio( collectionKey ){\n        if( config.repeat_audio ){\n            return this.#repeatedAudio( collectionKey );\n        }else{\n            if( config.collections[ collectionKey ].shuffle ){\n                return this.#nextShuffledAudio( collectionKey );\n            }else{\n                return this.#nextCollectionAudio( collectionKey );\n            }\n        }\n    }\n\n    #repeatedAudio( collectionKey ){\n        let index =  config.collections[ collectionKey ].active_index;\n\n        return {\n            'index': nextIndex,\n            'audio': config.collections[ collectionKey ].shuffle ?\n                     config.collections[ collectionKey ].shuffle_list[ index ] :\n                     config.collections[ collectionKey ].audio[ index ],\n            'end': false\n        }\n    }\n\n    #nextShuffledAudio( collectionKey ){\n        let nextIndex = null;\n        let endOfList = false;\n\n        let activeIndex = config.collections[ collectionKey ].active_index;\n        let shuffleCollectionLength = config.collections[ collectionKey ].shuffle_list.length;\n       \n        if( parseInt( activeIndex + 1 ) < shuffleCollectionLength ){\n            nextIndex = parseInt( activeIndex + 1 );    \n        }else{\n            nextIndex = 0;\n            endOfList = true;\n        }\n\n        return {\n            'index': nextIndex,\n            'audio': config.collections[ collectionKey ].shuffleList[ nextIndex ],\n            'end': endOfList\n        }\n    }\n\n    #nextCollectionAudio( collectionKey ){\n        let nextIndex = null;\n        let endOfList = false;\n        \n        let activeIndex = config.collections[ collectionKey ].active_index;\n        let collectionLength = config.collections[ collectionKey ].audio.length;\n\n        if( parseInt( activeIndex + 1 ) < collectionLength ){\n            nextIndex = parseInt( activeIndex + 1 );\n        }else{\n            nextIndex = 0;\n            endOfList = true;\n        }\n\n        return {\n            'index': nextIndex,\n            'audio': config.collections[ collectionKey ].audio[ nextIndex ],\n            'end': endOfList\n        }\n    }\n\n    #playNextAudio( endOfList, audioEnded ){\n        // If it's the end of the collection and we aren't repeating, do nothing.\n        if( endOfList && !config.repeat_audio ){\n        }else{\n            if( !( audioEnded && !config.repeat_audio && endOfList ) ){\n                let audio = new Audio();\n                audio.play();\n            }\n        }\n    }\n\n    previous( collectionKey = null ){\n        if( !collectionKey ){\n            collectionKey = config.active_collection;\n        }\n\n        let previousAudio = this.#findPreviousAudio( collectionKey );\n        \n        this.setActiveCollection( collectionKey );\n        this.changeCollectionAudio( collectionKey, previousAudio.audio, previousAudio.index );\n        \n        let audio = new Audio();\n        audio.play();\n        \n        PlayPauseElement.syncAll();\n        Callbacks.run(\"previous\");\n\n        if( config.repeat_audio ){\n            Callbacks.run(\"audio_repeated\");\n        }\n    }\n\n    #findPreviousAudio(){\n        if( config.repeat_audio ){\n            return this.#repeatedAudio( collectionKey );\n        }else{\n            if( config.collections[ collectionKey ].shuffle ){\n                return this.#previousShuffledAudio( collectionKey );\n            }else{\n                return this.#previousCollectionAudio( collectionKey );\n            }\n        }\n    }\n\n    #previousShuffledAudio( collectionKey ){\n        let previousIndex = null;\n\n        let activeIndex = config.collections[ collectionKey ].active_index;\n        let shuffleCollectionLength = config.collections[ collectionKey ].shuffle_list.length;\n        \n        if( parseInt( activeIndex - 1 ) >= 0 ){\n            previousIndex =  parseInt( activeIndex - 1 );\n        }else{\n            previousIndex = parseInt( shuffleCollectionLength - 1 );\n        }\n\n        return {\n            'index': previousIndex,\n            'audio': config.collections[ collectionKey ].shuffleList[ previousIndex ]\n        }\n    }\n\n    #previousCollectionAudio( collectionKey ){\n        let previousIndex = null;\n\n        let activeIndex = config.collections[ collectionKey ].active_index;\n        let collectionLength = config.collections[ collectionKey ].audio.length;\n        \n        if( parseInt( activeIndex - 1 ) >= 0 ){\n            previousIndex =  parseInt( activeIndex - 1 );\n        }else{\n            previousIndex = parseInt( collectionLength - 1 );\n        }\n\n        return {\n            'index': previousIndex,\n            'audio': config.collections[ collectionKey ].audio[ previousIndex ]\n        }\n    }\n\n    setActiveCollection( collection ){\n        if( config.active_collection != collection ){\n            Callbacks.run(\"collection_changed\");\n\n            config.active_collection = collection;\n\n            if( collection != null ){\n                config.collections[ collection ].active_index = 0;\n            }\n        }\n    }\n\n    /**\n     * Handles audio change in a collection\n     *\n     * @prop {string} collection - The collection we are changing the song on.\n     * @prop {object} audio - The audio object we are changing to in the collection.\n     * @prop {number} index - The index of the song we are changing to in the collection.\n     * @prop {boolean} direct - Determines if it was a direct click on the song. We\n     * then don't care if shuffle is on or not\n     */\n    changeAudioCollection( collection, audio, index, direct ){\n        this.#prepareAudioChange( audio );\n\n        this.#switchAudio( collection, audio, index );\n\n        this.#afterAudioChange( direct );\n    }\n\n    #prepareAudioChange( audio ){\n        Audio.stop();\n\n        // Sync elements\n        PlayPauseElement.syncAllToPause();\n        /**\n         * @todo Song Slider Elements -> reset\n         * @todo Song Played Progress Elements -> reset\n         * @todo Time Elements -> reset \n         * ( See src/utilities/audioNavigation.js Line #528)\n         */\n        /**\n         * @todo we don't have album change callback, make note.\n         */\n    }\n\n    #switchAudio( collection, audio, index ){\n        config.audio_element = audio.url;\n        config.active_metadata = audio;\n        /** \n         * @todo We don't have active_album. make note.\n         */\n        config.active_index = null;\n        config.collections[collection].active_index = parseInt(index);\n    }\n\n    #afterAudioChange( direct ){\n        this.#updateMetaData();\n\n        let containerElements = new ContainerElement();\n        containerElements.setActiveContainers( direct );\n        \n        /**\n\n         * @todo time elements -> reset duration times\n         * ( see src/utilities/audioNavigation.js Line #558 )\n         */\n        Callbacks.run('audio_change');\n    }\n\n    #updateMetaData(){\n        let metaData = new MetaDataElement();\n        metaData.displayMetaData();\n    }\n}","import { ConfigState } from '@/services/ConfigState';\n\nexport class Shuffle {\n    #collection\n\n    constructor( collection ){\n        this.#collection = collection;\n    }\n\n    toggleShuffle( collection ){\n        let isShuffled = ConfigState.isCollectionShuffled( collection );\n\n        if( isShuffled ){\n            ConfigState.setCollectionShuffled( collection, false, [] );\n        }else{\n            let shuffledAudio = this.#shuffleAudio( collection );\n            ConfigState.setCollectionShuffled( collection, true, shuffledAudio );\n        }\n    }\n\n    #shuffleAudio( collection ){\n        let audio = ConfigState.getCollectionAudio( collection );\n        let shuffleTemp = new Array( audio.length );\n\n        audio.forEach( ( audio, index ) => {\n            shuffleTemp[ index ] = audio[ index ]\n        });\n\n        for( let i = audio.length - 1; i > 0; i-- ){\n            let randomNumber = Math.floor(\n                Math.random() * audio.length + 1\n            );\n\n            this.#shuffleSwap( shuffleTemp, i, randomNumber - 1);\n        }\n\n        return shuffleTemp;\n    }\n\n    #shuffleSwap( list, original, random ){\n        let temp = list[ original ];\n        list[ original ] = list[ random ];\n        list[ random ] = temp;\n    }\n}","import { config } from '@/config.js';\nimport { MuteElement } from '@/elements/MuteElement';\nimport { PlaybackSpeedElement } from '@/elements/PlaybackSpeedElement';\n\nexport class ConfigState{\n\tsetIsMobile(){\n\t\tif ( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test( navigator.userAgent ) ) {\n\t\t\tconfig.mobile = true;\n\t\t}else{\n\t\t\tconfig.mobile = false;\n\t\t}\n\t}\n\n\tstatic isIos(){\n\t\treturn /iPhone|iPad|iPod/i.test( navigator.userAgent );\n\t}\n\n\tstatic isIE(){\n\t\tlet ua = window.navigator.userAgent;\n\t\tlet msie = ua.indexOf(\"MSIE \");\n\n\t\treturn ( msie > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./) );\n\t}\n\n\tstatic isMobile(){\n\t\treturn config.mobile;\n\t}\n\n\tstatic isTouchMoving(){\n\t\treturn config.is_touch_moving;\n\t}\n\n\tstatic getAudioState(){\n\t\treturn config.audio_element.paused ? \"paused\" : \"playing\";\n\t}\n\n\tstatic getScope(){\n\t\tif( config.active_collection == '' || config.active_collection == null ){\n\t\t\treturn 'audio';\n\t\t}else{\n\t\t\treturn 'collection';\n\t\t}\n\t}\n\n\tstatic getVolume(){\n\t\treturn config.volume.current;\n\t}\n\n\tstatic getVolumeIncrement(){\n\t\treturn config.volume.increment;\n\t}\n\n\tstatic getVolumeDecrement(){\n\t\treturn config.volume.decrement;\n\t}\n\n\tstatic getPreMuteVolume(){\n\t\treturn config.volume.pre_mute_level;\n\t}\n\n\tstatic setPreMuteVolume( level = null ){\n\t\tif( !level ){\n\t\t\tlevel = config.volume.current;\n\t\t}\n\n\t\tconfig.volume.pre_mute_level = level;\n\t}\n\n\tstatic getPlaybackSpeed(){\n\t\treturn config.playback_speed;\n\t}\n\n\tstatic isCollectionShuffled( collection ){\n\t\tif( config.collections[ collection ] && config.collections[ collection ].shuffled ){\n\t\t\treturn true;\n\t\t}else{ \n\t\t\treturn false;\n\t\t}\n\t}\n\n\tstatic setCollectionShuffled( collection, shuffled, audio ){\n\t\tconfig.collections[ collection ].shuffled = shuffled;\n\t\tconfig.collections[ collection ].audio = audio;\n\t}\n\n\tstatic getCollectionAudio( collection ){\n\t\treturn config.collections[ collection ].audio;\n\t}\n\n\tstatic getActiveCollection(){\n\t\treturn config.active_collection;\n\t}\n\n\tstatic getActiveAudioIndex(){\n\t\treturn config.active_index;\n\t}\n\n\tstatic getContinueNext(){\n\t\treturn config.continue_next;\n\t}\n\n\tstatic updateBufferedTime(){\n\t\t// Help from: http://jsbin.com/badimipi/1/edit?html,js,output\n        if( config.audio_element.buffered.length - 1 >= 0 ){\n            let bufferedEnd = config.audio_element.buffered.end(\n                config.audio_element.buffered.length - 1\n            );\n\n            let duration = config.audio_element.duration;\n\n            config.buffered = ( bufferedEnd / duration ) * 100;\n        }\n\t}\n\n\tstatic getBufferedPercentage(){\n\t\treturn parseFloat( config.buffered ) / 100;\n\t}\n\n\tstatic isLive(){\n\t\treturn config.active_metadata.live;\n\t}\n\n\tstatic getTimeFormat(){\n\t\treturn config.time_format;\n\t}\n\n\tstatic getCallback( name ){\n\t\tlet callbackObject = false;\n\n\t\tconfig.callbacks.forEach( function( callback ){\n\t\t\tif( callback.event == name ){\n\t\t\t\tcallbackObject = callback\n\t\t\t}\n\t\t});\n\n\t\treturn callbackObject;\n\t}\n\n\tresetConfig(){\n\t\tconfig.audio_element = new Audio();\n\t\tconfig.active_metadata = {};\n\t\tconfig.active_album = \"\";\n\t\tconfig.active_index = 0;\n\t\tconfig.active_playlist = null;\n\t\tconfig.playback_speed = 1.0;\n\t\tconfig.audio = [];\n\t\tconfig.playlists = {};\n\t\tconfig.start_audio = \"\";\n\t\tconfig.starting_playlist = \"\";\n\t\tconfig.starting_playlist_song = \"\";\n\t\tconfig.repeat = false;\n\t\tconfig.shuffle_list = {};\n\t\tconfig.shuffle_on = false;\n\t\tconfig.default_artwork = \"\";\n\t\tconfig.default_playlist_art = \"\";\n\t\tconfig.debug = true;\n\n\t\tconfig.volume =  {\n\t\t\tcurrent: 50,\n\t\t\tincrement: 5,\n\t\t\tdecrement: 5,\n\t\t\tpre_mute_level: 50\n\t\t},\n\n\t\tconfig.soundcloud = {\n\t\t\tclient: '',\n\t\t\tuse_art: false,\n\t\t\taudio_count: 0,\n\t\t\tready_count: 0\n\t\t},\n\n\t\t/**\n\t\t * @todo BREAKING CHANGE\n\t\t */\n\t\t// config.soundcloud_client = \"\";\n\t\t// config.soundcloud_use_art = false;\n\t\t// config.soundcloud_song_count = 0;\n\t\t// config.soundcloud_songs_ready = 0;\n\t\tconfig.continue_next = true;\n\n\t\t/**\n\t\t * @todo rebind event handlers\n\t\t */\n\t\t\n\t}\n\n\tsetUserSettings( userConfig ){\n\t\tthis.setAudio( userConfig.audio );\n\t\tthis.setVolume( userConfig.volume );\n\t\tthis.setDebug( userConfig.debug );\n\t\tthis.setDefaultArtwork( userConfig.default_artwork );\n\t\tthis.setCollections( userConfig.collections );\n\t\tthis.setPlaybackSpeed( userConfig.playback_speed );\n\t\tthis.setCallbacks( userConfig.callbacks );\n\t}\n\n\tsetAudio( value ){\n\t\tconfig.audio = value != undefined ? value : [];\n\n\t\tthis.#setDefaultLiveSettings();\n\t\tthis.#setDefaultAudioIndices();\n\t}\n\n\tsetVolume( volume ){\n\t\tconfig.volume.current = volume && volume.initial ? volume.initial : 50;\n\t\tconfig.volume.increment = volume && volume.increment ? volume.increment : 5;\n\t\tconfig.volume.decrement = volume && volume.decrement ? volume.decrement : 5;\n\n\t\tMuteElement.syncElements();\n\t}\n\n\tsetDebug( value ){\n\t\tconfig.debug = value != undefined ? value : false;\n\t}\n\n\tsetDefaultArtwork( value ){\n\t\tconfig.default_artwork = value != undefined ? value : false;\n\t}\n\n\tsetCollections( collections ){\n\t\t// @todo set collections\n\t}\n\n\tsetPlaybackSpeed( speed ){\n\t\tconfig.playback_speed = speed != undefined ? speed : 1.0;\n\n\t\tPlaybackSpeedElement.syncElements();\n\t}\n\n\tsetCallbacks( callbacks ){\n\t\tconfig.callbacks = callbacks != undefined ? callbacks : {};\n\t}\n\n\t#setDefaultLiveSettings(){\n\t\tconfig.audio.forEach( ( audio, index ) => {\n\t\t\tif( audio.live == undefined ){\n\t\t\t\taudio.live = false;\n\t\t\t}\n\t\t});\n\t}\n\n\t#setDefaultAudioIndices(){\n\t\tconfig.audio.forEach( ( audio, index ) => {\n\t\t\taudio.index = index;\n\t\t});\n\t}\n\n\n\tstatic setPlayerState(){\n\t\t// If paused and the current time is 0 the player is stopped.\n\t\tif (config.audio_element.paused && config.audio_element.currentTime == 0) {\n\t\t\tconfig.player_state = \"stopped\";\n\t\t}\n  \n\t\t// If paused and the current time is greater than 0 the player is paused.\n\t\tif (config.audio_element.paused && config.audio_element.currentTime > 0) {\n\t\t\tconfig.player_state = \"paused\";\n\t\t}\n  \n\t\t// If playing, the current state is playing.\n\t\tif (!config.audio_element.paused) {\n\t\t\tconfig.player_state = \"playing\";\n\t\t}\n\t}\n}","import { config } from \"@/config.js\";\n\nexport class Debug{\n\tstatic writeMessage( message ){\n\t\tif( config.debug ){\n\t\t\tconsole.log( message );\n\t\t}\n\t}\n}","import { NextElement } from \"@/elements/NextElement\";\nimport { MetaDataElement } from \"@/elements/MetaDataElement\";\nimport { MuteElement } from \"@/elements/MuteElement\";\nimport { PauseElement } from \"@/elements/PauseElement\";\nimport { PlayElement } from \"@/elements/PlayElement\";\nimport { PlaybackSpeedElement } from \"@/elements/PlaybackSpeedElement\";\nimport { PlayPauseElement } from \"@/elements/PlayPauseElement\";\nimport { PreviousElement } from \"@/elements/PreviousElement\";\nimport { ShuffleElement } from \"@/elements/ShuffleElement\";\nimport { SkipToElement } from \"@/elements/SkipToElement\";\nimport { StopElement } from \"@/elements/StopElement\";\nimport { TrackerElement } from \"@/elements/TrackerElement\";\nimport { VolumeDownElement } from \"@/elements/VolumeDownElement\";\nimport { VolumeSliderElement } from \"@/elements/VolumeSliderElement\";\nimport { VolumeUpElement } from \"@/elements/VolumeUpElement\";\n\nexport class ElementsManager{\n    setVisualElementsDefaults(){\n\n    }\n\n    initializeElements(){\n        this.#initializeMetaData();\n        this.#initializePlayElement();\n        this.#initializePauseElement();\n        this.#initializePlayPauseElement();\n        this.#initializeNextElement();\n        this.#initializePreviousElement();\n        this.#initializeMuteElement();\n        this.#initializeVolumeSliderElement();\n        this.#initializePlaybackSpeedElement();\n        this.#initializeStopElement();\n        this.#initializeVolumeDownElement();\n        this.#initializeVolumeUpElement();\n        this.#initializeShuffleElement();\n        this.#initializeSkipToElement();\n        this.#initializeTrackerElement();\n    }\n\n    #initializeMetaData(){\n        let metaDataElement = new MetaDataElement();\n        metaDataElement.syncMetaData();\n    }\n\n    #initializePlayElement(){\n        let playElement = new PlayElement();\n        playElement.setUp();\n    }\n\n    #initializePauseElement(){\n        let pauseElement = new PauseElement();\n        pauseElement.setUp();\n    }\n\n    #initializePlayPauseElement(){\n        let playPauseElement = new PlayPauseElement();\n        playPauseElement.setUp();\n    }\n\n    #initializeNextElement(){\n        let nextElement = new NextElement();\n        nextElement.setUp();\n    }\n\n    #initializePreviousElement(){\n        let previousElement = new PreviousElement();\n        previousElement.setUp();\n    }\n\n    #initializeMuteElement(){\n        let muteElement = new MuteElement();\n        muteElement.setUp();\n    }\n\n    #initializeVolumeSliderElement(){\n        let volumeSliderElement = new VolumeSliderElement();\n        volumeSliderElement.setUp();\n    }\n\n    #initializePlaybackSpeedElement(){\n        let playbackSpeedElement = new PlaybackSpeedElement();\n        playbackSpeedElement.setUp();\n    }\n\n    #initializeStopElement(){\n        let stopElement = new StopElement();\n        stopElement.setUp();\n    }\n\n    #initializeVolumeDownElement(){\n        let volumeDownElement = new VolumeDownElement();\n        volumeDownElement.setUp();\n    }\n\n    #initializeVolumeUpElement(){\n        let volumeUpElement = new VolumeUpElement();\n        volumeUpElement.setUp();\n    }\n\n    #initializeShuffleElement(){\n        let shuffleElement = new ShuffleElement();\n        shuffleElement.setUp();\n    }\n\n    #initializeSkipToElement(){\n        let skipToElement = new SkipToElement();\n        skipToElement.setUp();\n    }\n\n    #initializeTrackerElement(){\n        let trackerElement = new TrackerElement();\n        trackerElement.setUp();\n    }\n}","// import { ProgressEvent } from \"@/events/ProgressEvent\";\nimport { AudioEndedEvent } from \"@/events/AudioEndedEvent\";\nimport { TimeUpdateEvent } from \"@/events/TimeUpdateEvent\";\nimport { Debug } from \"@/services/Debug\";\nimport { config } from \"@/config.js\";\n\nexport class EventManager{\n    initializeAllEvents(){\n        Debug.writeMessage(\"Starting initialization of event handlers...\");\n\n        this.#bindTouchEvents();\n        this.#bindTimeUpdateEvents();\n        this.#bindKeyBindingEvents();\n        this.#bindAudioEndedEvent();\n        // this.#bindProgressEvent();\n        this.#bindAudioElementEventCallbacks();\n    }\n\n    #bindTouchEvents(){\n        document.addEventListener(\"touchmove\", () => {\n            config.is_touch_moving = true;\n        });\n\n        document.addEventListener(\"touchend\", () => {\n            if( !config.is_touch_moving ){\n                config.is_touch_moving = false;\n            }\n        })\n    }\n\n    #bindTimeUpdateEvents(){\n        let timeUpdateEvent = new TimeUpdateEvent();\n        timeUpdateEvent.bind();\n    }\n\n    #bindKeyBindingEvents(){\n\n    }\n\n    #bindAudioEndedEvent(){\n        let audioEndedEvent = new AudioEndedEvent();\n        audioEndedEvent.bind();\n    }\n\n    #bindProgressEvent(){\n        let progressEvent = new ProgressEvent();\n        progressEvent.bind();\n    }\n\n    #bindAudioElementEventCallbacks(){\n\n    }\n}","import { config } from \"@/config\";\n\nexport class Time {\n    static percentageInSeconds( percentage ){\n        return config.audio_element.duration * (percentage / 100);\n    }\n\n    computeCurrentTimes(){\n        let currentTime = {};\n\n        currentTime.seconds = this.#findCurrentSeconds();\n        currentTime.minutes = this.#findCurrentMinutes();\n        currentTime.hours = this.#findCurrentHours();\n\n        return currentTime;\n    }\n\n    #findCurrentSeconds(){\n        let seconds = ( Math.floor( config.audio_element.currentTime % 60 ) < 10 ? \"0\" : \"\" ) +\n                            Math.floor( config.audio_element.currentTime % 60 );\n\n        return seconds;\n    }\n\n    #findCurrentMinutes(){\n        let minutes = Math.floor( config.audio_element.currentTime / 60 );\n\n        if( minutes < 10 ){\n            minutes = \"0\"+minutes;\n        }\n\n        return minutes;\n    }\n\n    #findCurrentHours(){\n        let hours = Math.floor( config.audio_element.currentTime / 3600 );\n\n        if( hours < 10 ){\n            hours = \"0\"+hours;\n        }\n\n        return hours;\n    }\n\n    computeAudioCompletionPercentage(){\n        return ( config.audio_element.currentTime / config.audio_element.duration ) * 100;\n    }\n\n    computeAudioDuration(){\n        let audioDuration = {};\n\n        audioDuration.seconds = this.#findAudioDurationSeconds();\n        audioDuration.minutes = this.#findAudioDurationMinutes();\n        audioDuration.hours = this.#findAudioDurationHours();\n\n        return audioDuration;\n    }\n\n    #findAudioDurationSeconds(){\n        let seconds = ( Math.floor( config.audio_element.duration % 60 ) < 10 ? \"0\" : \"\" ) +\n                        Math.floor( config.audio_element.duration % 60 );\n\n        return seconds;\n    }\n\n    #findAudioDurationMinutes(){\n        let minutes = Math.floor( config.audio_element.duration / 60 );\n\n        if( minutes < 10 ){\n            minutes = \"0\"+minutes;\n        }\n\n        return minutes;\n    }\n\n    #findAudioDurationHours(){\n        let hours = Math.floor( config.audio_element.duration / 3600 );\n\n        if( hours < 10 ){\n            hours = \"0\"+hours;\n        }\n\n        return hours;\n    }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * @name AmplitudeJS\n * @author Dan Pastori (Server Side Up) <hello@serversideup.net>\n */\nimport * as initMethods from \"@/methods/init\";\nimport * as configMethods from \"@/methods/config\";\nimport * as playlistMethods from \"@/methods/playlists\";\nimport * as eventListeners from \"@/methods/eventListeners\";\n\n/**\n * Amplitude is an interface to the public methods.\n * All public methods are in the /methods directory.\n * These methods use clases to perform functionality.\n * The state is stored in /config.js\n *\n * @module Amplitude\n */\nconst Amplitude = (function(){\n    return {\n        ...initMethods,\n        ...configMethods,\n        ...playlistMethods,\n        ...eventListeners\n    }\n})();\n\n\nexport default Amplitude;"],"names":["version","config","audio_element","Audio","mobile","active_metadata","active_album","active_index","active_podcast","active_playlist","active_collection","playback_speed","repeat","shuffle_list","repeat_audio","shuffle_on","callbacks","songs","episodes","audio","playlists","seasons","podcasts","debug","default_artwork","default_playlist_art","start_audio","starting_playlist","starting_playlist_song","starting_podcast","starting_podcast_episode","volume","current","increment","decrement","pre_mute_level","soundcloud","client","use_art","audio_count","ready_count","is_touch_moving","buffered","bindings","continue_next","delay","player_state","time_format","web_audio_api","availabile","context","source","analyser","visualizations","available","active","backup","waveforms","sample_rate","built","Callbacks","ConfigState","Debug","setPlayerState","setCurrentTime","run","seconds","live","addEventListener","duration","currentTime","writeMessage","once","volumeLevel","percentage","playbackSpeed","playbackRate","isFinite","isMobile","paused","src","url","load","playPromise","play","undefined","then","_","error","pause","muted","GlobalBufferedProgressElement","CollectionBufferedProgressElement","CollectionAudioBufferedProgressElement","AudioBufferedProgressElement","BufferedProgressElement","syncUI","activeIndex","getActiveAudioIndex","elements","document","querySelectorAll","forEach","element","isNaN","value","parseFloat","getBufferedPercentage","activeCollection","getActiveCollection","globalBufferedProgressQuery","AudioContainerElement","CollectionAudioContainerElement","ContainerElement","direct","audioContainerElements","setActive","collectionAudioContainerElements","getScope","audioContainerElementQuery","classList","remove","activeContainerElements","add","collectionAudioContainerElementQuery","collections","isCollectionShuffled","index","MetaDataElement","displayCollectionMetaData","globalAudioInfoElements","globalMetaDataElementsQuery","key","getAttribute","collectionInfoElements","collectionMetaDataElementsQuery","audioInfoElements","audioMetaDataElementsQuery","audioIndex","collectionAudioInfoElements","collectionAudioMetaDataElementsQuery","collectionKey","info","indexOf","default_art","setAttribute","innerHTML","VolumeSliderElement","MuteElement","muteElementQuery","getVolume","isIos","removeEventListener","isTouchMoving","setVolume","getPreMuteVolume","setPreMuteVolume","syncElements","CollectionNextElement","GlobalNextElement","NextElement","globalNextElement","initialize","collectionNextElement","Navigation","CollectionNavigation","collectionNextQuery","collectionNavigation","next","globalNextQuery","GlobalPauseElement","CollectionPauseElement","AudioPauseElement","CollectionAudioPauseElement","PauseElement","globalPauseElement","collectionPauseElement","audioPauseElement","collectionAudioPauseElement","PlayPauseElement","audioPauseQuery","syncAll","collectionAudioPauseQuery","bind","collectionPauseQuery","globalPauseQuery","GlobalPlayElement","CollectionPlayElement","AudioPlayElement","CollectionAudioPlayElement","PlayElement","globalPlayElement","collectionPlayElement","audioPlayElement","collectionAudioPlayElement","Checks","AudioChecks","AudioNavigation","CollectionChecks","audioPlayQuery","audioExists","collectionChanged","audioNavigation","setActiveCollection","changeAudio","audioChanged","collectionAudioPlayQuery","changeAudioCollection","collectionPlayQuery","collection","collectionExists","globalPlayQuery","GlobalPlayPauseElement","CollectionPlayPauseElement","AudioPlayPauseElement","CollectionAudioPlayPauseElement","syncToPause","globalPlayPauseElement","collectionPlayPauseElement","audioPlayPauseElement","collectionAudioPlayPauseElement","state","getAudioState","audioPlayPauseQuery","activeAudioIndex","elementAudioIndex","setElementPlay","setElementPause","collectionAudioPlayPauseQuery","collectionPlayPauseQuery","activeCollectionKey","elementCollectionKey","globalPlayPauseQuery","PlaybackSpeedElement","playbackSpeedElementQuery","getPlaybackSpeed","setPlaybackSpeed","CollectionPreviousElement","GlobalPreviousElement","PreviousElement","globalPreviousElement","collectionPreviousElement","collectionPreviousQuery","previous","globalPreviousQuery","GlobalProgressElement","CollectionProgressElement","AudioProgressElement","CollectionAudioProgressElement","ProgressElement","completionPercentage","audioProgressQuery","max","collectionAudioProgressQuery","collectionProgressQuery","globalProgressQuery","CollectionShuffleElement","GlobalShuffleElement","ShuffleElement","globalShuffleElement","collectionShuffleElement","Shuffle","collectionShuffleQuery","shuffle","toggleShuffle","globalShuffleQuery","AudioSkipToElement","CollectionAudioSkipToElement","SkipToElement","audioSkipToElement","collectionAudioSkipToElement","audioSkipToElementQuery","location","parseInt","skipToLocation","collectionAudioSkipToElementQuery","StopElement","stopElementQuery","stop","GlobalCurrentTimeElement","CollectionCurrentTimeElement","AudioCurrentTimeElement","CollectionAudioCurrentTimeElement","GlobalDurationElement","CollectionDurationElement","AudioDurationElement","CollectionAudioDurationElement","TimeElement","globalCurrentTimeElement","sync","collectionCurrentTimeElement","audioCurrentTimeElement","collectionAudioCurrentTimeElement","timeFormat","getTimeFormat","audioFormattedTimeElementQuery","formattedTime","replace","hours","minutes","audioHoursTimeElementQuery","audioMinutesTimeElementQuery","audioSecondsTimeElementQuery","collectionAudioFormattedTimeElementQuery","collectionAudioHoursTimeElementQuery","collectionAudioMinutesTimeElementQuery","collectionAudioSecondsTimeElementQuery","collectionFormattedTimeElementQuery","collectionHoursTimeElementQuery","collectionMinutesTimeElementQuery","collectionSecondsTimeElementQuery","globalFormattedTimeElementQuery","globalHoursTimeElementQuery","globalMinutesTimeElementQuery","globalSecondsTimeElementQuery","GlobalTrackerElement","CollectionTrackerElement","AudioTrackerElement","CollectionAudioTrackerElement","TrackerElement","globalTrackerElement","collectionTrackerElement","audioTrackerElement","collectionAudioTrackerElement","Time","isIE","audioTrackerQuery","isLive","locationPercentage","trackedLocation","percentageInSeconds","collectionAudioTrackerQuery","collectionTrackerQuery","globalTrackerQuery","VolumeDownElement","volumeDownElementQuery","length","currentVolume","volumeDecrement","getVolumeDecrement","volumeSliderElementQuery","VolumeUpElement","volumeUpElementQuery","volumeIncrement","getVolumeIncrement","AudioEndedEvent","setTimeout","getContinueNext","navigation","TimeUpdateEvent","updateBufferedTime","time","computeCurrentTimes","computeAudioCompletionPercentage","computeAudioDuration","timeElement","syncCurrentTime","syncDurationTime","EventManager","ElementsManager","Initializer","userConfig","setIsMobile","URL","e","fetch","response","status","json","data","resetConfig","setUserSettings","eventManager","initializeAllEvents","elementsManager","initializeElements","audioNavigator","handleNativeAudioElementEvents","getConfig","validEventListeners","addAudioEventListener","event","method","init","initializer","setup","getActivePlaylist","coreAudio","syncAllToPause","containerElements","setActiveContainers","metaData","displayMetaData","callback","getCallback","handler","window","message","audioEnded","nextAudio","changeCollectionAudio","end","previousAudio","nextIndex","endOfList","shuffleCollectionLength","shuffleList","collectionLength","previousIndex","isShuffled","setCollectionShuffled","shuffledAudio","getCollectionAudio","shuffleTemp","Array","i","randomNumber","Math","floor","random","list","original","temp","test","navigator","userAgent","setAudio","setDebug","setDefaultArtwork","setCollections","setCallbacks","initial","speed","ua","msie","match","level","shuffled","bufferedEnd","name","callbackObject","console","log","metaDataElement","syncMetaData","playElement","setUp","pauseElement","playPauseElement","nextElement","previousElement","muteElement","volumeSliderElement","playbackSpeedElement","stopElement","volumeDownElement","volumeUpElement","shuffleElement","skipToElement","trackerElement","timeUpdateEvent","audioEndedEvent","progressEvent","ProgressEvent","audioDuration","initMethods","configMethods","playlistMethods","eventListeners","Amplitude"],"sourceRoot":""}